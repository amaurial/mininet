<scope ilk="blob" lang="Perl" name="Perl::Critic::Policy::ValuesAndExpressions::ProhibitComplexVersion">
      <scope ilk="class" line="8" lineend="192" name="Perl::Critic::Policy::ValuesAndExpressions::ProhibitComplexVersion">
        <import line="14" module="Carp" symbol="*" />
        <import line="15" module="English" symbol="-no_match_vars" />
        <import line="16" module="Perl::Critic::Utils" symbol="**" />
        <import line="18" module="Perl::Critic::Utils::PPI" symbol="get_next_element_in_same_simple_statement" />
        <import line="19" module="Perl::Critic::Utils::PPI" symbol="get_previous_module_used_on_same_line" />
        <import line="20" module="Perl::Critic::Utils::PPI" symbol="is_ppi_simple_statement" />
        <import line="22" module="Readonly" symbol="*" />
        <import line="23" module="Scalar::Util" symbol="blessed" />
        <variable line="27" name="$VERSION" />
        <scope ilk="function" line="44" lineend="53" name="supported_parameters" signature="supported_parameters()" />
        <scope ilk="function" line="54" lineend="54" name="default_severity" signature="default_severity()" />
        <scope ilk="function" line="55" lineend="55" name="default_themes" signature="default_themes()" />
        <scope ilk="function" line="56" lineend="56" name="applies_to" signature="applies_to()" />
        <scope ilk="function" line="60" lineend="100" name="violates" signature="violates($self, $elem, $doc)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="$elem" />
          <variable ilk="argument" name="$doc" />
        </scope>
        <scope ilk="function" line="108" lineend="126" name="_get_simple_statement" signature="_get_simple_statement($self, $elem)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="$elem" />
        </scope>
        <scope ilk="function" line="130" lineend="190" name="_validate_fully_qualified_symbols" signature="_validate_fully_qualified_symbols($self, $elem, $statement, $doc)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="$elem" />
          <variable ilk="argument" name="$statement" />
          <variable ilk="argument" name="$doc" />
        </scope>
      </scope>
    </scope>
    