<scope ilk="blob" lang="Perl" name="Moose::Meta::TypeConstraint::Union">
      <scope ilk="class" line="2" lineend="276" name="Moose::Meta::TypeConstraint::Union">
        <import line="12" module="metaclass" symbol="*" />
        <import line="14" module="Moose::Meta::TypeCoercion::Union" symbol="*" />
        <import line="16" module="List::Util" symbol="first" />
        <variable line="4" name="$Moose::Meta::TypeConstraint::Union::AUTHORITY" />
        <variable line="7" name="$Moose::Meta::TypeConstraint::Union::VERSION" />
        <scope ilk="function" line="25" lineend="39" name="new" signature="new($class, %options)">
          <variable ilk="argument" name="$class" />
          <variable ilk="argument" name="%options" />
        </scope>
        <scope ilk="function" line="45" lineend="59" name="coercion" signature="coercion($self)">
          <variable ilk="argument" name="$self" />
        </scope>
        <scope ilk="function" line="61" lineend="63" name="has_coercion" signature="has_coercion()" />
        <scope ilk="function" line="65" lineend="77" name="_actually_compile_type_constraint" signature="_actually_compile_type_constraint($self, $value)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="$value" />
        </scope>
        <scope ilk="function" line="80" lineend="103" name="equals" signature="equals($self, $type_or_name)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="$type_or_name" />
        </scope>
        <scope ilk="function" line="105" lineend="108" name="parents" signature="parents($self)">
          <variable ilk="argument" name="$self" />
        </scope>
        <scope ilk="function" line="110" lineend="120" name="validate" signature="validate($self, $value)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="$value" />
        </scope>
        <scope ilk="function" line="122" lineend="126" name="find_type_for" signature="find_type_for($self, $value)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="$value" />
        </scope>
        <scope ilk="function" line="128" lineend="134" name="is_a_type_of" signature="is_a_type_of($self, $type_name)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="$type_name" />
        </scope>
        <scope ilk="function" line="136" lineend="142" name="is_subtype_of" signature="is_subtype_of($self, $type_name)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="$type_name" />
        </scope>
        <scope ilk="function" line="144" lineend="165" name="create_child_type" signature="create_child_type($self, %opts)">
          <variable ilk="argument" name="$self" />
          <variable ilk="argument" name="%opts" />
        </scope>
      </scope>
    </scope>
    