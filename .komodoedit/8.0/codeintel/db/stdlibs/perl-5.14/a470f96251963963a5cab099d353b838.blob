<scope ilk="blob" lang="Perl" name="Perl::Critic::Policy::CodeLayout::ProhibitParensWithBuiltins">
      <scope ilk="class" line="8" lineend="186" name="Perl::Critic::Policy::CodeLayout::ProhibitParensWithBuiltins">
        <import line="13" module="Readonly" symbol="*" />
        <import line="15" module="List::MoreUtils" symbol="any" />
        <import line="17" module="Perl::Critic::Utils" symbol="**" />
        <variable line="22" name="$VERSION" />
        <scope ilk="function" line="62" lineend="62" name="supported_parameters" signature="supported_parameters()" />
        <scope ilk="function" line="63" lineend="63" name="default_severity" signature="default_severity()" />
        <scope ilk="function" line="64" lineend="64" name="default_themes" signature="default_themes()" />
        <scope ilk="function" line="65" lineend="65" name="applies_to" signature="applies_to()" />
        <scope ilk="function" line="69" lineend="91" name="violates" signature="violates()">
          </scope>
        <scope ilk="function" line="98" lineend="108" name="_is_named_unary_with_operator_following_parens_exemption" signature="_is_named_unary_with_operator_following_parens_exemption($elem, $elem_after_parens)">
          <variable ilk="argument" name="$elem" />
          <variable ilk="argument" name="$elem_after_parens" />
        </scope>
        <scope ilk="function" line="110" lineend="114" name="_is_named_unary" signature="_is_named_unary($elem)">
          <variable ilk="argument" name="$elem" />
        </scope>
        <scope ilk="function" line="122" lineend="132" name="_is_precedence_exemption" signature="_is_precedence_exemption($elem_after_parens)">
          <variable ilk="argument" name="$elem_after_parens" />
        </scope>
        <scope ilk="function" line="138" lineend="146" name="_is_equals_exemption" signature="_is_equals_exemption($sibling)">
          <variable ilk="argument" name="$sibling" />
        </scope>
        <scope ilk="function" line="152" lineend="167" name="_is_sort_exemption" signature="_is_sort_exemption($elem, $sibling)">
          <variable ilk="argument" name="$elem" />
          <variable ilk="argument" name="$sibling" />
        </scope>
        <scope ilk="function" line="174" lineend="177" name="_is_named_unary_with_operator_inside_parens_exemption" signature="_is_named_unary_with_operator_inside_parens_exemption($elem, $parens)">
          <variable ilk="argument" name="$elem" />
          <variable ilk="argument" name="$parens" />
        </scope>
        <scope ilk="function" line="179" lineend="183" name="_contains_operators" signature="_contains_operators($parens)">
          <variable ilk="argument" name="$parens" />
        </scope>
      </scope>
    </scope>
    