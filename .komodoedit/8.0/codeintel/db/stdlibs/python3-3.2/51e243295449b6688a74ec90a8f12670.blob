<scope doc="&#xA;" ilk="blob" lang="Python" name="_tkinter">
      <variable citdl="int" name="ALL_EVENTS" />
      <variable citdl="int" name="DONT_WAIT" />
      <variable citdl="int" name="EXCEPTION" />
      <variable citdl="int" name="FILE_EVENTS" />
      <variable citdl="int" name="IDLE_EVENTS" />
      <variable citdl="int" name="READABLE" />
      <variable citdl="str" name="TCL_VERSION" />
      <variable citdl="int" name="TIMER_EVENTS" />
      <variable citdl="str" name="TK_VERSION" />
      <scope classrefs="Exception" doc="&#xA;" ilk="class" name="TclError" />
      <scope classrefs="object" doc="&#xA;" ilk="class" name="Tcl_Obj">
        <scope doc="x.__ne__(y) &lt;==&gt; x!=y" ilk="function" name="__ne__" signature="x.__ne__(y) &lt;==&gt; x!=y" />
        <scope doc="x.__str__() &lt;==&gt; str(x)" ilk="function" name="__str__" signature="x.__str__() &lt;==&gt; str(x)" />
        <scope doc="x.__getattribute__(&apos;name&apos;) &lt;==&gt; x.name" ilk="function" name="__getattribute__" signature="x.__getattribute__(&apos;name&apos;) &lt;==&gt; x.name" />
        <scope doc="x.__le__(y) &lt;==&gt; x&lt;=y" ilk="function" name="__le__" signature="x.__le__(y) &lt;==&gt; x&lt;=y" />
        <scope doc="x.__repr__() &lt;==&gt; repr(x)" ilk="function" name="__repr__" signature="x.__repr__() &lt;==&gt; repr(x)" />
        <scope doc="x.__gt__(y) &lt;==&gt; x&gt;y" ilk="function" name="__gt__" signature="x.__gt__(y) &lt;==&gt; x&gt;y" />
        <scope doc="x.__lt__(y) &lt;==&gt; x&lt;y" ilk="function" name="__lt__" signature="x.__lt__(y) &lt;==&gt; x&lt;y" />
        <scope doc="x.__eq__(y) &lt;==&gt; x==y" ilk="function" name="__eq__" signature="x.__eq__(y) &lt;==&gt; x==y" />
        <scope doc="x.__ge__(y) &lt;==&gt; x&gt;=y" ilk="function" name="__ge__" signature="x.__ge__(y) &lt;==&gt; x&gt;=y" />
      </scope>
      <scope classrefs="object" doc="&#xA;" ilk="class" name="TkappType">
        <scope ilk="function" name="getdouble" />
        <scope ilk="function" name="exprlong" />
        <scope ilk="function" name="loadtk" />
        <scope ilk="function" name="mainloop" />
        <scope ilk="function" name="interpaddr" />
        <scope ilk="function" name="createtimerhandler" />
        <scope ilk="function" name="exprdouble" />
        <scope ilk="function" name="merge" />
        <scope ilk="function" name="quit" />
        <scope ilk="function" name="getboolean" />
        <scope ilk="function" name="unsetvar" />
        <scope ilk="function" name="getint" />
        <scope ilk="function" name="call" />
        <scope ilk="function" name="globaleval" />
        <scope ilk="function" name="setvar" />
        <scope ilk="function" name="split" />
        <scope ilk="function" name="globalgetvar" />
        <scope ilk="function" name="adderrorinfo" />
        <scope ilk="function" name="exprstring" />
        <scope ilk="function" name="splitlist" />
        <scope ilk="function" name="createcommand" />
        <scope ilk="function" name="deletecommand" />
        <scope ilk="function" name="eval" />
        <scope ilk="function" name="evalfile" />
        <scope ilk="function" name="getvar" />
        <scope ilk="function" name="dooneevent" />
        <scope ilk="function" name="globalcall" />
        <scope ilk="function" name="globalunsetvar" />
        <scope ilk="function" name="record" />
        <scope ilk="function" name="willdispatch" />
        <scope ilk="function" name="exprboolean" />
        <scope ilk="function" name="wantobjects" />
        <scope ilk="function" name="globalsetvar" />
      </scope>
      <scope classrefs="object" doc="&#xA;" ilk="class" name="TkttType">
        <scope doc="x.__repr__() &lt;==&gt; repr(x)" ilk="function" name="__repr__" signature="x.__repr__() &lt;==&gt; repr(x)" />
        <scope ilk="function" name="deletetimerhandler" />
      </scope>
      <variable citdl="int" name="WINDOW_EVENTS" />
      <variable citdl="int" name="WRITABLE" />
      <scope ilk="function" name="create" />
      <scope doc="Return the current busy-wait interval between successive&#xA;calls to Tcl_DoOneEvent in a threaded Python interpreter." ilk="function" name="getbusywaitinterval" returns="int" signature="getbusywaitinterval() -&gt; int" />
      <scope doc="Set the busy-wait interval in milliseconds between&#xA;successive calls to Tcl_DoOneEvent in a threaded Python&#xA;interpreter." ilk="function" name="setbusywaitinterval" signature="setbusywaitinterval(n) -&gt; None" />
    </scope>
    