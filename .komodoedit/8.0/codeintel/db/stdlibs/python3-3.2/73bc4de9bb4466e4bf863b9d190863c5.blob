<scope doc="Read and write ZIP files.&#xA;XXX references to utf-8 need further investigation." ilk="blob" lang="Python" name="zipfile">
      <scope classrefs="Exception" doc="&#xA;" ilk="class" name="BadZipFile" />
      <scope classrefs="Exception" doc="&#xA;" ilk="class" name="BadZipfile" />
      <scope classrefs="Exception" doc="Raised when writing a zipfile, the zipfile requires ZIP64 extensions&#xA;and those extensions are disabled." ilk="class" name="LargeZipFile" />
      <scope classrefs="ZipFile" doc="Class to create ZIP archives with Python library files and packages.&#xA;" ilk="class" name="PyZipFile">
        <scope doc="Add all files from &quot;pathname&quot; to the ZIP archive." ilk="function" name="writepy" signature="writepy(self, pathname, basename=&apos;&apos;)" />
        <scope ilk="function" name="__init__" signature="__init__(self, file, mode=&apos;r&apos;, compression=0, allowZip64=False, optimize=-1)" />
        <scope doc="Given a module name path, return the correct file path and&#xA;archive name, compiling if necessary." ilk="function" name="_get_codename" signature="Return (filename, archivename) for the path." />
      </scope>
      <variable citdl="int" name="ZIP64_LIMIT" />
      <variable citdl="int" name="ZIP_DEFLATED" />
      <variable citdl="int" name="ZIP_FILECOUNT_LIMIT" />
      <variable citdl="int" name="ZIP_MAX_COMMENT" />
      <variable citdl="int" name="ZIP_STORED" />
      <scope classrefs="BufferedIOBase" doc="File-like object for reading an archive member.&#xA;Is returned by ZipFile.open()." ilk="class" name="ZipExtFile">
        <scope doc="Returns buffered bytes without advancing the position." ilk="function" name="peek" signature="peek(self, n=1)" />
        <scope ilk="function" name="readable" signature="readable(self)" />
        <scope doc="Read up to n bytes with at most one read() system call." ilk="function" name="read1" signature="read1(self, n)" />
        <scope doc="Read and return up to n bytes." ilk="function" name="read" signature="read(self, n=-1)" />
        <scope ilk="function" name="close" signature="close(self)" />
        <scope doc="Read and return a line from the stream." ilk="function" name="readline" signature="readline(self, limit=-1)" />
        <scope ilk="function" name="_update_crc" signature="_update_crc(self, newdata, eof)" />
        <scope ilk="function" name="__init__" signature="__init__(self, fileobj, mode, zipinfo, decrypter=None, close_fileobj=False)" />
      </scope>
      <scope classrefs="object" doc="Class with methods to open, read, write, close, list zip files.&#xA;z = ZipFile(file, mode=&quot;r&quot;, compression=ZIP_STORED, allowZip64=False)  file: Either the path to the file, or a file-like object. If it is a path, the file will be opened and closed by ZipFile. mode: The mode can be either read &quot;r&quot;, write &quot;w&quot; or append &quot;a&quot;. compression: ZIP_STORED (no compression) or ZIP_DEFLATED (requires zlib). allowZip64: if True ZipFile will create files with ZIP64 extensions when needed, otherwise it will raise an exception when this would be necessary." ilk="class" name="ZipFile">
        <scope doc="Return a list of file names in the archive." ilk="function" name="namelist" signature="namelist(self)" />
        <scope doc="Read in the table of contents for the ZIP file." ilk="function" name="_RealGetContents" signature="_RealGetContents(self)" />
        <scope ilk="function" name="__exit__" signature="__exit__(self, type, value, traceback)" />
        <scope doc="Return the instance of ZipInfo given &apos;name&apos;." ilk="function" name="getinfo" signature="getinfo(self, name)" />
        <scope doc="Call the &quot;close()&quot; method in case the user forgot." ilk="function" name="__del__" signature="__del__(self)" />
        <scope doc="Print a table of contents for the zip file." ilk="function" name="printdir" signature="printdir(self, file=None)" />
        <scope doc="Check for errors before writing a file to the archive." ilk="function" name="_writecheck" signature="_writecheck(self, zinfo)" />
        <scope doc="Extract all members from the archive to the current working&#xA;directory." ilk="function" name="extractall" signature="extractall(self, path=None, members=None, pwd=None)" />
        <scope doc="Set default password for encrypted files." ilk="function" name="setpassword" signature="setpassword(self, pwd)" />
        <scope doc="Close the file, and for mode &quot;w&quot; and &quot;a&quot; write the ending&#xA;records." ilk="function" name="close" signature="close(self)" />
        <scope doc="Extract the ZipInfo object &apos;member&apos; to a physical file on&#xA;the path targetpath." ilk="function" name="_extract_member" signature="_extract_member(self, member, targetpath, pwd)" />
        <scope doc="Extract a member from the archive to the current working&#xA;directory, using its full name." ilk="function" name="extract" signature="extract(self, member, path=None, pwd=None)" />
        <scope doc="Open the ZIP file with mode read &quot;r&quot;, write &quot;w&quot; or append&#xA;&quot;a&quot;." ilk="function" name="__init__" signature="__init__(self, file, mode=&apos;r&apos;, compression=0, allowZip64=False)" />
        <scope doc="Return a list of class ZipInfo instances for files in the&#xA;archive." ilk="function" name="infolist" signature="infolist(self)" />
        <scope doc="Return file-like object for &apos;name&apos;." ilk="function" name="open" signature="open(self, name, mode=&apos;r&apos;, pwd=None)" />
        <scope doc="Write a file into the archive." ilk="function" name="writestr" signature="writestr(self, zinfo_or_arcname, data, compress_type=None)" />
        <scope ilk="function" name="__enter__" signature="__enter__(self)" />
        <scope doc="Put the bytes from filename into the archive under the name&#xA;arcname." ilk="function" name="write" signature="write(self, filename, arcname=None, compress_type=None)" />
        <scope doc="Return file bytes (as a string) for name." ilk="function" name="read" signature="read(self, name, pwd=None)" />
        <scope doc="Read the directory, making sure we close the file if the&#xA;format is bad." ilk="function" name="_GetContents" signature="_GetContents(self)" />
        <scope doc="Read all the files and check the CRC." ilk="function" name="testzip" signature="testzip(self)" />
      </scope>
      <scope classrefs="object" doc="Class with attributes describing each file in the ZIP archive.&#xA;" ilk="class" name="ZipInfo">
        <scope ilk="function" name="_decodeExtra" signature="_decodeExtra(self)" />
        <scope ilk="function" name="__init__" signature="__init__(self, filename=&apos;NoName&apos;, date_time=(1980, 1, 1, 0, 0, 0))" />
        <scope ilk="function" name="_encodeFilenameFlags" signature="_encodeFilenameFlags(self)" />
        <scope doc="Return the per-file header as a string." ilk="function" name="FileHeader" signature="FileHeader(self)" />
      </scope>
      <variable citdl="list" name="__all__" />
      <import module="binascii" />
      <scope doc="Compute a CRC-32 checksum of string." ilk="function" name="crc32" signature="crc32(string[, start])" />
      <scope classrefs="Exception" doc="&#xA;" ilk="class" name="error" />
      <import module="imp" />
      <import module="io" />
      <scope doc="Quickly see if a file is a ZIP file by checking the magic&#xA;number." ilk="function" name="is_zipfile" signature="is_zipfile(filename)" />
      <scope ilk="function" name="main" signature="main(args=None)" />
      <import module="os" />
      <import module="re" />
      <import module="shutil" />
      <variable citdl="int" name="sizeCentralDir" />
      <variable citdl="int" name="sizeEndCentDir" />
      <variable citdl="int" name="sizeEndCentDir64" />
      <variable citdl="int" name="sizeEndCentDir64Locator" />
      <variable citdl="int" name="sizeFileHeader" />
      <import module="stat" />
      <variable citdl="bytes" name="stringCentralDir" />
      <variable citdl="bytes" name="stringEndArchive" />
      <variable citdl="bytes" name="stringEndArchive64" />
      <variable citdl="bytes" name="stringEndArchive64Locator" />
      <variable citdl="bytes" name="stringFileHeader" />
      <import module="struct" />
      <variable citdl="str" name="structCentralDir" />
      <variable citdl="bytes" name="structEndArchive" />
      <variable citdl="str" name="structEndArchive64" />
      <variable citdl="str" name="structEndArchive64Locator" />
      <variable citdl="str" name="structFileHeader" />
      <import module="sys" />
      <import module="time" />
      <import module="zlib" />
    </scope>
    