<scope doc="Word completion for GNU readline 2.0.&#xA;This requires the latest extension to the readline module. The completer completes keywords, built-ins and globals in a selectable namespace (which defaults to __main__); when completing NAME.NAME..., it evaluates (!) the expression up to the last dot and completes its attributes.  It&apos;s very cool to do &quot;import sys&quot; type &quot;sys.&quot;, hit the completion key (twice), and see the list of names defined by the sys module!  Tip: to use the tab key as the completion key, call" ilk="blob" lang="Python" name="rlcompleter">
      <scope classrefs="object" doc="&#xA;" ilk="class" line="41" lineend="150" name="Completer">
        <scope doc="Return the next possible completion for &apos;text&apos;." ilk="function" line="69" lineend="87" name="complete" signature="complete(self, text, state)">
          <variable ilk="argument" name="text" />
          <variable citdl="Completer" ilk="argument" name="self" />
          <variable ilk="argument" name="state" />
        </scope>
        <scope doc="Compute matches when text contains a dot." ilk="function" line="113" lineend="150" name="attr_matches" returns="list" signature="attr_matches(self, text)">
          <variable citdl="_callable_postfix()" line="148" name="word" />
          <variable line="129" name="attr" />
          <variable citdl="getattr()" line="147" name="val" />
          <variable citdl="list" line="143" name="matches" />
          <variable ilk="argument" name="text" />
          <variable citdl="Completer" ilk="argument" name="self" />
          <variable citdl="eval()" line="131" name="thisobject" />
          <variable citdl="re.match()" line="126" name="m" />
          <variable citdl="len()" line="144" name="n" />
          <variable citdl="dir()" line="136" name="words" />
          <variable line="129" name="expr" />
        </scope>
        <scope doc="Compute matches when text is a simple name." ilk="function" line="94" lineend="111" name="global_matches" returns="list" signature="global_matches(self, text)">
          <variable citdl="list" line="102" name="matches" />
          <variable ilk="argument" name="text" />
          <variable citdl="Completer" ilk="argument" name="self" />
          <variable citdl="len()" line="103" name="n" />
        </scope>
        <scope ilk="function" line="89" lineend="92" name="_callable_postfix" returns="str" signature="_callable_postfix(self, val, word)">
          <variable citdl="Completer" ilk="argument" name="self" />
          <variable citdl="str" ilk="argument" name="word" />
          <variable ilk="argument" name="val" />
        </scope>
        <scope doc="Create a new completer for the command line." ilk="function" line="42" lineend="67" name="__init__" signature="__init__(self, namespace=None)">
          <variable citdl="Completer" ilk="argument" name="self" />
          <variable ilk="argument" name="namespace" />
        </scope>
        <variable attributes="__instancevar__" citdl="self.attr_matches()" line="81" name="matches" />
        <variable attributes="__instancevar__" citdl="dict" line="67" name="namespace" />
        <variable attributes="__instancevar__" citdl="int" line="64" name="use_main_ns" />
      </scope>
      <variable citdl="list" line="39" name="__all__" />
      <import module="__main__" />
      <import module="builtins" />
      <scope ilk="function" line="152" lineend="157" name="get_class_members" returns="get_class_members()" signature="get_class_members(klass)">
        <variable ilk="argument" name="klass" />
        <variable citdl="dir()" line="153" name="ret" />
      </scope>
    </scope>
    