<scope doc="# Tkinter font wrapper&#xA;# # written by Fredrik Lundh, February 1998 # # FIXME: should add &apos;displayof&apos; option where relevant (actual, families, #        measure, and metrics) #" ilk="blob" lang="Python" name="tkinter.font">
      <variable citdl="str" line="16" name="BOLD" />
      <scope classrefs="object" doc="Represents a named font.&#xA;Constructor options are:  font -- font specifier (name, system font, or (family, size, style)-tuple) name -- name to use for this font configuration (defaults to a unique name) exists -- does a named font by this name already exist? Creates a new named font if False, points to the existing font if True. Raises _tkinter.TclError if the assertion is false.  the following are ignored if font is specified: " ilk="class" line="24" lineend="165" name="Font">
        <scope doc="Modify font attributes" ilk="function" line="144" name="configure" signature="configure(self, **options)" />
        <scope ilk="function" line="102" lineend="103" name="__getitem__" returns="self.cget()" signature="__getitem__(self, key)">
          <variable citdl="Font" ilk="argument" name="self" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="108" lineend="115" name="__del__" signature="__del__(self)">
          <variable citdl="Font" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="96" lineend="97" name="__str__" returns="str" signature="__str__(self)">
          <variable citdl="Font" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="60" lineend="64" name="_mkdict" returns="dict" signature="_mkdict(self, args)">
          <variable citdl="Font" ilk="argument" name="self" />
          <variable ilk="argument" name="args" />
          <variable citdl="dict" line="61" name="options" />
        </scope>
        <scope ilk="function" line="54" lineend="58" name="_get" returns="tuple()" signature="_get(self, args)">
          <variable citdl="Font" ilk="argument" name="self" />
          <variable ilk="argument" name="args" />
          <variable citdl="list" line="55" name="options" />
        </scope>
        <scope ilk="function" line="105" lineend="106" name="__setitem__" signature="__setitem__(self, key, value)">
          <variable citdl="Font" ilk="argument" name="self" />
          <variable ilk="argument" name="value" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope doc="Return text width" ilk="function" line="146" lineend="148" name="measure" returns="int()" signature="measure(self, text)">
          <variable ilk="argument" name="text" />
          <variable citdl="Font" ilk="argument" name="self" />
        </scope>
        <scope doc="Return a distinct copy of the current font" ilk="function" line="117" lineend="119" name="copy" returns="Font" signature="copy(self)">
          <variable citdl="Font" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="99" lineend="100" name="__eq__" returns="isinstance()" signature="__eq__(self, other)">
          <variable citdl="Font" ilk="argument" name="self" />
          <variable ilk="argument" name="other" />
        </scope>
        <scope doc="Get font attribute" ilk="function" line="130" lineend="132" name="cget" returns="Font._call()" signature="cget(self, option)">
          <variable citdl="Font" ilk="argument" name="self" />
          <variable ilk="argument" name="option" />
        </scope>
        <scope ilk="function" line="66" lineend="94" name="__init__" signature="__init__(self, root=None, font=None, name=None, exists=False, **options)">
          <variable citdl="str()" ilk="argument" name="name" />
          <variable citdl="False" ilk="argument" name="exists" />
          <variable citdl="Font" ilk="argument" name="self" />
          <variable citdl="root.tk.splitlist()" ilk="argument" name="font" />
          <variable citdl="tkinter._default_root" ilk="argument" name="root" />
          <variable attributes="kwargs" ilk="argument" name="options" />
        </scope>
        <scope doc="Return font metrics." ilk="function" line="150" lineend="165" name="metrics" returns="int()" signature="metrics(self, *options)">
          <variable citdl="_split()" line="161" name="res" />
          <variable citdl="Font" ilk="argument" name="self" />
          <variable attributes="varargs" citdl="dict" ilk="argument" name="options" />
        </scope>
        <scope doc="Return actual font attributes" ilk="function" line="121" lineend="127" name="actual" returns="Font._call()" signature="actual(self, option=None)">
          <variable citdl="Font" ilk="argument" name="self" />
          <variable ilk="argument" name="option" />
        </scope>
        <scope doc="Modify font attributes" ilk="function" line="134" lineend="141" name="config" returns="Font._mkdict()" signature="config(self, **options)">
          <variable citdl="Font" ilk="argument" name="self" />
          <variable attributes="kwargs" ilk="argument" name="options" />
        </scope>
        <scope ilk="function" line="47" lineend="52" name="_set" returns="tuple()" signature="_set(self, kw)">
          <variable citdl="Font" ilk="argument" name="self" />
          <variable ilk="argument" name="kw" />
          <variable citdl="list" line="48" name="options" />
        </scope>
        <variable attributes="__instancevar__" citdl="True" line="79" name="delete_font" />
        <variable attributes="protected __instancevar__" citdl="tkinter._default_root" line="92" name="_root" />
        <variable attributes="__instancevar__" citdl="str()" line="76" name="name" />
        <variable attributes="protected __instancevar__" citdl="root.tk.call" line="94" name="_call" />
        <variable attributes="protected __instancevar__" citdl="root.tk.splitlist" line="93" name="_split" />
      </scope>
      <variable citdl="str" line="17" name="ITALIC" />
      <variable citdl="str" line="14" name="NORMAL" />
      <variable citdl="str" line="15" name="ROMAN" />
      <scope doc="Get font families (as a tuple)" ilk="function" line="167" lineend="171" name="families" returns="root.tk.splitlist()" signature="families(root=None)">
        <variable citdl="tkinter._default_root" ilk="argument" name="root" />
      </scope>
      <scope doc="Get names of defined fonts (as a tuple)" ilk="function" line="173" lineend="177" name="names" returns="root.tk.splitlist()" signature="names(root=None)">
        <variable citdl="tkinter._default_root" ilk="argument" name="root" />
      </scope>
      <scope doc="Given the name of a tk named font, returns a Font&#xA;representation." ilk="function" line="19" lineend="22" name="nametofont" returns="Font()" signature="nametofont(name)">
        <variable ilk="argument" name="name" />
      </scope>
      <import module="tkinter" />
      <variable attributes="__hidden__" line="212" name="fb" />
      <variable attributes="__hidden__" citdl="str" line="9" name="__version__" />
      <variable attributes="__hidden__" citdl="tkinter.Tk()" line="184" name="root" />
      <variable attributes="__hidden__" citdl="tkinter.Label()" line="206" name="w" />
      <variable attributes="__hidden__" citdl="Font" line="187" name="f" />
    </scope>
    