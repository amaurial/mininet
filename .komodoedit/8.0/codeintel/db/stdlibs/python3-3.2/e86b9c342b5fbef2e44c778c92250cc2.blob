<scope doc="Utilities needed to emulate Python&apos;s interactive interpreter.&#xA;" ilk="blob" lang="Python" name="code">
      <scope classrefs="object" doc="Instances of this class have __call__ methods identical in&#xA;signature to compile_command; the difference is that if the instance compiles program text containing a __future__ statement, the instance &apos;remembers&apos; and compiles all subsequent program texts with the statement in force." ilk="class" name="CommandCompiler">
        <scope doc="Compile a command and determine whether it is incomplete." ilk="function" name="__call__" signature="__call__(self, source, filename=&apos;&lt;input&gt;&apos;, symbol=&apos;single&apos;)" />
        <scope ilk="function" name="__init__" signature="__init__(self)" />
      </scope>
      <scope classrefs="InteractiveInterpreter" doc="Closely emulate the behavior of the interactive Python interpreter.&#xA;This class builds on InteractiveInterpreter and adds prompting using the familiar sys.ps1 and sys.ps2, and input buffering." ilk="class" line="158" lineend="261" name="InteractiveConsole">
        <scope doc="Push a line to the interpreter." ilk="function" line="229" lineend="248" name="push" returns="self.runsource()" signature="push(self, line)">
          <variable citdl="str.join()" line="244" name="source" />
          <variable citdl="InteractiveConsole" ilk="argument" name="self" />
          <variable ilk="argument" name="line" />
          <variable citdl="self.runsource()" line="245" name="more" />
        </scope>
        <scope doc="Closely emulate the interactive Python console." ilk="function" line="184" lineend="227" name="interact" signature="interact(self, banner=None)">
          <variable citdl="sys.ps2" line="214" name="prompt" />
          <variable citdl="InteractiveConsole" ilk="argument" name="self" />
          <variable citdl="str" line="203" name="cprt" />
          <variable ilk="argument" name="banner" />
          <variable citdl="self.raw_input()" line="218" name="line" />
          <variable citdl="int" line="210" name="more" />
        </scope>
        <scope doc="Reset the input buffer." ilk="function" line="180" lineend="182" name="resetbuffer" signature="resetbuffer(self)">
          <variable citdl="InteractiveConsole" ilk="argument" name="self" />
        </scope>
        <scope doc="Write a prompt and read a line." ilk="function" line="250" lineend="261" name="raw_input" returns="input()" signature="raw_input(self, prompt=&apos;&apos;)">
          <variable citdl="InteractiveConsole" ilk="argument" name="self" />
          <variable citdl="str" ilk="argument" name="prompt" />
        </scope>
        <scope doc="Constructor." ilk="function" line="166" lineend="178" name="__init__" signature="__init__(self, locals=None, filename=&apos;&lt;console&gt;&apos;)">
          <variable citdl="InteractiveConsole" ilk="argument" name="self" />
          <variable ilk="argument" name="locals" />
          <variable citdl="str" ilk="argument" name="filename" />
        </scope>
        <variable attributes="__instancevar__" citdl="list" line="182" name="buffer" />
        <variable attributes="__instancevar__" citdl="str" line="177" name="filename" />
      </scope>
      <scope classrefs="object" doc="Base class for InteractiveConsole.&#xA;This class deals with parsing and interpreter state (the user&apos;s namespace); it doesn&apos;t deal with input buffering or prompting or input file naming (the filename is always passed in explicitly)." ilk="class" line="15" lineend="155" name="InteractiveInterpreter">
        <scope doc="Execute a code object." ilk="function" line="77" lineend="94" name="runcode" signature="runcode(self, code)">
          <variable citdl="InteractiveInterpreter" ilk="argument" name="self" />
          <variable ilk="argument" name="code" />
        </scope>
        <scope doc="Display the exception that just occurred." ilk="function" line="125" lineend="146" name="showtraceback" signature="showtraceback(self)">
          <variable citdl="traceback.extract_tb()" line="138" name="tblist" />
          <variable line="134" name="type" />
          <variable citdl="traceback.format_list()" line="140" name="lines" />
          <variable citdl="InteractiveInterpreter" ilk="argument" name="self" />
          <variable line="134" name="tb" />
          <variable line="134" name="value" />
        </scope>
        <scope doc="Display the syntax error that just occurred." ilk="function" line="96" lineend="123" name="showsyntaxerror" signature="showsyntaxerror(self, filename=None)">
          <variable citdl="traceback.format_exception_only()" line="122" name="lines" />
          <variable citdl="InteractiveInterpreter" ilk="argument" name="self" />
          <variable line="108" name="type" />
          <variable citdl="SyntaxError()" line="108" name="value" />
          <variable ilk="argument" name="filename" />
        </scope>
        <scope doc="Write a string." ilk="function" line="148" lineend="155" name="write" signature="write(self, data)">
          <variable citdl="InteractiveInterpreter" ilk="argument" name="self" />
          <variable ilk="argument" name="data" />
        </scope>
        <scope doc="Compile and run some source in the interpreter." ilk="function" line="38" lineend="75" name="runsource" returns="bool" signature="runsource(self, source, filename=&apos;&lt;input&gt;&apos;, symbol=&apos;single&apos;)">
          <variable ilk="argument" name="source" />
          <variable citdl="InteractiveInterpreter" ilk="argument" name="self" />
          <variable citdl="compile()" line="63" name="code" />
          <variable citdl="str" ilk="argument" name="symbol" />
          <variable citdl="str" ilk="argument" name="filename" />
        </scope>
        <scope doc="Constructor." ilk="function" line="24" lineend="36" name="__init__" signature="__init__(self, locals=None)">
          <variable citdl="InteractiveInterpreter" ilk="argument" name="self" />
          <variable citdl="dict" ilk="argument" name="locals" />
        </scope>
        <variable attributes="__instancevar__" citdl="CommandCompiler()" line="36" name="compile" />
        <variable attributes="__instancevar__" citdl="dict" line="35" name="locals" />
      </scope>
      <variable citdl="list" line="12" name="__all__" />
      <scope doc="Compile a command and determine whether it is incomplete." ilk="function" name="compile_command" signature="compile_command(source, filename=&apos;&lt;input&gt;&apos;, symbol=&apos;single&apos;)" />
      <scope doc="Closely emulate the interactive Python interpreter." ilk="function" line="265" lineend="287" name="interact" signature="interact(banner=None, readfunc=None, local=None)">
        <variable ilk="argument" name="local" />
        <variable ilk="argument" name="banner" />
        <variable ilk="argument" name="readfunc" />
        <variable citdl="InteractiveConsole" line="279" name="console" />
      </scope>
      <import module="sys" />
      <import module="traceback" />
    </scope>
    