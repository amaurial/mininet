<scope doc="Implements (a subset of) Sun XDR -- eXternal Data Representation.&#xA;See: RFC 1014" ilk="blob" lang="Python" name="xdrlib">
      <scope classrefs="_BufferedIOBase" doc="BytesIO([buffer]) -&gt; object&#xA;Create a buffered I/O implementation using an in-memory bytes buffer, ready for reading and writing." ilk="class" name="BytesIO">
        <scope doc="Call readline() repeatedly and return a list of the lines so&#xA;read." ilk="function" name="readlines" returns="list" signature="readlines([size]) -&gt; list of strings, each a line from the file." />
        <scope doc="Retrieve the entire contents of the BytesIO object." ilk="function" name="getvalue" signature="getvalue() -&gt; bytes." />
        <scope ilk="function" name="writable" />
        <scope doc="flush() -&gt; None.  Does nothing." ilk="function" name="flush" signature="flush() -&gt; None.  Does nothing." />
        <scope doc="close() -&gt; None.  Disable all I/O operations." ilk="function" name="close" signature="close() -&gt; None.  Disable all I/O operations." />
        <scope doc="Seek to byte offset pos relative to position indicated by&#xA;whence: 0  Start of stream (the default)." ilk="function" name="seek" signature="seek(pos, whence=0) -&gt; int.  Change stream position." />
        <scope ilk="function" name="__init__" />
        <scope doc="Returns number of bytes read (0 for EOF), or None if the&#xA;object is set not to block as has no data to read." ilk="function" name="readinto" signature="readinto(bytearray) -&gt; int.  Read up to len(b) bytes into b." />
        <scope ilk="function" name="readable" />
        <scope doc="Return the number of bytes written." ilk="function" name="write" signature="write(bytes) -&gt; int.  Write bytes to file." />
        <scope ilk="function" name="__getstate__" />
        <scope doc="tell() -&gt; current file position, an integer" ilk="function" name="tell" signature="tell() -&gt; current file position, an integer" />
        <scope doc="Always returns False since BytesIO objects are not connected&#xA;to a tty-like device." ilk="function" name="isatty" signature="isatty() -&gt; False." />
        <scope doc="Size defaults to the current file position, as returned by&#xA;tell()." ilk="function" name="truncate" signature="truncate([size]) -&gt; int.  Truncate the file to at most size bytes." />
        <scope ilk="function" name="__setstate__" />
        <scope doc="If the size argument is negative, read until EOF is reached." ilk="function" name="read" signature="read([size]) -&gt; read at most size bytes, returned as a string." />
        <scope doc="x.__next__() &lt;==&gt; next(x)" ilk="function" name="__next__" signature="x.__next__() &lt;==&gt; next(x)" />
        <scope doc="If the size argument is negative or omitted, read until EOF&#xA;is reached." ilk="function" name="read1" signature="read1(size) -&gt; read at most size bytes, returned as a string." />
        <scope doc="x.__iter__() &lt;==&gt; iter(x)" ilk="function" name="__iter__" signature="x.__iter__() &lt;==&gt; iter(x)" />
        <scope ilk="function" name="seekable" />
        <scope doc="Retain newline." ilk="function" name="readline" signature="readline([size]) -&gt; next line from the file, as a string." />
        <scope doc="Note that newlines are not added." ilk="function" name="writelines" signature="writelines(sequence_of_strings) -&gt; None.  Write strings to the file." />
        <scope doc="Get a read-write view over the contents of the BytesIO&#xA;object." ilk="function" name="getbuffer" signature="getbuffer() -&gt; bytes." />
      </scope>
      <scope classrefs="Error" doc="&#xA;" ilk="class" line="31" lineend="32" name="ConversionError" />
      <scope classrefs="Exception" doc="Exception class for this module. Use:&#xA;except xdrlib.Error, var: # var has the Error instance for the exception  Public ivars: msg -- contains the message" ilk="class" line="13" lineend="28" name="Error">
        <scope ilk="function" line="27" lineend="28" name="__str__" returns="str()" signature="__str__(self)">
          <variable citdl="Error" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="25" lineend="26" name="__repr__" returns="repr()" signature="__repr__(self)">
          <variable citdl="Error" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="23" lineend="24" name="__init__" signature="__init__(self, msg)">
          <variable ilk="argument" name="msg" />
          <variable citdl="Error" ilk="argument" name="self" />
        </scope>
        <variable attributes="__instancevar__" line="24" name="msg" />
      </scope>
      <scope classrefs="object" doc="Pack various data representations into a buffer.&#xA;" ilk="class" line="36" lineend="111" name="Packer">
        <scope ilk="function" line="93" name="pack_opaque" signature="pack_opaque(self, s)" />
        <scope ilk="function" line="50" lineend="51" name="pack_uint" signature="pack_uint(self, x)">
          <variable ilk="argument" name="x" />
          <variable citdl="Packer" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="48" name="get_buf" signature="get_buf(self)" />
        <scope ilk="function" line="68" lineend="71" name="pack_float" signature="pack_float(self, x)">
          <variable ilk="argument" name="x" />
          <variable citdl="Packer" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="108" lineend="111" name="pack_array" signature="pack_array(self, list, pack_item)">
          <variable citdl="Packer" ilk="argument" name="self" />
          <variable ilk="argument" name="list" />
          <variable ilk="argument" name="pack_item" />
          <variable citdl="len()" line="109" name="n" />
        </scope>
        <scope ilk="function" line="73" lineend="76" name="pack_double" signature="pack_double(self, x)">
          <variable ilk="argument" name="x" />
          <variable citdl="Packer" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="102" lineend="106" name="pack_farray" signature="pack_farray(self, n, list, pack_item)">
          <variable citdl="Packer" ilk="argument" name="self" />
          <variable ilk="argument" name="list" />
          <variable ilk="argument" name="pack_item" />
          <variable ilk="argument" name="n" />
        </scope>
        <scope ilk="function" line="78" lineend="84" name="pack_fstring" signature="pack_fstring(self, n, s)">
          <variable citdl="Packer" ilk="argument" name="self" />
          <variable citdl="list" line="81" name="data" />
          <variable ilk="argument" name="s" />
          <variable citdl="int" ilk="argument" name="n" />
        </scope>
        <scope ilk="function" line="39" lineend="40" name="__init__" signature="__init__(self)">
          <variable citdl="Packer" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="45" lineend="46" name="get_buffer" returns="self.__buf.getvalue()" signature="get_buffer(self)">
          <variable citdl="Packer" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="42" lineend="43" name="reset" signature="reset(self)">
          <variable citdl="Packer" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="62" lineend="64" name="pack_uhyper" signature="pack_uhyper(self, x)">
          <variable ilk="argument" name="x" />
          <variable citdl="Packer" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="58" lineend="60" name="pack_bool" signature="pack_bool(self, x)">
          <variable ilk="argument" name="x" />
          <variable citdl="Packer" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="86" name="pack_fopaque" signature="pack_fopaque(self, n, s)" />
        <scope ilk="function" line="88" lineend="91" name="pack_string" signature="pack_string(self, s)">
          <variable citdl="Packer" ilk="argument" name="self" />
          <variable ilk="argument" name="s" />
          <variable citdl="len()" line="89" name="n" />
        </scope>
        <scope ilk="function" line="56" name="pack_enum" signature="pack_enum(self, x)" />
        <scope ilk="function" line="66" name="pack_hyper" signature="pack_hyper(self, x)" />
        <scope ilk="function" line="96" lineend="100" name="pack_list" signature="pack_list(self, list, pack_item)">
          <variable citdl="Packer" ilk="argument" name="self" />
          <variable ilk="argument" name="list" />
          <variable ilk="argument" name="pack_item" />
        </scope>
        <scope ilk="function" line="53" lineend="54" name="pack_int" signature="pack_int(self, x)">
          <variable ilk="argument" name="x" />
          <variable citdl="Packer" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="94" name="pack_bytes" signature="pack_bytes(self, s)" />
        <variable attributes="private __instancevar__" citdl="BytesIO()" line="43" name="__buf" />
      </scope>
      <scope classrefs="object" doc="Unpacks various data representations from the given buffer.&#xA;" ilk="class" line="115" lineend="228" name="Unpacker">
        <scope ilk="function" line="190" lineend="198" name="unpack_fstring" returns="list" signature="unpack_fstring(self, n)">
          <variable citdl="int" line="193" name="i" />
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable citdl="int" line="194" name="j" />
          <variable ilk="argument" name="n" />
        </scope>
        <scope ilk="function" line="125" lineend="126" name="get_position" returns="int" signature="get_position(self)">
          <variable citdl="Unpacker" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="182" lineend="188" name="unpack_double" signature="unpack_double(self)">
          <variable citdl="int" line="183" name="i" />
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable citdl="list" line="185" name="data" />
        </scope>
        <scope ilk="function" line="220" lineend="224" name="unpack_farray" returns="list" signature="unpack_farray(self, n, unpack_item)">
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable ilk="argument" name="unpack_item" />
          <variable citdl="list" line="221" name="list" />
          <variable ilk="argument" name="n" />
        </scope>
        <scope ilk="function" line="206" name="unpack_opaque" signature="unpack_opaque(self)" />
        <scope ilk="function" line="174" lineend="180" name="unpack_float" signature="unpack_float(self)">
          <variable citdl="int" line="175" name="i" />
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable citdl="list" line="177" name="data" />
        </scope>
        <scope ilk="function" line="134" lineend="136" name="done" signature="done(self)">
          <variable citdl="Unpacker" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="160" lineend="161" name="unpack_bool" returns="bool()" signature="unpack_bool(self)">
          <variable citdl="Unpacker" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="128" lineend="129" name="set_position" signature="set_position(self, position)">
          <variable ilk="argument" name="position" />
          <variable citdl="Unpacker" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="150" lineend="156" name="unpack_int" signature="unpack_int(self)">
          <variable citdl="int" line="151" name="i" />
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable citdl="list" line="153" name="data" />
        </scope>
        <scope ilk="function" line="118" lineend="119" name="__init__" signature="__init__(self, data)">
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable ilk="argument" name="data" />
        </scope>
        <scope ilk="function" line="131" lineend="132" name="get_buffer" signature="get_buffer(self)">
          <variable citdl="Unpacker" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="121" lineend="123" name="reset" signature="reset(self, data)">
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable ilk="argument" name="data" />
        </scope>
        <scope ilk="function" line="138" lineend="148" name="unpack_uint" returns="int()" signature="unpack_uint(self)">
          <variable citdl="int" line="139" name="i" />
          <variable line="144" name="x" />
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable citdl="list" line="141" name="data" />
        </scope>
        <scope ilk="function" line="226" lineend="228" name="unpack_array" returns="Unpacker.unpack_farray()" signature="unpack_array(self, unpack_item)">
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable citdl="unpack_uint()" line="227" name="n" />
          <variable ilk="argument" name="unpack_item" />
        </scope>
        <scope ilk="function" line="163" lineend="166" name="unpack_uhyper" returns="int" signature="unpack_uhyper(self)">
          <variable citdl="unpack_uint()" line="165" name="lo" />
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable citdl="unpack_uint()" line="164" name="hi" />
        </scope>
        <scope ilk="function" line="207" name="unpack_bytes" signature="unpack_bytes(self)" />
        <scope ilk="function" line="209" lineend="218" name="unpack_list" returns="list" signature="unpack_list(self, unpack_item)">
          <variable citdl="unpack_uint()" line="212" name="x" />
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable citdl="list" line="210" name="list" />
          <variable citdl="unpack_item()" line="216" name="item" />
          <variable ilk="argument" name="unpack_item" />
        </scope>
        <scope ilk="function" line="158" name="unpack_enum" signature="unpack_enum(self)" />
        <scope ilk="function" line="168" lineend="172" name="unpack_hyper" returns="unpack_uhyper()" signature="unpack_hyper(self)">
          <variable citdl="unpack_uhyper()" line="169" name="x" />
          <variable citdl="Unpacker" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="200" name="unpack_fopaque" signature="unpack_fopaque(self, n)" />
        <scope ilk="function" line="202" lineend="204" name="unpack_string" returns="Unpacker.unpack_fstring()" signature="unpack_string(self)">
          <variable citdl="Unpacker" ilk="argument" name="self" />
          <variable citdl="unpack_uint()" line="203" name="n" />
        </scope>
        <variable attributes="private __instancevar__" line="122" name="__buf" />
        <variable attributes="private __instancevar__" citdl="int" line="123" name="__pos" />
      </scope>
      <variable citdl="list" line="10" name="__all__" />
      <import module="struct" />
    </scope>
    