<scope doc="Basic infrastructure for asynchronous socket service clients and servers.&#xA;There are only two ways to have a program on a single processor do &quot;more than one thing at a time&quot;.  Multi-threaded programming is the simplest and most popular way to do it, but there is another very different technique, that lets you have nearly all the advantages of multi-threading, without actually using multiple threads. it&apos;s really only practical if your program is largely I/O bound. If your program is CPU bound, then pre-emptive scheduled threads are probably what you really need. Network servers are rarely CPU-bound, however.  If your operating system supports the select() system call in its I/O" ilk="blob" lang="Python" name="asyncore">
      <variable citdl="int" name="EAGAIN" />
      <variable citdl="int" name="EALREADY" />
      <variable citdl="int" name="EBADF" />
      <variable citdl="int" name="ECONNABORTED" />
      <variable citdl="int" name="ECONNRESET" />
      <variable citdl="int" name="EINPROGRESS" />
      <variable citdl="int" name="EINTR" />
      <variable citdl="int" name="EINVAL" />
      <variable citdl="int" name="EISCONN" />
      <variable citdl="int" name="ENOTCONN" />
      <variable citdl="int" name="EPIPE" />
      <variable citdl="int" name="ESHUTDOWN" />
      <variable citdl="int" name="EWOULDBLOCK" />
      <scope classrefs="Exception" doc="&#xA;" ilk="class" line="76" lineend="77" name="ExitNow" />
      <scope ilk="function" line="580" lineend="596" name="close_all" signature="close_all(map=None, ignore_all=False)">
        <variable citdl="dict" ilk="argument" name="map" />
        <variable citdl="False" ilk="argument" name="ignore_all" />
      </scope>
      <scope ilk="function" line="560" lineend="578" name="compact_traceback" returns="tuple" signature="compact_traceback()">
        <variable citdl="list" line="562" name="tbinfo" />
        <variable citdl="str.join()" line="577" name="info" />
        <variable citdl="tb.tb_next" line="561" name="tb" />
        <variable line="561" name="t" />
        <variable line="561" name="v" />
      </scope>
      <scope classrefs="object" doc="&#xA;" ilk="class" line="223" lineend="526" name="dispatcher">
        <scope ilk="function" line="277" name="__str__" signature="__str__(self)" />
        <scope ilk="function" line="306" lineend="315" name="set_reuse_addr" signature="set_reuse_addr(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="355" lineend="367" name="accept" returns="tuple" signature="accept(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable line="358" name="addr" />
          <variable line="358" name="conn" />
        </scope>
        <scope ilk="function" line="326" lineend="327" name="writable" returns="bool" signature="writable(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="343" lineend="353" name="connect" signature="connect(self, address)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable citdl="self.socket.connect_ex()" line="345" name="err" />
          <variable ilk="argument" name="address" />
        </scope>
        <scope ilk="function" line="400" lineend="408" name="close" signature="close(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="483" lineend="501" name="handle_error" signature="handle_error(self)">
          <variable line="484" name="tbinfo" />
          <variable line="484" name="t" />
          <variable line="484" name="nil" />
          <variable line="484" name="v" />
          <variable citdl="id()" line="488" name="self_repr" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="232" lineend="262" name="__init__" signature="__init__(self, sock=None, map=None)">
          <variable ilk="argument" name="map" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable ilk="argument" name="sock" />
        </scope>
        <scope ilk="function" line="300" lineend="304" name="set_socket" signature="set_socket(self, sock, map=None)">
          <variable ilk="argument" name="map" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable ilk="argument" name="sock" />
        </scope>
        <scope ilk="function" line="515" lineend="518" name="handle_accept" signature="handle_accept(self)">
          <variable citdl="accept()" line="516" name="pair" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="323" lineend="324" name="readable" returns="bool" signature="readable(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="369" lineend="380" name="send" returns="self.socket.send()" signature="send(self, data)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable ilk="argument" name="data" />
          <variable citdl="self.socket.send()" line="371" name="result" />
        </scope>
        <scope ilk="function" line="520" lineend="522" name="handle_accepted" signature="handle_accepted(self, sock, addr)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable ilk="argument" name="sock" />
          <variable ilk="argument" name="addr" />
        </scope>
        <scope ilk="function" line="468" lineend="481" name="handle_expt_event" signature="handle_expt_event(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable citdl="self.socket.getsockopt()" line="472" name="err" />
        </scope>
        <scope ilk="function" line="431" lineend="433" name="log_info" signature="log_info(self, message, type=&apos;info&apos;)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable citdl="str" ilk="argument" name="type" />
          <variable ilk="argument" name="message" />
        </scope>
        <scope ilk="function" line="294" lineend="298" name="create_socket" signature="create_socket(self, family, type)">
          <variable citdl="socket.socket()" line="296" name="sock" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable ilk="argument" name="type" />
          <variable ilk="argument" name="family" />
        </scope>
        <scope ilk="function" line="333" lineend="337" name="listen" returns="self.socket.listen()" signature="listen(self, num)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable citdl="int" ilk="argument" name="num" />
        </scope>
        <scope doc="# cheap inheritance, used to pass all other attribute #&#xA;references to the underlying socket object." ilk="function" line="412" lineend="422" name="__getattr__" returns="getattr()" signature="__getattr__(self, attr)">
          <variable citdl="dict" line="419" name="msg" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable ilk="argument" name="attr" />
          <variable citdl="getattr()" line="414" name="retattr" />
        </scope>
        <scope ilk="function" line="503" lineend="504" name="handle_expt" signature="handle_expt(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="285" lineend="292" name="del_channel" signature="del_channel(self, map=None)">
          <variable citdl="dict" ilk="argument" name="map" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable line="286" name="fd" />
        </scope>
        <scope ilk="function" line="506" lineend="507" name="handle_read" signature="handle_read(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="435" lineend="444" name="handle_read_event" signature="handle_read_event(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="382" lineend="398" name="recv" returns="str" signature="recv(self, buffer_size)">
          <variable ilk="argument" name="buffer_size" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable citdl="self.socket.recv()" line="384" name="data" />
        </scope>
        <scope ilk="function" line="428" lineend="429" name="log" signature="log(self, message)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable ilk="argument" name="message" />
        </scope>
        <scope ilk="function" line="509" lineend="510" name="handle_write" signature="handle_write(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="339" lineend="341" name="bind" returns="self.socket.bind()" signature="bind(self, addr)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable ilk="argument" name="addr" />
        </scope>
        <scope ilk="function" line="512" lineend="513" name="handle_connect" signature="handle_connect(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="264" lineend="275" name="__repr__" returns="tuple" signature="__repr__(self)">
          <variable citdl="list" line="265" name="status" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="279" lineend="283" name="add_channel" signature="add_channel(self, map=None)">
          <variable citdl="dict" ilk="argument" name="map" />
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="524" lineend="526" name="handle_close" signature="handle_close(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="453" lineend="466" name="handle_write_event" signature="handle_write_event(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable citdl="self.socket.getsockopt()" line="461" name="err" />
        </scope>
        <scope ilk="function" line="446" lineend="451" name="handle_connect_event" signature="handle_connect_event(self)">
          <variable citdl="dispatcher" ilk="argument" name="self" />
          <variable citdl="self.socket.getsockopt()" line="447" name="err" />
        </scope>
        <variable citdl="sock.getpeername()" line="229" name="addr" />
        <variable attributes="__instancevar__" citdl="tuple" line="295" name="family_and_type" />
        <variable attributes="protected __instancevar__" citdl="dict" line="234" name="_map" />
        <variable citdl="frozenset()" line="230" name="ignore_log_types" />
        <variable citdl="False" line="226" name="connected" />
        <variable attributes="protected __instancevar__" citdl="sock.fileno()" line="238" name="_fileno" />
        <variable citdl="False" line="225" name="debug" />
        <variable citdl="True" line="227" name="accepting" />
        <variable citdl="False" line="228" name="closing" />
        <variable attributes="__instancevar__" line="262" name="socket" />
      </scope>
      <scope classrefs="dispatcher" doc="&#xA;" ilk="class" line="533" lineend="554" name="dispatcher_with_send">
        <scope ilk="function" line="547" lineend="548" name="writable" returns="bool" signature="writable(self)">
          <variable citdl="dispatcher_with_send" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="535" lineend="537" name="__init__" signature="__init__(self, sock=None, map=None)">
          <variable ilk="argument" name="map" />
          <variable citdl="dispatcher_with_send" ilk="argument" name="self" />
          <variable ilk="argument" name="sock" />
        </scope>
        <scope ilk="function" line="544" lineend="545" name="handle_write" signature="handle_write(self)">
          <variable citdl="dispatcher_with_send" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="539" lineend="542" name="initiate_send" signature="initiate_send(self)">
          <variable citdl="dispatcher_with_send" ilk="argument" name="self" />
          <variable citdl="int" line="540" name="num_sent" />
        </scope>
        <scope ilk="function" line="550" lineend="554" name="send" signature="send(self, data)">
          <variable citdl="dispatcher_with_send" ilk="argument" name="self" />
          <variable ilk="argument" name="data" />
        </scope>
        <variable attributes="__instancevar__" citdl="list" line="537" name="out_buffer" />
      </scope>
      <variable citdl="dict" name="errorcode" />
      <scope ilk="function" line="205" lineend="221" name="loop" signature="loop(timeout=30.0, use_poll=False, map=None, count=None)">
        <variable ilk="argument" name="count" />
        <variable citdl="dict" ilk="argument" name="map" />
        <variable citdl="False" ilk="argument" name="use_poll" />
        <variable citdl="float" ilk="argument" name="timeout" />
        <variable citdl="poll2" line="210" name="poll_fun" />
      </scope>
      <import module="os" />
      <scope ilk="function" line="125" lineend="168" name="poll" signature="poll(timeout=0.0, map=None)">
        <variable citdl="dict" ilk="argument" name="map" />
        <variable citdl="obj.readable()" line="131" name="is_r" />
        <variable citdl="list" line="129" name="e" />
        <variable citdl="float" ilk="argument" name="timeout" />
        <variable citdl="obj.writable()" line="132" name="is_w" />
        <variable citdl="list" line="129" name="r" />
        <variable citdl="list" line="129" name="w" />
        <variable citdl="map.get()" line="153" name="obj" />
      </scope>
      <scope ilk="function" line="170" lineend="201" name="poll2" signature="poll2(timeout=0.0, map=None)">
        <variable citdl="dict" ilk="argument" name="map" />
        <variable citdl="list" line="192" name="r" />
        <variable citdl="map.get()" line="198" name="obj" />
        <variable citdl="int()" ilk="argument" name="timeout" />
        <variable citdl="select.poll()" line="177" name="pollster" />
        <variable citdl="int" line="180" name="flags" />
      </scope>
      <scope ilk="function" line="203" name="poll3" signature="poll3(timeout=0.0, map=None)" />
      <scope ilk="function" line="81" lineend="87" name="read" signature="read(obj)">
        <variable ilk="argument" name="obj" />
      </scope>
      <scope ilk="function" line="105" lineend="123" name="readwrite" signature="readwrite(obj, flags)">
        <variable ilk="argument" name="flags" />
        <variable ilk="argument" name="obj" />
      </scope>
      <import module="select" />
      <import module="socket" />
      <variable citdl="dict" line="66" name="socket_map" />
      <import module="sys" />
      <import module="time" />
      <import module="warnings" />
      <scope ilk="function" line="89" lineend="95" name="write" signature="write(obj)">
        <variable ilk="argument" name="obj" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="97" lineend="103" name="_exception" signature="_exception(obj)">
        <variable ilk="argument" name="obj" />
      </scope>
      <scope attributes="__hidden__" doc="&#xA;" ilk="class" line="614" lineend="643" name="file_wrapper">
        <scope attributes="__ctor__" ilk="function" line="619" lineend="620" name="__init__" signature="file_wrapper(fd)">
          <variable citdl="file_wrapper" ilk="argument" name="self" />
          <variable ilk="argument" name="fd" />
        </scope>
        <variable attributes="__instancevar__" citdl="os.dup()" line="620" name="fd" />
        <scope ilk="function" line="622" lineend="623" name="recv" returns="os.read()" signature="recv(*args)">
          <variable citdl="file_wrapper" ilk="argument" name="self" />
          <variable attributes="varargs" ilk="argument" name="args" />
        </scope>
        <scope ilk="function" line="625" lineend="626" name="send" returns="os.write()" signature="send(*args)">
          <variable citdl="file_wrapper" ilk="argument" name="self" />
          <variable attributes="varargs" ilk="argument" name="args" />
        </scope>
        <scope ilk="function" line="628" lineend="633" name="getsockopt" returns="int" signature="getsockopt(level, optname, buflen=None)">
          <variable citdl="file_wrapper" ilk="argument" name="self" />
          <variable ilk="argument" name="level" />
          <variable ilk="argument" name="optname" />
          <variable ilk="argument" name="buflen" />
        </scope>
        <variable citdl="file_wrapper.recv" line="636" name="read" signature="read(self, *args)" />
        <variable citdl="file_wrapper.send" line="637" name="write" signature="write(self, *args)" />
        <scope ilk="function" line="639" lineend="640" name="close" signature="close()">
          <variable citdl="file_wrapper" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="642" lineend="643" name="fileno" returns="os.dup()" signature="fileno()">
          <variable citdl="file_wrapper" ilk="argument" name="self" />
        </scope>
      </scope>
      <variable attributes="protected __hidden__" citdl="frozenset()" line="60" name="_DISCONNECTED" />
      <scope attributes="__hidden__" classrefs="dispatcher" doc="&#xA;" ilk="class" line="645" lineend="663" name="file_dispatcher">
        <scope attributes="__ctor__" ilk="function" line="647" lineend="658" name="__init__" signature="file_dispatcher(fd, map=None)">
          <variable citdl="file_dispatcher" ilk="argument" name="self" />
          <variable citdl="fd.fileno()" ilk="argument" name="fd" />
          <variable ilk="argument" name="map" />
          <variable citdl="int" line="656" name="flags" />
        </scope>
        <variable attributes="__instancevar__" citdl="True" line="649" name="connected" />
        <scope ilk="function" line="660" lineend="663" name="set_file" signature="set_file(fd)">
          <variable citdl="file_dispatcher" ilk="argument" name="self" />
          <variable ilk="argument" name="fd" />
        </scope>
        <variable attributes="__instancevar__" citdl="file_wrapper" line="661" name="socket" />
        <variable attributes="protected __instancevar__" citdl="self.socket.fileno()" line="662" name="_fileno" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="68" lineend="74" name="_strerror" returns="str" signature="_strerror(err)">
        <variable ilk="argument" name="err" />
      </scope>
      <variable attributes="protected __hidden__" citdl="tuple" line="79" name="_reraised_exceptions" />
    </scope>
    