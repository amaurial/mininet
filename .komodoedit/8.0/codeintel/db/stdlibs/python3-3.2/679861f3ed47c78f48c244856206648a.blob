<scope doc="An RFC 2821 smtp proxy.&#xA;Usage: %(program)s [options] [localhost:localport [remotehost:remoteport]]  Options:  --nosetuid -n This program generally tries to setuid `nobody&apos;, unless this flag is set.  The setuid call will fail if this program is not run as root (in which case, use this flag). " ilk="blob" lang="Python" name="smtpd">
      <variable citdl="str" name="COMMASPACE" />
      <variable citdl="Devnull" name="DEBUGSTREAM" />
      <scope classrefs="SMTPServer" doc="&#xA;" ilk="class" name="DebuggingServer">
        <scope doc="# Do something with the gathered message" ilk="function" name="process_message" signature="process_message(self, peer, mailfrom, rcpttos, data)" />
      </scope>
      <scope classrefs="object" doc="&#xA;" ilk="class" name="Devnull">
        <scope ilk="function" name="write" signature="write(self, msg)" />
        <scope ilk="function" name="flush" signature="flush(self)" />
      </scope>
      <variable citdl="str" name="EMPTYSTRING" />
      <scope classrefs="PureProxy" doc="&#xA;" ilk="class" name="MailmanProxy">
        <scope ilk="function" name="process_message" signature="process_message(self, peer, mailfrom, rcpttos, data)" />
      </scope>
      <variable citdl="str" name="NEWLINE" />
      <scope classrefs="object" doc="&#xA;" ilk="class" name="Options" />
      <scope classrefs="SMTPServer" doc="&#xA;" ilk="class" name="PureProxy">
        <scope ilk="function" name="process_message" signature="process_message(self, peer, mailfrom, rcpttos, data)" />
        <scope ilk="function" name="_deliver" signature="_deliver(self, mailfrom, rcpttos, data)" />
      </scope>
      <scope classrefs="async_chat" doc="&#xA;" ilk="class" name="SMTPChannel">
        <scope doc="# Implementation of base class abstract method" ilk="function" name="collect_incoming_data" signature="collect_incoming_data(self, data)" />
        <scope ilk="function" name="smtp_DATA" signature="smtp_DATA(self, arg)" />
        <scope doc="# Implementation of base class abstract method" ilk="function" name="found_terminator" signature="found_terminator(self)" />
        <scope ilk="function" name="smtp_RSET" signature="smtp_RSET(self, arg)" />
        <scope ilk="function" name="smtp_QUIT" signature="smtp_QUIT(self, arg)" />
        <scope ilk="function" name="__init__" signature="__init__(self, server, conn, addr)" />
        <scope ilk="function" name="smtp_NOOP" signature="smtp_NOOP(self, arg)" />
        <scope doc="# SMTP and ESMTP commands" ilk="function" name="smtp_HELO" signature="smtp_HELO(self, arg)" />
        <scope ilk="function" name="smtp_RCPT" signature="smtp_RCPT(self, arg)" />
        <scope ilk="function" name="smtp_MAIL" signature="smtp_MAIL(self, arg)" />
        <scope doc="# Overrides base class for convenience" ilk="function" name="push" signature="push(self, msg)" />
        <scope doc="# factored" ilk="function" name="_SMTPChannel__getaddr" signature="_SMTPChannel__getaddr(self, keyword, arg)" />
      </scope>
      <scope classrefs="dispatcher" doc="&#xA;" ilk="class" name="SMTPServer">
        <scope doc="Override this abstract method to handle messages from the&#xA;client." ilk="function" name="process_message" signature="process_message(self, peer, mailfrom, rcpttos, data)" />
        <scope ilk="function" name="handle_accepted" signature="handle_accepted(self, conn, addr)" />
        <scope ilk="function" name="__init__" signature="__init__(self, localaddr, remoteaddr)" />
      </scope>
      <variable citdl="list" name="__all__" />
      <import module="asynchat" />
      <import module="asyncore" />
      <import module="errno" />
      <import module="getopt" />
      <import module="os" />
      <scope ilk="function" name="parseargs" signature="parseargs()" />
      <variable citdl="str" name="program" />
      <import module="socket" />
      <import module="sys" />
      <import module="time" />
      <scope ilk="function" name="usage" signature="usage(code, msg=&apos;&apos;)" />
      <scope doc="Issue a warning, or maybe ignore it or raise an exception." ilk="function" name="warn" />
    </scope>
    