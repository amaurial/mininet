<scope doc="This is an interface to Python&apos;s internal parser.&#xA;" ilk="blob" lang="Python" name="parser">
      <scope classrefs="Exception" doc="&#xA;" ilk="class" name="ParserError" />
      <scope classrefs="object" doc="Intermediate representation of a Python parse tree.&#xA;" ilk="class" name="STType">
        <scope doc="x.__ne__(y) &lt;==&gt; x!=y" ilk="function" name="__ne__" signature="x.__ne__(y) &lt;==&gt; x!=y" />
        <scope doc="Determines if this ST object was created from an expression." ilk="function" name="isexpr" />
        <scope doc="Creates a list-tree representation of this ST." ilk="function" name="tolist" />
        <scope doc="Compile this ST object into a code object." ilk="function" name="compile" />
        <scope doc="Determines if this ST object was created from a suite." ilk="function" name="issuite" />
        <scope doc="x.__le__(y) &lt;==&gt; x&lt;=y" ilk="function" name="__le__" signature="x.__le__(y) &lt;==&gt; x&lt;=y" />
        <scope doc="x.__gt__(y) &lt;==&gt; x&gt;y" ilk="function" name="__gt__" signature="x.__gt__(y) &lt;==&gt; x&gt;y" />
        <scope doc="Creates a tuple-tree representation of this ST." ilk="function" name="totuple" />
        <scope doc="x.__lt__(y) &lt;==&gt; x&lt;y" ilk="function" name="__lt__" signature="x.__lt__(y) &lt;==&gt; x&lt;y" />
        <scope doc="x.__eq__(y) &lt;==&gt; x==y" ilk="function" name="__eq__" signature="x.__eq__(y) &lt;==&gt; x==y" />
        <scope doc="x.__ge__(y) &lt;==&gt; x&gt;=y" ilk="function" name="__ge__" signature="x.__ge__(y) &lt;==&gt; x&gt;=y" />
      </scope>
      <variable citdl="str" name="__copyright__" />
      <scope doc="Compiles an ST object into a code object." ilk="function" name="compilest" />
      <scope doc="Creates an ST object from an expression." ilk="function" name="expr" />
      <scope doc="Determines if an ST object was created from an expression." ilk="function" name="isexpr" />
      <scope doc="Determines if an ST object was created from a suite." ilk="function" name="issuite" />
      <scope doc="Creates an ST object from a tree representation." ilk="function" name="sequence2st" />
      <scope doc="Creates a list-tree representation of an ST." ilk="function" name="st2list" />
      <scope doc="Creates a tuple-tree representation of an ST." ilk="function" name="st2tuple" />
      <scope doc="Creates an ST object from a suite." ilk="function" name="suite" />
      <scope doc="Creates an ST object from a tree representation." ilk="function" name="tuple2st" />
    </scope>
    