<scope doc="Common pathname manipulations, WindowsNT/95 version.&#xA;Instead of importing this module directly, import os and refer to this module as os.path." ilk="blob" lang="Python" name="ntpath">
      <variable citdl="list" line="14" name="__all__" />
      <scope doc="Return the absolute version of a path." ilk="function" line="585" lineend="597" name="abspath" returns="normpath()" signature="abspath(path)">
        <variable citdl="os.getcwdb()" ilk="argument" name="path" />
      </scope>
      <variable citdl="str" line="29" name="altsep" />
      <scope doc="Returns the final component of a pathname" ilk="function" line="307" lineend="309" name="basename" signature="basename(p)">
        <variable ilk="argument" name="p" />
      </scope>
      <scope doc="Given a list of pathnames, returns the longest common&#xA;leading component" ilk="function" name="commonprefix" signature="commonprefix(m)" />
      <variable citdl="str" line="24" name="curdir" />
      <variable citdl="str" line="30" name="defpath" />
      <variable citdl="str" line="36" name="devnull" />
      <scope doc="Returns the directory component of a pathname" ilk="function" line="314" lineend="316" name="dirname" signature="dirname(p)">
        <variable ilk="argument" name="p" />
      </scope>
      <scope doc="Test whether a path exists." ilk="function" name="exists" signature="exists(path)" />
      <scope doc="Expand ~ and ~user constructs." ilk="function" line="363" lineend="396" name="expanduser" returns="join()" signature="expanduser(path)">
        <variable citdl="join()" line="378" name="userhome" />
        <variable citdl="str" line="368" name="tilde" />
        <variable citdl="int" line="373" name="i" />
        <variable ilk="argument" name="path" />
        <variable citdl="str" line="385" name="drive" />
        <variable citdl="len()" line="373" name="n" />
      </scope>
      <scope doc="Expand shell variables of the forms $var, ${var} and %var%." ilk="function" line="412" lineend="522" name="expandvars" returns="list" signature="expandvars(path)">
        <variable citdl="path.index()" line="435" name="index" />
        <variable citdl="list" line="438" name="c" />
        <variable citdl="str" line="421" name="quote" />
        <variable citdl="str" line="422" name="percent" />
        <variable citdl="str" line="424" name="dollar" />
        <variable citdl="str" line="465" name="value" />
        <variable citdl="bytes()" line="420" name="varchars" />
        <variable citdl="len()" line="436" name="pathlen" />
        <variable citdl="list" line="434" name="res" />
        <variable citdl="var.decode()" line="461" name="var" />
        <variable citdl="list" ilk="argument" name="path" />
        <variable citdl="str" line="423" name="brace" />
      </scope>
      <variable citdl="str" line="26" name="extsep" />
      <import module="genericpath" />
      <scope doc="Return the last access time of a file, reported by&#xA;os.stat()." ilk="function" name="getatime" signature="getatime(filename)" />
      <scope doc="Return the metadata change time of a file, reported by&#xA;os.stat()." ilk="function" name="getctime" signature="getctime(filename)" />
      <scope doc="Return the last modification time of a file, reported by&#xA;os.stat()." ilk="function" name="getmtime" signature="getmtime(filename)" />
      <scope doc="Return the size of a file, reported by os.stat()." ilk="function" name="getsize" signature="getsize(filename)" />
      <scope doc="Test whether a path is absolute" ilk="function" line="100" lineend="103" name="isabs" returns="bool" signature="isabs(s)">
        <variable ilk="argument" name="s" />
      </scope>
      <scope doc="Return true if the pathname refers to an existing directory." ilk="function" name="isdir" signature="isdir(s)" />
      <scope doc="Test whether a path is a regular file" ilk="function" name="isfile" signature="isfile(path)" />
      <scope doc="Test whether a path is a symbolic link." ilk="function" line="321" lineend="330" name="islink" returns="bool" signature="islink(path)">
        <variable ilk="argument" name="path" />
        <variable citdl="os.lstat()" line="327" name="st" />
      </scope>
      <scope doc="Test whether a path is a mount point (defined as root of&#xA;drive)" ilk="function" line="345" lineend="351" name="ismount" returns="bool" signature="ismount(path)">
        <variable ilk="argument" name="path" />
        <variable citdl="_get_bothseps()" line="347" name="seps" />
        <variable line="348" name="root" />
        <variable line="348" name="rest" />
      </scope>
      <scope doc="Join two or more pathname components, inserting &quot;\&quot; as&#xA;needed." ilk="function" line="108" lineend="182" name="join" returns="b" signature="join(a, *p)">
        <variable ilk="argument" name="a" />
        <variable line="155" name="path_rest" />
        <variable citdl="_get_sep()" line="112" name="sep" />
        <variable attributes="varargs" ilk="argument" name="p" />
        <variable citdl="_get_colon()" line="114" name="colon" />
        <variable line="140" name="b_rest" />
        <variable citdl="b" line="115" name="path" />
        <variable citdl="_get_bothseps()" line="113" name="seps" />
        <variable line="140" name="b_prefix" />
        <variable citdl="int" line="117" name="b_wins" />
      </scope>
      <scope doc="Test whether a path exists." ilk="function" line="334" lineend="340" name="lexists" returns="bool" signature="lexists(path)">
        <variable ilk="argument" name="path" />
        <variable citdl="os.lstat()" line="337" name="st" />
      </scope>
      <scope doc="Normalize case of pathname." ilk="function" line="84" lineend="91" name="normcase" signature="normcase(s)">
        <variable ilk="argument" name="s" />
      </scope>
      <scope doc="Normalize path, eliminating double slashes, etc." ilk="function" line="529" lineend="566" name="normpath" returns="sep.join()" signature="normpath(path)">
        <variable citdl="_get_dot()" line="532" name="dotdot" />
        <variable citdl="path.split()" line="548" name="comps" />
        <variable line="541" name="prefix" />
        <variable citdl="_get_special()" line="533" name="special_prefixes" />
        <variable citdl="_get_sep()" line="531" name="sep" />
        <variable citdl="int" line="549" name="i" />
        <variable citdl="path.replace()" ilk="argument" name="path" />
      </scope>
      <import module="os" />
      <variable citdl="str" line="25" name="pardir" />
      <variable citdl="str" line="28" name="pathsep" />
      <scope doc="Return the absolute version of a path." ilk="function" line="600" name="realpath" signature="realpath(path)" />
      <scope doc="Return a relative version of a path" ilk="function" line="605" lineend="640" name="relpath" returns="join()" signature="relpath(path, start=&apos;.&apos;)">
        <variable citdl="abspath()" line="616" name="path_abs" />
        <variable citdl="str" line="634" name="pardir" />
        <variable citdl="_get_sep()" line="607" name="sep" />
        <variable citdl="int" line="627" name="i" />
        <variable citdl="_get_dot()" ilk="argument" name="start" />
        <variable citdl="list" line="637" name="rel_list" />
        <variable line="617" name="start_drive" />
        <variable line="617" name="start_rest" />
        <variable citdl="abspath()" line="615" name="start_abs" />
        <variable citdl="str.format()" line="620" name="error" />
        <variable citdl="list" line="625" name="path_list" />
        <variable ilk="argument" name="path" />
        <variable line="618" name="path_rest" />
        <variable line="618" name="path_drive" />
        <variable citdl="list" line="624" name="start_list" />
      </scope>
      <scope doc="Test whether two pathnames reference the same actual file" ilk="function" line="659" lineend="661" name="samefile" returns="bool" signature="samefile(f1, f2)">
        <variable ilk="argument" name="f1" />
        <variable ilk="argument" name="f2" />
      </scope>
      <scope doc="Test whether two file objects reference the same file" ilk="function" line="672" lineend="674" name="sameopenfile" returns="bool" signature="sameopenfile(f1, f2)">
        <variable ilk="argument" name="f1" />
        <variable ilk="argument" name="f2" />
      </scope>
      <variable citdl="str" line="27" name="sep" />
      <scope doc="Split a pathname." ilk="function" line="273" lineend="291" name="split" returns="tuple" signature="split(p)">
        <variable ilk="argument" name="p" />
        <variable citdl="list" line="285" name="head" />
        <variable line="280" name="d" />
        <variable citdl="len()" line="282" name="i" />
        <variable citdl="_get_bothseps()" line="279" name="seps" />
        <variable citdl="list" line="285" name="tail" />
        <variable citdl="list" line="287" name="head2" />
      </scope>
      <scope doc="Split a pathname into drive/UNC sharepoint and relative path&#xA;specifiers." ilk="function" line="188" lineend="229" name="splitdrive" returns="tuple" signature="splitdrive(p)">
        <variable citdl="normp.find()" line="216" name="index" />
        <variable citdl="_get_empty()" line="207" name="empty" />
        <variable citdl="_get_sep()" line="209" name="sep" />
        <variable citdl="normp.find()" line="219" name="index2" />
        <variable citdl="normcase()" line="210" name="normp" />
        <variable ilk="argument" name="p" />
      </scope>
      <scope doc="Split the extension from a pathname." ilk="function" line="299" lineend="301" name="splitext" returns="genericpath._splitext()" signature="splitext(p)">
        <variable ilk="argument" name="p" />
        <variable citdl="genericpath._splitext.__doc__" line="302" name="__doc__" />
      </scope>
      <scope doc="Deprecated since Python 3.1." ilk="function" line="233" lineend="265" name="splitunc" returns="tuple" signature="splitunc(p)">
        <variable ilk="argument" name="p" />
        <variable citdl="normcase()" line="256" name="normp" />
        <variable citdl="list" line="250" name="firstTwo" />
        <variable citdl="normp.find()" line="257" name="index" />
        <variable citdl="_get_sep()" line="247" name="sep" />
      </scope>
      <import module="stat" />
      <variable citdl="bool" line="602" name="supports_unicode_filenames" />
      <import module="sys" />
      <scope attributes="protected __hidden__" ilk="function" line="669" lineend="670" name="_getfileinformation" signature="_getfileinformation(fd)">
        <variable ilk="argument" name="fd" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="44" lineend="48" name="_get_sep" returns="str" signature="_get_sep(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="38" lineend="42" name="_get_empty" returns="str" signature="_get_empty(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="62" lineend="66" name="_get_dot" returns="str" signature="_get_dot(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="656" lineend="657" name="_getfinalpathname" returns="abspath()" signature="_getfinalpathname(f)">
        <variable ilk="argument" name="f" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="56" lineend="60" name="_get_bothseps" returns="str" signature="_get_bothseps(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="68" lineend="72" name="_get_colon" returns="str" signature="_get_colon(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="50" lineend="54" name="_get_altsep" returns="str" signature="_get_altsep(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="74" lineend="78" name="_get_special" returns="tuple" signature="_get_special(path)">
        <variable ilk="argument" name="path" />
      </scope>
    </scope>
    