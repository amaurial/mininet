<scope doc="Weak reference support for Python.&#xA;This module is an implementation of PEP 205:  http://www.python.org/dev/peps/pep-0205/" ilk="blob" lang="Python" name="weakref">
      <scope classrefs="object" doc="&#xA;" ilk="class" name="CallableProxyType">
        <scope doc="x.__int__() &lt;==&gt; int(x)" ilk="function" name="__int__" signature="x.__int__() &lt;==&gt; int(x)" />
        <scope doc="x.__ror__(y) &lt;==&gt; y|x" ilk="function" name="__ror__" signature="x.__ror__(y) &lt;==&gt; y|x" />
        <scope doc="x.__rtruediv__(y) &lt;==&gt; y/x" ilk="function" name="__rtruediv__" signature="x.__rtruediv__(y) &lt;==&gt; y/x" />
        <scope doc="x.__lshift__(y) &lt;==&gt; x&lt;&lt;y" ilk="function" name="__lshift__" signature="x.__lshift__(y) &lt;==&gt; x&lt;&lt;y" />
        <scope doc="Use of negative indices is not supported." ilk="function" name="__getslice__" signature="x.__getslice__(i, j) &lt;==&gt; x[i:j]" />
        <scope doc="x.__isub__(y) &lt;==&gt; x-y" ilk="function" name="__isub__" signature="x.__isub__(y) &lt;==&gt; x-y" />
        <scope doc="x.__str__() &lt;==&gt; str(x)" ilk="function" name="__str__" signature="x.__str__() &lt;==&gt; str(x)" />
        <scope doc="x.__getattribute__(&apos;name&apos;) &lt;==&gt; x.name" ilk="function" name="__getattribute__" signature="x.__getattribute__(&apos;name&apos;) &lt;==&gt; x.name" />
        <scope doc="x.__contains__(y) &lt;==&gt; y in x" ilk="function" name="__contains__" signature="x.__contains__(y) &lt;==&gt; y in x" />
        <scope doc="x.__radd__(y) &lt;==&gt; y+x" ilk="function" name="__radd__" signature="x.__radd__(y) &lt;==&gt; y+x" />
        <scope doc="x.__and__(y) &lt;==&gt; x&amp;y" ilk="function" name="__and__" signature="x.__and__(y) &lt;==&gt; x&amp;y" />
        <scope doc="x.__truediv__(y) &lt;==&gt; x/y" ilk="function" name="__truediv__" signature="x.__truediv__(y) &lt;==&gt; x/y" />
        <scope doc="x.__rrshift__(y) &lt;==&gt; y&gt;&gt;x" ilk="function" name="__rrshift__" signature="x.__rrshift__(y) &lt;==&gt; y&gt;&gt;x" />
        <scope doc="x.__rsub__(y) &lt;==&gt; y-x" ilk="function" name="__rsub__" signature="x.__rsub__(y) &lt;==&gt; y-x" />
        <scope doc="x.__rdiv__(y) &lt;==&gt; y/x" ilk="function" name="__rdiv__" signature="x.__rdiv__(y) &lt;==&gt; y/x" />
        <scope doc="x.__rmul__(y) &lt;==&gt; y*x" ilk="function" name="__rmul__" signature="x.__rmul__(y) &lt;==&gt; y*x" />
        <scope doc="x.__rmod__(y) &lt;==&gt; y%x" ilk="function" name="__rmod__" signature="x.__rmod__(y) &lt;==&gt; y%x" />
        <scope doc="x.next() -&gt; the next value, or raise StopIteration" ilk="function" name="next" signature="x.next() -&gt; the next value, or raise StopIteration" />
        <scope doc="x.__float__() &lt;==&gt; float(x)" ilk="function" name="__float__" signature="x.__float__() &lt;==&gt; float(x)" />
        <scope doc="y.__rpow__(x[, z]) &lt;==&gt; pow(x, y[, z])" ilk="function" name="__rpow__" signature="y.__rpow__(x[, z]) &lt;==&gt; pow(x, y[, z])" />
        <scope doc="x.__rand__(y) &lt;==&gt; y&amp;x" ilk="function" name="__rand__" signature="x.__rand__(y) &lt;==&gt; y&amp;x" />
        <scope doc="x.__setattr__(&apos;name&apos;, value) &lt;==&gt; x.name = value" ilk="function" name="__setattr__" signature="x.__setattr__(&apos;name&apos;, value) &lt;==&gt; x.name = value" />
        <scope doc="x.__imod__(y) &lt;==&gt; x%y" ilk="function" name="__imod__" signature="x.__imod__(y) &lt;==&gt; x%y" />
        <scope doc="x.__iand__(y) &lt;==&gt; x&amp;y" ilk="function" name="__iand__" signature="x.__iand__(y) &lt;==&gt; x&amp;y" />
        <scope doc="x.__getitem__(y) &lt;==&gt; x[y]" ilk="function" name="__getitem__" signature="x.__getitem__(y) &lt;==&gt; x[y]" />
        <scope doc="x.__ipow__(y) &lt;==&gt; x**y" ilk="function" name="__ipow__" signature="x.__ipow__(y) &lt;==&gt; x**y" />
        <scope doc="x.__or__(y) &lt;==&gt; x|y" ilk="function" name="__or__" signature="x.__or__(y) &lt;==&gt; x|y" />
        <scope doc="x.__rlshift__(y) &lt;==&gt; y&lt;&lt;x" ilk="function" name="__rlshift__" signature="x.__rlshift__(y) &lt;==&gt; y&lt;&lt;x" />
        <scope doc="x.__cmp__(y) &lt;==&gt; cmp(x,y)" ilk="function" name="__cmp__" signature="x.__cmp__(y) &lt;==&gt; cmp(x,y)" />
        <scope doc="x.__pos__() &lt;==&gt; +x" ilk="function" name="__pos__" signature="x.__pos__() &lt;==&gt; +x" />
        <scope doc="x.__itruediv__(y) &lt;==&gt; x/y" ilk="function" name="__itruediv__" signature="x.__itruediv__(y) &lt;==&gt; x/y" />
        <scope doc="x.__rfloordiv__(y) &lt;==&gt; y//x" ilk="function" name="__rfloordiv__" signature="x.__rfloordiv__(y) &lt;==&gt; y//x" />
        <scope doc="x.__call__(...) &lt;==&gt; x(...)" ilk="function" name="__call__" signature="x.__call__(...) &lt;==&gt; x(...)" />
        <scope doc="x.__abs__() &lt;==&gt; abs(x)" ilk="function" name="__abs__" signature="x.__abs__() &lt;==&gt; abs(x)" />
        <scope doc="x.__ixor__(y) &lt;==&gt; x^y" ilk="function" name="__ixor__" signature="x.__ixor__(y) &lt;==&gt; x^y" />
        <scope doc="x.__irshift__(y) &lt;==&gt; x&gt;&gt;y" ilk="function" name="__irshift__" signature="x.__irshift__(y) &lt;==&gt; x&gt;&gt;y" />
        <scope doc="x.__mul__(y) &lt;==&gt; x*y" ilk="function" name="__mul__" signature="x.__mul__(y) &lt;==&gt; x*y" />
        <scope doc="x.__rshift__(y) &lt;==&gt; x&gt;&gt;y" ilk="function" name="__rshift__" signature="x.__rshift__(y) &lt;==&gt; x&gt;&gt;y" />
        <scope doc="x.__rdivmod__(y) &lt;==&gt; divmod(y, x)" ilk="function" name="__rdivmod__" signature="x.__rdivmod__(y) &lt;==&gt; divmod(y, x)" />
        <scope doc="x.__invert__() &lt;==&gt; ~x" ilk="function" name="__invert__" signature="x.__invert__() &lt;==&gt; ~x" />
        <scope doc="x.__ifloordiv__(y) &lt;==&gt; x//y" ilk="function" name="__ifloordiv__" signature="x.__ifloordiv__(y) &lt;==&gt; x//y" />
        <scope doc="x.__idiv__(y) &lt;==&gt; x/y" ilk="function" name="__idiv__" signature="x.__idiv__(y) &lt;==&gt; x/y" />
        <scope doc="x.__floordiv__(y) &lt;==&gt; x//y" ilk="function" name="__floordiv__" signature="x.__floordiv__(y) &lt;==&gt; x//y" />
        <scope doc="x.__iter__() &lt;==&gt; iter(x)" ilk="function" name="__iter__" signature="x.__iter__() &lt;==&gt; iter(x)" />
        <scope doc="Use of negative indices is not supported." ilk="function" name="__delslice__" signature="x.__delslice__(i, j) &lt;==&gt; del x[i:j]" />
        <scope doc="x.__divmod__(y) &lt;==&gt; divmod(x, y)" ilk="function" name="__divmod__" signature="x.__divmod__(y) &lt;==&gt; divmod(x, y)" />
        <scope doc="x.__add__(y) &lt;==&gt; x+y" ilk="function" name="__add__" signature="x.__add__(y) &lt;==&gt; x+y" />
        <scope doc="x[y:z] &lt;==&gt; x[y.__index__():z.__index__()]" ilk="function" name="__index__" />
        <scope doc="x.__rxor__(y) &lt;==&gt; y^x" ilk="function" name="__rxor__" signature="x.__rxor__(y) &lt;==&gt; y^x" />
        <scope doc="x.__ilshift__(y) &lt;==&gt; x&lt;&lt;y" ilk="function" name="__ilshift__" signature="x.__ilshift__(y) &lt;==&gt; x&lt;&lt;y" />
        <scope doc="x.__delitem__(y) &lt;==&gt; del x[y]" ilk="function" name="__delitem__" signature="x.__delitem__(y) &lt;==&gt; del x[y]" />
        <scope doc="x.__nonzero__() &lt;==&gt; x != 0" ilk="function" name="__nonzero__" signature="x.__nonzero__() &lt;==&gt; x != 0" />
        <scope doc="x.__imul__(y) &lt;==&gt; x*y" ilk="function" name="__imul__" signature="x.__imul__(y) &lt;==&gt; x*y" />
        <scope doc="x.__mod__(y) &lt;==&gt; x%y" ilk="function" name="__mod__" signature="x.__mod__(y) &lt;==&gt; x%y" />
        <scope doc="Use  of negative indices is not supported." ilk="function" name="__setslice__" signature="x.__setslice__(i, j, y) &lt;==&gt; x[i:j]=y" />
        <scope doc="x.__neg__() &lt;==&gt; -x" ilk="function" name="__neg__" signature="x.__neg__() &lt;==&gt; -x" />
        <scope doc="x.__setitem__(i, y) &lt;==&gt; x[i]=y" ilk="function" name="__setitem__" signature="x.__setitem__(i, y) &lt;==&gt; x[i]=y" />
        <scope doc="x.__iadd__(y) &lt;==&gt; x+y" ilk="function" name="__iadd__" signature="x.__iadd__(y) &lt;==&gt; x+y" />
        <scope doc="x.__xor__(y) &lt;==&gt; x^y" ilk="function" name="__xor__" signature="x.__xor__(y) &lt;==&gt; x^y" />
        <scope doc="x.__delattr__(&apos;name&apos;) &lt;==&gt; del x.name" ilk="function" name="__delattr__" signature="x.__delattr__(&apos;name&apos;) &lt;==&gt; del x.name" />
        <scope doc="x.__div__(y) &lt;==&gt; x/y" ilk="function" name="__div__" signature="x.__div__(y) &lt;==&gt; x/y" />
        <scope doc="x.__len__() &lt;==&gt; len(x)" ilk="function" name="__len__" signature="x.__len__() &lt;==&gt; len(x)" />
        <scope doc="x.__repr__() &lt;==&gt; repr(x)" ilk="function" name="__repr__" signature="x.__repr__() &lt;==&gt; repr(x)" />
        <scope doc="x.__ior__(y) &lt;==&gt; x|y" ilk="function" name="__ior__" signature="x.__ior__(y) &lt;==&gt; x|y" />
        <scope doc="x.__sub__(y) &lt;==&gt; x-y" ilk="function" name="__sub__" signature="x.__sub__(y) &lt;==&gt; x-y" />
        <scope doc="x.__long__() &lt;==&gt; long(x)" ilk="function" name="__long__" signature="x.__long__() &lt;==&gt; long(x)" />
        <scope doc="x.__pow__(y[, z]) &lt;==&gt; pow(x, y[, z])" ilk="function" name="__pow__" signature="x.__pow__(y[, z]) &lt;==&gt; pow(x, y[, z])" />
      </scope>
      <scope classrefs="weakref" doc="Specialized reference that includes a key corresponding to the value.&#xA;This is used in the WeakValueDictionary to avoid having to create a function object for each key stored in the mapping.  A shared callback object can use the &apos;key&apos; attribute of a KeyedRef instead of getting a reference to the key from an enclosing scope." ilk="class" line="211" lineend="229" name="KeyedRef">
        <scope ilk="function" line="223" lineend="226" name="__new__" returns="ref.__new__()" signature="__new__(type, ob, callback, key)">
          <variable ilk="argument" name="callback" />
          <variable citdl="ref.__new__()" line="224" name="self" />
          <variable citdl="KeyedRef" ilk="argument" name="type" />
          <variable ilk="argument" name="ob" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="228" lineend="229" name="__init__" signature="KeyedRef(ob, callback, key)">
          <variable ilk="argument" name="callback" />
          <variable citdl="KeyedRef" ilk="argument" name="self" />
          <variable ilk="argument" name="ob" />
          <variable ilk="argument" name="key" />
        </scope>
        <variable citdl="tuple" line="221" name="__slots__" />
      </scope>
      <scope classrefs="object" doc="&#xA;" ilk="class" name="ProxyType">
        <scope doc="x.__int__() &lt;==&gt; int(x)" ilk="function" name="__int__" signature="x.__int__() &lt;==&gt; int(x)" />
        <scope doc="x.__ror__(y) &lt;==&gt; y|x" ilk="function" name="__ror__" signature="x.__ror__(y) &lt;==&gt; y|x" />
        <scope doc="x.__rtruediv__(y) &lt;==&gt; y/x" ilk="function" name="__rtruediv__" signature="x.__rtruediv__(y) &lt;==&gt; y/x" />
        <scope doc="x.__lshift__(y) &lt;==&gt; x&lt;&lt;y" ilk="function" name="__lshift__" signature="x.__lshift__(y) &lt;==&gt; x&lt;&lt;y" />
        <scope doc="Use of negative indices is not supported." ilk="function" name="__getslice__" signature="x.__getslice__(i, j) &lt;==&gt; x[i:j]" />
        <scope doc="x.__isub__(y) &lt;==&gt; x-y" ilk="function" name="__isub__" signature="x.__isub__(y) &lt;==&gt; x-y" />
        <scope doc="x.__str__() &lt;==&gt; str(x)" ilk="function" name="__str__" signature="x.__str__() &lt;==&gt; str(x)" />
        <scope doc="x.__getattribute__(&apos;name&apos;) &lt;==&gt; x.name" ilk="function" name="__getattribute__" signature="x.__getattribute__(&apos;name&apos;) &lt;==&gt; x.name" />
        <scope doc="x.__contains__(y) &lt;==&gt; y in x" ilk="function" name="__contains__" signature="x.__contains__(y) &lt;==&gt; y in x" />
        <scope doc="x.__radd__(y) &lt;==&gt; y+x" ilk="function" name="__radd__" signature="x.__radd__(y) &lt;==&gt; y+x" />
        <scope doc="x.__and__(y) &lt;==&gt; x&amp;y" ilk="function" name="__and__" signature="x.__and__(y) &lt;==&gt; x&amp;y" />
        <scope doc="x.__truediv__(y) &lt;==&gt; x/y" ilk="function" name="__truediv__" signature="x.__truediv__(y) &lt;==&gt; x/y" />
        <scope doc="x.__rrshift__(y) &lt;==&gt; y&gt;&gt;x" ilk="function" name="__rrshift__" signature="x.__rrshift__(y) &lt;==&gt; y&gt;&gt;x" />
        <scope doc="x.__rsub__(y) &lt;==&gt; y-x" ilk="function" name="__rsub__" signature="x.__rsub__(y) &lt;==&gt; y-x" />
        <scope doc="x.__rdiv__(y) &lt;==&gt; y/x" ilk="function" name="__rdiv__" signature="x.__rdiv__(y) &lt;==&gt; y/x" />
        <scope doc="x.__rmul__(y) &lt;==&gt; y*x" ilk="function" name="__rmul__" signature="x.__rmul__(y) &lt;==&gt; y*x" />
        <scope doc="x.__rmod__(y) &lt;==&gt; y%x" ilk="function" name="__rmod__" signature="x.__rmod__(y) &lt;==&gt; y%x" />
        <scope doc="x.next() -&gt; the next value, or raise StopIteration" ilk="function" name="next" signature="x.next() -&gt; the next value, or raise StopIteration" />
        <scope doc="x.__float__() &lt;==&gt; float(x)" ilk="function" name="__float__" signature="x.__float__() &lt;==&gt; float(x)" />
        <scope doc="y.__rpow__(x[, z]) &lt;==&gt; pow(x, y[, z])" ilk="function" name="__rpow__" signature="y.__rpow__(x[, z]) &lt;==&gt; pow(x, y[, z])" />
        <scope doc="x.__rand__(y) &lt;==&gt; y&amp;x" ilk="function" name="__rand__" signature="x.__rand__(y) &lt;==&gt; y&amp;x" />
        <scope doc="x.__setattr__(&apos;name&apos;, value) &lt;==&gt; x.name = value" ilk="function" name="__setattr__" signature="x.__setattr__(&apos;name&apos;, value) &lt;==&gt; x.name = value" />
        <scope doc="x.__imod__(y) &lt;==&gt; x%y" ilk="function" name="__imod__" signature="x.__imod__(y) &lt;==&gt; x%y" />
        <scope doc="x.__iand__(y) &lt;==&gt; x&amp;y" ilk="function" name="__iand__" signature="x.__iand__(y) &lt;==&gt; x&amp;y" />
        <scope doc="x.__getitem__(y) &lt;==&gt; x[y]" ilk="function" name="__getitem__" signature="x.__getitem__(y) &lt;==&gt; x[y]" />
        <scope doc="x.__ipow__(y) &lt;==&gt; x**y" ilk="function" name="__ipow__" signature="x.__ipow__(y) &lt;==&gt; x**y" />
        <scope doc="x.__or__(y) &lt;==&gt; x|y" ilk="function" name="__or__" signature="x.__or__(y) &lt;==&gt; x|y" />
        <scope doc="x.__rlshift__(y) &lt;==&gt; y&lt;&lt;x" ilk="function" name="__rlshift__" signature="x.__rlshift__(y) &lt;==&gt; y&lt;&lt;x" />
        <scope doc="x.__cmp__(y) &lt;==&gt; cmp(x,y)" ilk="function" name="__cmp__" signature="x.__cmp__(y) &lt;==&gt; cmp(x,y)" />
        <scope doc="x.__pos__() &lt;==&gt; +x" ilk="function" name="__pos__" signature="x.__pos__() &lt;==&gt; +x" />
        <scope doc="x.__itruediv__(y) &lt;==&gt; x/y" ilk="function" name="__itruediv__" signature="x.__itruediv__(y) &lt;==&gt; x/y" />
        <scope doc="x.__rfloordiv__(y) &lt;==&gt; y//x" ilk="function" name="__rfloordiv__" signature="x.__rfloordiv__(y) &lt;==&gt; y//x" />
        <scope ilk="function" name="__unicode__" />
        <scope doc="x.__abs__() &lt;==&gt; abs(x)" ilk="function" name="__abs__" signature="x.__abs__() &lt;==&gt; abs(x)" />
        <scope doc="x.__ixor__(y) &lt;==&gt; x^y" ilk="function" name="__ixor__" signature="x.__ixor__(y) &lt;==&gt; x^y" />
        <scope doc="x.__irshift__(y) &lt;==&gt; x&gt;&gt;y" ilk="function" name="__irshift__" signature="x.__irshift__(y) &lt;==&gt; x&gt;&gt;y" />
        <scope doc="x.__mul__(y) &lt;==&gt; x*y" ilk="function" name="__mul__" signature="x.__mul__(y) &lt;==&gt; x*y" />
        <scope doc="x.__rshift__(y) &lt;==&gt; x&gt;&gt;y" ilk="function" name="__rshift__" signature="x.__rshift__(y) &lt;==&gt; x&gt;&gt;y" />
        <scope doc="x.__rdivmod__(y) &lt;==&gt; divmod(y, x)" ilk="function" name="__rdivmod__" signature="x.__rdivmod__(y) &lt;==&gt; divmod(y, x)" />
        <scope doc="x.__invert__() &lt;==&gt; ~x" ilk="function" name="__invert__" signature="x.__invert__() &lt;==&gt; ~x" />
        <scope doc="x.__ifloordiv__(y) &lt;==&gt; x//y" ilk="function" name="__ifloordiv__" signature="x.__ifloordiv__(y) &lt;==&gt; x//y" />
        <scope doc="x.__idiv__(y) &lt;==&gt; x/y" ilk="function" name="__idiv__" signature="x.__idiv__(y) &lt;==&gt; x/y" />
        <scope doc="x.__floordiv__(y) &lt;==&gt; x//y" ilk="function" name="__floordiv__" signature="x.__floordiv__(y) &lt;==&gt; x//y" />
        <scope doc="x.__iter__() &lt;==&gt; iter(x)" ilk="function" name="__iter__" signature="x.__iter__() &lt;==&gt; iter(x)" />
        <scope doc="Use of negative indices is not supported." ilk="function" name="__delslice__" signature="x.__delslice__(i, j) &lt;==&gt; del x[i:j]" />
        <scope doc="x.__divmod__(y) &lt;==&gt; divmod(x, y)" ilk="function" name="__divmod__" signature="x.__divmod__(y) &lt;==&gt; divmod(x, y)" />
        <scope doc="x.__add__(y) &lt;==&gt; x+y" ilk="function" name="__add__" signature="x.__add__(y) &lt;==&gt; x+y" />
        <scope doc="x[y:z] &lt;==&gt; x[y.__index__():z.__index__()]" ilk="function" name="__index__" />
        <scope doc="x.__rxor__(y) &lt;==&gt; y^x" ilk="function" name="__rxor__" signature="x.__rxor__(y) &lt;==&gt; y^x" />
        <scope doc="x.__ilshift__(y) &lt;==&gt; x&lt;&lt;y" ilk="function" name="__ilshift__" signature="x.__ilshift__(y) &lt;==&gt; x&lt;&lt;y" />
        <scope doc="x.__delitem__(y) &lt;==&gt; del x[y]" ilk="function" name="__delitem__" signature="x.__delitem__(y) &lt;==&gt; del x[y]" />
        <scope doc="x.__nonzero__() &lt;==&gt; x != 0" ilk="function" name="__nonzero__" signature="x.__nonzero__() &lt;==&gt; x != 0" />
        <scope doc="x.__imul__(y) &lt;==&gt; x*y" ilk="function" name="__imul__" signature="x.__imul__(y) &lt;==&gt; x*y" />
        <scope doc="x.__mod__(y) &lt;==&gt; x%y" ilk="function" name="__mod__" signature="x.__mod__(y) &lt;==&gt; x%y" />
        <scope doc="Use  of negative indices is not supported." ilk="function" name="__setslice__" signature="x.__setslice__(i, j, y) &lt;==&gt; x[i:j]=y" />
        <scope doc="x.__neg__() &lt;==&gt; -x" ilk="function" name="__neg__" signature="x.__neg__() &lt;==&gt; -x" />
        <scope doc="x.__setitem__(i, y) &lt;==&gt; x[i]=y" ilk="function" name="__setitem__" signature="x.__setitem__(i, y) &lt;==&gt; x[i]=y" />
        <scope doc="x.__iadd__(y) &lt;==&gt; x+y" ilk="function" name="__iadd__" signature="x.__iadd__(y) &lt;==&gt; x+y" />
        <scope doc="x.__xor__(y) &lt;==&gt; x^y" ilk="function" name="__xor__" signature="x.__xor__(y) &lt;==&gt; x^y" />
        <scope doc="x.__delattr__(&apos;name&apos;) &lt;==&gt; del x.name" ilk="function" name="__delattr__" signature="x.__delattr__(&apos;name&apos;) &lt;==&gt; del x.name" />
        <scope doc="x.__div__(y) &lt;==&gt; x/y" ilk="function" name="__div__" signature="x.__div__(y) &lt;==&gt; x/y" />
        <scope doc="x.__len__() &lt;==&gt; len(x)" ilk="function" name="__len__" signature="x.__len__() &lt;==&gt; len(x)" />
        <scope doc="x.__repr__() &lt;==&gt; repr(x)" ilk="function" name="__repr__" signature="x.__repr__() &lt;==&gt; repr(x)" />
        <scope doc="x.__ior__(y) &lt;==&gt; x|y" ilk="function" name="__ior__" signature="x.__ior__(y) &lt;==&gt; x|y" />
        <scope doc="x.__sub__(y) &lt;==&gt; x-y" ilk="function" name="__sub__" signature="x.__sub__(y) &lt;==&gt; x-y" />
        <scope doc="x.__long__() &lt;==&gt; long(x)" ilk="function" name="__long__" signature="x.__long__() &lt;==&gt; long(x)" />
        <scope doc="x.__pow__(y[, z]) &lt;==&gt; pow(x, y[, z])" ilk="function" name="__pow__" signature="x.__pow__(y[, z]) &lt;==&gt; pow(x, y[, z])" />
      </scope>
      <variable citdl="tuple" line="28" name="ProxyTypes" />
      <scope classrefs="StandardError" doc="Weak ref proxy used after referent went away.&#xA;" ilk="class" name="ReferenceError">
        <scope ilk="function" name="__init__" />
      </scope>
      <scope classrefs="object" doc="&#xA;" ilk="class" name="ReferenceType">
        <scope doc="x.__ne__(y) &lt;==&gt; x!=y" ilk="function" name="__ne__" signature="x.__ne__(y) &lt;==&gt; x!=y" />
        <scope doc="x.__call__(...) &lt;==&gt; x(...)" ilk="function" name="__call__" signature="x.__call__(...) &lt;==&gt; x(...)" />
        <scope doc="x.__le__(y) &lt;==&gt; x&lt;=y" ilk="function" name="__le__" signature="x.__le__(y) &lt;==&gt; x&lt;=y" />
        <scope doc="x.__repr__() &lt;==&gt; repr(x)" ilk="function" name="__repr__" signature="x.__repr__() &lt;==&gt; repr(x)" />
        <scope ilk="function" name="__init__" />
        <scope doc="x.__gt__(y) &lt;==&gt; x&gt;y" ilk="function" name="__gt__" signature="x.__gt__(y) &lt;==&gt; x&gt;y" />
        <scope doc="x.__hash__() &lt;==&gt; hash(x)" ilk="function" name="__hash__" signature="x.__hash__() &lt;==&gt; hash(x)" />
        <scope doc="x.__lt__(y) &lt;==&gt; x&lt;y" ilk="function" name="__lt__" signature="x.__lt__(y) &lt;==&gt; x&lt;y" />
        <scope doc="x.__eq__(y) &lt;==&gt; x==y" ilk="function" name="__eq__" signature="x.__eq__(y) &lt;==&gt; x==y" />
        <scope doc="x.__ge__(y) &lt;==&gt; x&gt;=y" ilk="function" name="__ge__" signature="x.__ge__(y) &lt;==&gt; x&gt;=y" />
      </scope>
      <import module="UserDict" />
      <scope classrefs="UserDict" doc="Mapping class that references keys weakly.&#xA;Entries in the dictionary will be discarded when there is no longer a strong reference to the key. This can be used to associate additional data with an object owned by other parts of an application without adding attributes to those objects. This can be especially useful with objects that override attribute accesses." ilk="class" line="232" lineend="379" name="WeakKeyDictionary">
        <scope ilk="function" line="308" lineend="312" name="iteritems" signature="iteritems()">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable citdl="wr()" line="310" name="key" />
        </scope>
        <scope ilk="function" line="365" lineend="366" name="pop" returns="self.data.pop()" signature="pop(key, *args)">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable attributes="varargs" ilk="argument" name="args" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="286" lineend="291" name="has_key" returns="bool" signature="has_key(key)">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable citdl="ref()" line="288" name="wr" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope doc="Return a list of weak references to the keys." ilk="function" line="338" lineend="348" name="keyrefs" returns="self.data.keys()" signature="keyrefs()">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="243" lineend="250" name="__init__" signature="WeakKeyDictionary(dict=None)">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable ilk="argument" name="dict" />
          <scope ilk="function" line="245" lineend="248" name="remove" signature="remove(k, selfref=ref(self))">
            <variable ilk="argument" name="k" />
            <variable citdl="ref()" ilk="argument" name="selfref" />
            <variable citdl="selfref()" line="246" name="self" />
          </scope>
        </scope>
        <scope ilk="function" line="293" lineend="298" name="__contains__" returns="bool" signature="__contains__(key)">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable citdl="ref()" line="295" name="wr" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="335" lineend="336" name="itervalues" returns="self.data.itervalues()" signature="itervalues()">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="255" lineend="256" name="__getitem__" signature="__getitem__(key)">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="283" lineend="284" name="get" returns="self.data.get()" signature="get(key, default=None)">
          <variable ilk="argument" name="default" />
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="350" lineend="356" name="keys" returns="list" signature="keys()">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable citdl="list" line="351" name="L" />
          <variable citdl="wr()" line="353" name="o" />
        </scope>
        <scope ilk="function" line="274" lineend="281" name="__deepcopy__" returns="self.__class__()" signature="__deepcopy__(memo)">
          <variable citdl="self.__class__()" line="276" name="new" />
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable ilk="argument" name="memo" />
          <variable citdl="key()" line="278" name="o" />
        </scope>
        <scope ilk="function" line="371" lineend="379" name="update" signature="update(dict=None, **kwargs)">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable citdl="type()()" ilk="argument" name="dict" />
          <variable citdl="dict" line="372" name="d" />
          <variable attributes="kwargs" ilk="argument" name="kwargs" />
        </scope>
        <scope ilk="function" line="332" lineend="333" name="__iter__" returns="WeakKeyDictionary.iterkeys()" signature="__iter__()">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="358" lineend="363" name="popitem" returns="tuple" signature="popitem()">
          <variable citdl="key()" line="361" name="o" />
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable line="360" name="value" />
          <variable line="360" name="key" />
        </scope>
        <scope ilk="function" line="264" lineend="270" name="copy" signature="copy()">
          <variable citdl="" line="265" name="new" />
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable citdl="key()" line="267" name="o" />
        </scope>
        <scope ilk="function" line="326" lineend="330" name="iterkeys" signature="iterkeys()">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable citdl="wr()" line="328" name="obj" />
        </scope>
        <scope ilk="function" line="252" lineend="253" name="__delitem__" signature="__delitem__(key)">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="368" lineend="369" name="setdefault" returns="self.data.setdefault()" signature="setdefault(key, default=None)">
          <variable ilk="argument" name="default" />
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="300" lineend="306" name="items" returns="list" signature="items()">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable citdl="list" line="301" name="L" />
          <variable citdl="key()" line="303" name="o" />
        </scope>
        <scope doc="Return an iterator that yields the weak references to the&#xA;keys." ilk="function" line="314" lineend="324" name="iterkeyrefs" returns="self.data.iterkeys()" signature="iterkeyrefs()">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="261" lineend="262" name="__setitem__" signature="__setitem__(key, value)">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
          <variable ilk="argument" name="value" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="258" lineend="259" name="__repr__" returns="str" signature="__repr__()">
          <variable citdl="WeakKeyDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="272" name="__copy__" />
        <variable attributes="protected __instancevar__" citdl="WeakKeyDictionary.__init__.remove" line="249" name="_remove" />
        <variable attributes="__instancevar__" citdl="dict" line="244" name="data" />
      </scope>
      <scope classrefs="object" doc="&#xA;" ilk="class" name="WeakSet">
        <scope ilk="function" name="difference_update" />
        <scope ilk="function" name="symmetric_difference" />
        <scope ilk="function" name="__reduce__" />
        <scope ilk="function" name="pop" />
        <scope ilk="function" name="issuperset" />
        <scope ilk="function" name="remove" />
        <scope ilk="function" name="__and__" />
        <scope ilk="function" name="__lt__" />
        <scope ilk="function" name="__init__" />
        <scope ilk="function" name="_commit_removals" />
        <scope ilk="function" name="intersection" />
        <scope ilk="function" name="__iand__" />
        <scope ilk="function" name="issubset" />
        <scope ilk="function" name="__contains__" />
        <scope ilk="function" name="union" />
        <scope ilk="function" name="discard" />
        <scope ilk="function" name="add" />
        <scope ilk="function" name="__ixor__" />
        <scope ilk="function" name="__len__" />
        <scope ilk="function" name="__isub__" />
        <scope ilk="function" name="symmetric_difference_update" />
        <scope ilk="function" name="update" />
        <scope ilk="function" name="difference" />
        <scope ilk="function" name="__iter__" />
        <scope ilk="function" name="__or__" />
        <scope ilk="function" name="__gt__" />
        <scope ilk="function" name="copy" />
        <scope ilk="function" name="__eq__" />
        <scope ilk="function" name="isdisjoint" />
        <scope ilk="function" name="clear" />
        <scope ilk="function" name="intersection_update" />
        <scope ilk="function" name="__xor__" />
        <scope ilk="function" name="__ior__" />
        <scope ilk="function" name="__le__" />
        <scope doc="# Helper functions for simple delegating methods." ilk="function" name="_apply" />
        <scope ilk="function" name="__sub__" />
        <scope ilk="function" name="__ge__" />
      </scope>
      <scope classrefs="UserDict" doc="Mapping class that references values weakly.&#xA;Entries in the dictionary will be discarded when no strong reference to the value exists anymore" ilk="class" line="35" lineend="208" name="WeakValueDictionary">
        <scope ilk="function" line="122" lineend="126" name="iteritems" signature="iteritems()">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable citdl="wr()" line="124" name="value" />
        </scope>
        <scope doc="Return an iterator that yields the weak references to the&#xA;values." ilk="function" line="134" lineend="144" name="itervaluerefs" returns="self.data.itervalues()" signature="itervaluerefs()">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="69" lineend="74" name="has_key" returns="bool" signature="has_key(key)">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable line="71" name="o" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="47" lineend="53" name="__init__" signature="WeakValueDictionary(*args, **kw)">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable attributes="varargs" ilk="argument" name="args" />
          <variable attributes="kwargs" ilk="argument" name="kw" />
          <scope ilk="function" line="48" lineend="51" name="remove" signature="remove(wr, selfref=ref(self))">
            <variable ilk="argument" name="wr" />
            <variable citdl="ref()" ilk="argument" name="selfref" />
            <variable citdl="selfref()" line="49" name="self" />
          </scope>
        </scope>
        <scope ilk="function" line="62" lineend="67" name="__contains__" returns="bool" signature="__contains__(key)">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable line="64" name="o" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="146" lineend="150" name="itervalues" signature="itervalues()">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable citdl="wr()" line="148" name="obj" />
        </scope>
        <scope ilk="function" line="55" lineend="60" name="__getitem__" signature="__getitem__(key)">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable line="56" name="o" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="101" lineend="112" name="get" returns="wr()" signature="get(key, default=None)">
          <variable ilk="argument" name="default" />
          <variable citdl="wr()" line="107" name="o" />
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable line="103" name="wr" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="92" lineend="99" name="__deepcopy__" returns="self.__class__()" signature="__deepcopy__(memo)">
          <variable citdl="self.__class__()" line="94" name="new" />
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable ilk="argument" name="memo" />
          <variable citdl="wr()" line="96" name="o" />
        </scope>
        <scope doc="Return a list of weak references to the values." ilk="function" line="190" lineend="200" name="valuerefs" returns="self.data.values()" signature="valuerefs()">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="180" lineend="188" name="update" signature="update(dict=None, **kwargs)">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable citdl="type()()" ilk="argument" name="dict" />
          <variable citdl="self.data" line="181" name="d" />
          <variable attributes="kwargs" ilk="argument" name="kwargs" />
        </scope>
        <scope ilk="function" line="131" lineend="132" name="__iter__" returns="self.data.iterkeys()" signature="__iter__()">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="159" lineend="169" name="pop" returns="self.data.pop()()" signature="pop(key, *args)">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable attributes="varargs" ilk="argument" name="args" />
          <variable citdl="self.data.pop()()" line="161" name="o" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="152" lineend="157" name="popitem" returns="tuple" signature="popitem()">
          <variable citdl="wr()" line="155" name="o" />
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable line="154" name="wr" />
          <variable line="154" name="key" />
        </scope>
        <scope ilk="function" line="82" lineend="88" name="copy" signature="copy()">
          <variable citdl="" line="83" name="new" />
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable citdl="wr()" line="85" name="o" />
        </scope>
        <scope ilk="function" line="128" lineend="129" name="iterkeys" returns="self.data.iterkeys()" signature="iterkeys()">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="171" lineend="178" name="setdefault" returns="WeakValueDictionary.setdefault.wr()" signature="setdefault(key, default=None)">
          <variable ilk="argument" name="default" />
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable line="173" name="wr" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="114" lineend="120" name="items" returns="list" signature="items()">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable citdl="list" line="115" name="L" />
          <variable citdl="wr()" line="117" name="o" />
        </scope>
        <scope ilk="function" line="79" lineend="80" name="__setitem__" signature="__setitem__(key, value)">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable ilk="argument" name="value" />
          <variable ilk="argument" name="key" />
        </scope>
        <scope ilk="function" line="202" lineend="208" name="values" returns="list" signature="values()">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
          <variable citdl="list" line="203" name="L" />
          <variable citdl="wr()" line="205" name="o" />
        </scope>
        <scope ilk="function" line="76" lineend="77" name="__repr__" returns="str" signature="__repr__()">
          <variable citdl="WeakValueDictionary" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="90" name="__copy__" />
        <variable attributes="protected __instancevar__" citdl="WeakValueDictionary.__init__.remove" line="52" name="_remove" />
      </scope>
      <variable citdl="list" line="30" name="__all__" />
      <scope doc="return the number of weak references" ilk="function" name="getweakrefcount" signature="getweakrefcount(object)" />
      <scope doc="return a list of all weak reference objects" ilk="function" name="getweakrefs" signature="getweakrefs(object)" />
      <scope doc="create a proxy object that weakly" ilk="function" name="proxy" signature="proxy(object[, callback])" />
      <scope classrefs="object" doc="&#xA;" ilk="class" name="ref">
        <scope doc="x.__ne__(y) &lt;==&gt; x!=y" ilk="function" name="__ne__" signature="x.__ne__(y) &lt;==&gt; x!=y" />
        <scope doc="x.__call__(...) &lt;==&gt; x(...)" ilk="function" name="__call__" signature="x.__call__(...) &lt;==&gt; x(...)" />
        <scope doc="x.__le__(y) &lt;==&gt; x&lt;=y" ilk="function" name="__le__" signature="x.__le__(y) &lt;==&gt; x&lt;=y" />
        <scope doc="x.__repr__() &lt;==&gt; repr(x)" ilk="function" name="__repr__" signature="x.__repr__() &lt;==&gt; repr(x)" />
        <scope ilk="function" name="__init__" />
        <scope doc="x.__gt__(y) &lt;==&gt; x&gt;y" ilk="function" name="__gt__" signature="x.__gt__(y) &lt;==&gt; x&gt;y" />
        <scope doc="x.__hash__() &lt;==&gt; hash(x)" ilk="function" name="__hash__" signature="x.__hash__() &lt;==&gt; hash(x)" />
        <scope doc="x.__lt__(y) &lt;==&gt; x&lt;y" ilk="function" name="__lt__" signature="x.__lt__(y) &lt;==&gt; x&lt;y" />
        <scope doc="x.__eq__(y) &lt;==&gt; x==y" ilk="function" name="__eq__" signature="x.__eq__(y) &lt;==&gt; x==y" />
        <scope doc="x.__ge__(y) &lt;==&gt; x&gt;=y" ilk="function" name="__ge__" signature="x.__ge__(y) &lt;==&gt; x&gt;=y" />
      </scope>
    </scope>
    