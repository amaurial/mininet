<scope doc="Access to the Unix group database.&#xA;Group entries are reported as 4-tuples containing the following fields from the group database, in order:  name   - name of the group passwd - group password (encrypted); often empty gid    - numeric ID of the group mem    - list of members  The gid is an integer, name and password are strings.  (Note that most users are not explicitly listed as members of the groups they are in" ilk="blob" lang="Python" name="grp">
      <scope doc="Return a list of all available group entries, in arbitrary&#xA;order." ilk="function" name="getgrall" returns="list" signature="getgrall() -&gt; list of tuples" />
      <scope doc="Return the group database entry for the given numeric group&#xA;ID." ilk="function" name="getgrgid" returns="tuple" signature="getgrgid(id) -&gt; tuple" />
      <scope doc="Return the group database entry for the given group name." ilk="function" name="getgrnam" returns="tuple" signature="getgrnam(name) -&gt; tuple" />
      <scope classrefs="object" doc="grp.struct_group: Results from getgr*() routines.&#xA;This object may be accessed either as a tuple of (gr_name,gr_passwd,gr_gid,gr_mem) or via the object attributes as named in the above tuple." ilk="class" name="struct_group">
        <scope doc="Use of negative indices is not supported." ilk="function" name="__getslice__" signature="x.__getslice__(i, j) &lt;==&gt; x[i:j]" />
        <scope ilk="function" name="__reduce__" />
        <scope doc="x.__rmul__(n) &lt;==&gt; n*x" ilk="function" name="__rmul__" signature="x.__rmul__(n) &lt;==&gt; n*x" />
        <scope doc="x.__lt__(y) &lt;==&gt; x&lt;y" ilk="function" name="__lt__" signature="x.__lt__(y) &lt;==&gt; x&lt;y" />
        <scope doc="x.__contains__(y) &lt;==&gt; y in x" ilk="function" name="__contains__" signature="x.__contains__(y) &lt;==&gt; y in x" />
        <scope doc="x.__len__() &lt;==&gt; len(x)" ilk="function" name="__len__" signature="x.__len__() &lt;==&gt; len(x)" />
        <scope doc="x.__mul__(n) &lt;==&gt; x*n" ilk="function" name="__mul__" signature="x.__mul__(n) &lt;==&gt; x*n" />
        <scope doc="x.__ne__(y) &lt;==&gt; x!=y" ilk="function" name="__ne__" signature="x.__ne__(y) &lt;==&gt; x!=y" />
        <scope doc="x.__getitem__(y) &lt;==&gt; x[y]" ilk="function" name="__getitem__" signature="x.__getitem__(y) &lt;==&gt; x[y]" />
        <scope doc="x.__add__(y) &lt;==&gt; x+y" ilk="function" name="__add__" signature="x.__add__(y) &lt;==&gt; x+y" />
        <scope doc="x.__gt__(y) &lt;==&gt; x&gt;y" ilk="function" name="__gt__" signature="x.__gt__(y) &lt;==&gt; x&gt;y" />
        <scope doc="x.__eq__(y) &lt;==&gt; x==y" ilk="function" name="__eq__" signature="x.__eq__(y) &lt;==&gt; x==y" />
        <scope doc="x.__le__(y) &lt;==&gt; x&lt;=y" ilk="function" name="__le__" signature="x.__le__(y) &lt;==&gt; x&lt;=y" />
        <scope doc="x.__repr__() &lt;==&gt; repr(x)" ilk="function" name="__repr__" signature="x.__repr__() &lt;==&gt; repr(x)" />
        <scope doc="x.__hash__() &lt;==&gt; hash(x)" ilk="function" name="__hash__" signature="x.__hash__() &lt;==&gt; hash(x)" />
        <scope doc="x.__ge__(y) &lt;==&gt; x&gt;=y" ilk="function" name="__ge__" signature="x.__ge__(y) &lt;==&gt; x&gt;=y" />
      </scope>
    </scope>
    