<scope doc="Pathname and path-related operations for the Macintosh.&#xA;" ilk="blob" lang="Python" name="macpath">
      <variable citdl="int" name="SF_APPEND" />
      <variable citdl="int" name="SF_ARCHIVED" />
      <variable citdl="int" name="SF_IMMUTABLE" />
      <variable citdl="int" name="SF_NOUNLINK" />
      <variable citdl="int" name="SF_SNAPSHOT" />
      <variable citdl="int" name="ST_ATIME" />
      <variable citdl="int" name="ST_CTIME" />
      <variable citdl="int" name="ST_DEV" />
      <variable citdl="int" name="ST_GID" />
      <variable citdl="int" name="ST_INO" />
      <variable citdl="int" name="ST_MODE" />
      <variable citdl="int" name="ST_MTIME" />
      <variable citdl="int" name="ST_NLINK" />
      <variable citdl="int" name="ST_SIZE" />
      <variable citdl="int" name="ST_UID" />
      <variable citdl="int" name="S_ENFMT" />
      <variable citdl="int" name="S_IEXEC" />
      <variable citdl="int" name="S_IFBLK" />
      <variable citdl="int" name="S_IFCHR" />
      <variable citdl="int" name="S_IFDIR" />
      <variable citdl="int" name="S_IFIFO" />
      <variable citdl="int" name="S_IFLNK" />
      <scope ilk="function" name="S_IFMT" signature="S_IFMT(mode)" />
      <variable citdl="int" name="S_IFREG" />
      <variable citdl="int" name="S_IFSOCK" />
      <scope ilk="function" name="S_IMODE" signature="S_IMODE(mode)" />
      <variable citdl="int" name="S_IREAD" />
      <variable citdl="int" name="S_IRGRP" />
      <variable citdl="int" name="S_IROTH" />
      <variable citdl="int" name="S_IRUSR" />
      <variable citdl="int" name="S_IRWXG" />
      <variable citdl="int" name="S_IRWXO" />
      <variable citdl="int" name="S_IRWXU" />
      <scope ilk="function" name="S_ISBLK" signature="S_ISBLK(mode)" />
      <scope ilk="function" name="S_ISCHR" signature="S_ISCHR(mode)" />
      <scope ilk="function" name="S_ISDIR" signature="S_ISDIR(mode)" />
      <scope ilk="function" name="S_ISFIFO" signature="S_ISFIFO(mode)" />
      <variable citdl="int" name="S_ISGID" />
      <scope ilk="function" name="S_ISLNK" signature="S_ISLNK(mode)" />
      <scope ilk="function" name="S_ISREG" signature="S_ISREG(mode)" />
      <scope ilk="function" name="S_ISSOCK" signature="S_ISSOCK(mode)" />
      <variable citdl="int" name="S_ISUID" />
      <variable citdl="int" name="S_ISVTX" />
      <variable citdl="int" name="S_IWGRP" />
      <variable citdl="int" name="S_IWOTH" />
      <variable citdl="int" name="S_IWRITE" />
      <variable citdl="int" name="S_IWUSR" />
      <variable citdl="int" name="S_IXGRP" />
      <variable citdl="int" name="S_IXOTH" />
      <variable citdl="int" name="S_IXUSR" />
      <variable citdl="int" name="UF_APPEND" />
      <variable citdl="int" name="UF_IMMUTABLE" />
      <variable citdl="int" name="UF_NODUMP" />
      <variable citdl="int" name="UF_NOUNLINK" />
      <variable citdl="int" name="UF_OPAQUE" />
      <variable citdl="list" line="9" name="__all__" />
      <scope doc="Return an absolute path." ilk="function" line="186" lineend="194" name="abspath" returns="normpath()" signature="abspath(path)">
        <variable citdl="join()" ilk="argument" name="path" />
        <variable citdl="os.getcwd()" line="190" name="cwd" />
      </scope>
      <variable citdl="NoneType" line="23" name="altsep" />
      <scope ilk="function" line="90" lineend="90" name="basename" signature="basename(s)">
        <variable ilk="argument" name="s" />
      </scope>
      <scope doc="Given a list of pathnames, returns the longest common&#xA;leading component" ilk="function" name="commonprefix" signature="commonprefix(m)" />
      <variable citdl="str" line="17" name="curdir" />
      <variable citdl="str" line="22" name="defpath" />
      <variable citdl="str" line="24" name="devnull" />
      <scope ilk="function" line="89" lineend="89" name="dirname" signature="dirname(s)">
        <variable ilk="argument" name="s" />
      </scope>
      <scope doc="Test whether a path exists." ilk="function" name="exists" signature="exists(path)" />
      <scope doc="Dummy to retain interface-compatibility with other operating&#xA;systems." ilk="function" line="124" lineend="126" name="expanduser" signature="expanduser(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <scope doc="Dummy to retain interface-compatibility with other operating&#xA;systems." ilk="function" line="119" lineend="121" name="expandvars" signature="expandvars(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <variable citdl="str" line="19" name="extsep" />
      <import module="genericpath" />
      <scope doc="Return the last access time of a file, reported by&#xA;os.stat()." ilk="function" name="getatime" signature="getatime(filename)" />
      <scope doc="Return the metadata change time of a file, reported by&#xA;os.stat()." ilk="function" name="getctime" signature="getctime(filename)" />
      <scope doc="Return the last modification time of a file, reported by&#xA;os.stat()." ilk="function" name="getmtime" signature="getmtime(filename)" />
      <scope doc="Return the size of a file, reported by os.stat()." ilk="function" name="getsize" signature="getsize(filename)" />
      <scope doc="Return true if a path is absolute." ilk="function" line="32" lineend="39" name="isabs" returns="bool" signature="isabs(s)">
        <variable ilk="argument" name="s" />
      </scope>
      <scope doc="Return true if the pathname refers to an existing directory." ilk="function" name="isdir" signature="isdir(s)" />
      <scope doc="Test whether a path is a regular file" ilk="function" name="isfile" signature="isfile(path)" />
      <scope doc="Return true if the pathname refers to a symbolic link." ilk="function" line="98" lineend="105" name="islink" returns="bool" signature="islink(s)">
        <variable ilk="argument" name="s" />
      </scope>
      <scope ilk="function" line="92" lineend="96" name="ismount" returns="bool" signature="ismount(s)">
        <variable ilk="argument" name="s" />
        <variable citdl="split()" line="95" name="components" />
      </scope>
      <scope ilk="function" line="42" lineend="55" name="join" returns="str" signature="join(s, *p)">
        <variable attributes="varargs" ilk="argument" name="p" />
        <variable ilk="argument" name="s" />
        <variable citdl="list" line="49" name="t" />
        <variable citdl="t" line="43" name="path" />
      </scope>
      <scope doc="Test whether a path exists." ilk="function" line="110" lineend="117" name="lexists" returns="bool" signature="lexists(path)">
        <variable ilk="argument" name="path" />
        <variable citdl="os.lstat()" line="114" name="st" />
      </scope>
      <scope classrefs="Exception" doc="Path cannot be normalized&#xA;" ilk="class" line="128" name="norm_error" />
      <scope ilk="function" line="28" lineend="29" name="normcase" returns="path.lower()" signature="normcase(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <scope doc="Normalize a pathname." ilk="function" line="131" lineend="156" name="normpath" returns="str" signature="normpath(s)">
        <variable citdl="int" line="139" name="i" />
        <variable citdl="s.split()" line="138" name="comps" />
        <variable citdl="list" ilk="argument" name="s" />
      </scope>
      <import module="os" />
      <variable citdl="str" line="18" name="pardir" />
      <variable citdl="str" line="21" name="pathsep" />
      <scope doc="# realpath is a no-op on systems without islink support" ilk="function" line="197" lineend="213" name="realpath" returns="join()" signature="realpath(path)">
        <variable citdl="abspath()" ilk="argument" name="path" />
        <variable citdl="path.split()" line="205" name="components" />
      </scope>
      <variable citdl="str" line="20" name="sep" />
      <scope doc="Split a pathname into two parts: the directory leading up to&#xA;the final bit, and the basename (the filename, without&#xA;colons, in that directory)." ilk="function" line="58" lineend="70" name="split" returns="tuple" signature="split(s)">
        <variable citdl="list" line="67" name="path" />
        <variable ilk="argument" name="s" />
        <variable citdl="int" line="64" name="colon" />
        <variable citdl="list" line="67" name="file" />
      </scope>
      <scope doc="Split a pathname into a drive specification and the rest of&#xA;the path." ilk="function" line="77" lineend="84" name="splitdrive" returns="tuple" signature="splitdrive(p)">
        <variable ilk="argument" name="p" />
      </scope>
      <scope doc="Split the extension from a pathname." ilk="function" line="73" lineend="74" name="splitext" returns="genericpath._splitext()" signature="splitext(p)">
        <variable ilk="argument" name="p" />
        <variable citdl="genericpath._splitext.__doc__" line="75" name="__doc__" />
      </scope>
      <variable citdl="bool" line="215" name="supports_unicode_filenames" />
      <scope doc="Directory tree walk with callback function." ilk="function" line="159" lineend="183" name="walk" signature="walk(top, func, arg)">
        <variable ilk="argument" name="top" />
        <variable citdl="os.listdir()" line="176" name="names" />
        <variable citdl="join()" line="181" name="name" />
        <variable ilk="argument" name="func" />
        <variable ilk="argument" name="arg" />
      </scope>
      <import module="warnings" />
    </scope>
    