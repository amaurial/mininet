<scope doc="Common pathname manipulations, WindowsNT/95 version.&#xA;Instead of importing this module directly, import os and refer to this module as os.path." ilk="blob" lang="Python" name="ntpath">
      <variable citdl="list" line="16" name="__all__" />
      <scope doc="Return the absolute version of a path." ilk="function" line="466" lineend="478" name="abspath" returns="normpath()" signature="abspath(path)">
        <variable citdl="_getfullpathname()" ilk="argument" name="path" />
      </scope>
      <variable citdl="str" line="29" name="altsep" />
      <scope doc="Returns the final component of a pathname" ilk="function" line="196" lineend="198" name="basename" signature="basename(p)">
        <variable ilk="argument" name="p" />
      </scope>
      <scope doc="Given a list of pathnames, returns the longest common&#xA;leading component" ilk="function" name="commonprefix" signature="commonprefix(m)" />
      <variable citdl="str" line="24" name="curdir" />
      <variable citdl="str" line="30" name="defpath" />
      <variable citdl="str" line="36" name="devnull" />
      <scope doc="Returns the directory component of a pathname" ilk="function" line="203" lineend="205" name="dirname" signature="dirname(p)">
        <variable ilk="argument" name="p" />
      </scope>
      <scope doc="Test whether a path exists." ilk="function" name="exists" signature="exists(path)" />
      <scope doc="Expand ~ and ~user constructs." ilk="function" line="275" lineend="301" name="expanduser" returns="join()" signature="expanduser(path)">
        <variable citdl="int" line="281" name="i" />
        <variable ilk="argument" name="path" />
        <variable citdl="join()" line="286" name="userhome" />
        <variable citdl="str" line="293" name="drive" />
        <variable citdl="len()" line="281" name="n" />
      </scope>
      <scope doc="Expand shell variables of the forms $var, ${var} and %var%." ilk="function" line="317" lineend="391" name="expandvars" returns="str" signature="expandvars(path)">
        <variable citdl="len()" line="326" name="index" />
        <variable citdl="list" line="329" name="c" />
        <variable citdl="str" line="325" name="res" />
        <variable citdl="string.digits" line="324" name="varchars" />
        <variable citdl="len()" line="327" name="pathlen" />
        <variable citdl="list" line="352" name="var" />
        <variable citdl="list" ilk="argument" name="path" />
      </scope>
      <variable citdl="str" line="26" name="extsep" />
      <import module="genericpath" />
      <scope doc="Return the last access time of a file, reported by&#xA;os.stat()." ilk="function" name="getatime" signature="getatime(filename)" />
      <scope doc="Return the metadata change time of a file, reported by&#xA;os.stat()." ilk="function" name="getctime" signature="getctime(filename)" />
      <scope doc="Return the last modification time of a file, reported by&#xA;os.stat()." ilk="function" name="getmtime" signature="getmtime(filename)" />
      <scope doc="Return the size of a file, reported by os.stat()." ilk="function" name="getsize" signature="getsize(filename)" />
      <scope doc="Test whether a path is absolute" ilk="function" line="55" lineend="58" name="isabs" returns="bool" signature="isabs(s)">
        <variable ilk="argument" name="s" />
      </scope>
      <scope doc="Return true if the pathname refers to an existing directory." ilk="function" name="isdir" signature="isdir(s)" />
      <scope doc="Test whether a path is a regular file" ilk="function" name="isfile" signature="isfile(path)" />
      <scope doc="Test for symbolic link." ilk="function" line="210" lineend="214" name="islink" returns="bool" signature="islink(path)">
        <variable ilk="argument" name="path" />
      </scope>
      <scope doc="Test whether a path is a mount point (defined as root of&#xA;drive)" ilk="function" line="222" lineend="228" name="ismount" returns="bool" signature="ismount(path)">
        <variable ilk="argument" name="path" />
        <variable line="224" name="unc" />
        <variable line="224" name="rest" />
        <variable line="227" name="p" />
      </scope>
      <scope doc="Join two or more pathname components, inserting &quot;\&quot; as&#xA;needed." ilk="function" line="63" lineend="116" name="join" returns="b" signature="join(a, *p)">
        <variable ilk="argument" name="a" />
        <variable attributes="varargs" ilk="argument" name="p" />
        <variable citdl="int" line="69" name="b_wins" />
        <variable citdl="b" line="67" name="path" />
      </scope>
      <scope doc="Test whether a path exists." ilk="function" line="217" name="lexists" signature="lexists(path)" />
      <scope doc="Normalize case of pathname." ilk="function" line="42" lineend="46" name="normcase" signature="normcase(s)">
        <variable ilk="argument" name="s" />
      </scope>
      <scope doc="Normalize path, eliminating double slashes, etc." ilk="function" line="398" lineend="447" name="normpath" returns="backslash.join()" signature="normpath(path)">
        <variable citdl="int" line="430" name="i" />
        <variable citdl="path.replace()" ilk="argument" name="path" />
        <variable citdl="backslash" line="409" name="prefix" />
        <variable citdl="path.split()" line="429" name="comps" />
      </scope>
      <import module="os" />
      <variable citdl="str" line="25" name="pardir" />
      <variable citdl="str" line="28" name="pathsep" />
      <scope doc="Return the absolute version of a path." ilk="function" line="481" name="realpath" signature="realpath(path)" />
      <scope doc="Return a relative version of a path" ilk="function" line="494" lineend="523" name="relpath" returns="join()" signature="relpath(path, start=&apos;.&apos;)">
        <variable citdl="list" line="520" name="rel_list" />
        <variable citdl="int" line="514" name="i" />
        <variable line="501" name="path_is_unc" />
        <variable citdl="str" ilk="argument" name="start" />
        <variable line="500" name="start_prefix" />
        <variable line="501" name="path_prefix" />
        <variable line="501" name="path_list" />
        <variable ilk="argument" name="path" />
        <variable line="500" name="start_list" />
        <variable line="500" name="start_is_unc" />
      </scope>
      <variable citdl="str" line="27" name="sep" />
      <scope doc="Split a pathname." ilk="function" line="164" lineend="181" name="split" returns="tuple" signature="split(p)">
        <variable citdl="list" line="175" name="head" />
        <variable line="170" name="d" />
        <variable citdl="len()" line="172" name="i" />
        <variable ilk="argument" name="p" />
        <variable citdl="list" line="175" name="tail" />
        <variable citdl="list" line="177" name="head2" />
      </scope>
      <scope doc="Split a pathname into drive and path specifiers." ilk="function" line="122" lineend="127" name="splitdrive" returns="tuple" signature="splitdrive(p)">
        <variable ilk="argument" name="p" />
      </scope>
      <scope doc="Split the extension from a pathname." ilk="function" line="189" lineend="190" name="splitext" returns="genericpath._splitext()" signature="splitext(p)">
        <variable ilk="argument" name="p" />
        <variable citdl="genericpath._splitext.__doc__" line="191" name="__doc__" />
      </scope>
      <scope doc="Split a pathname into UNC mount point and relative path&#xA;specifiers." ilk="function" line="131" lineend="156" name="splitunc" returns="tuple" signature="splitunc(p)">
        <variable ilk="argument" name="p" />
        <variable citdl="normcase()" line="147" name="normp" />
        <variable citdl="list" line="141" name="firstTwo" />
        <variable citdl="normp.find()" line="148" name="index" />
      </scope>
      <import module="stat" />
      <variable citdl="bool" line="483" name="supports_unicode_filenames" />
      <import module="sys" />
      <scope doc="Directory tree walk with callback function." ilk="function" line="239" lineend="263" name="walk" signature="walk(top, func, arg)">
        <variable ilk="argument" name="top" />
        <variable citdl="os.listdir()" line="256" name="names" />
        <variable citdl="join()" line="261" name="name" />
        <variable ilk="argument" name="func" />
        <variable ilk="argument" name="arg" />
      </scope>
      <import module="warnings" />
      <scope attributes="protected __hidden__" ilk="function" line="486" lineend="492" name="_abspath_split" returns="tuple" signature="_abspath_split(path)">
        <variable ilk="argument" name="path" />
        <variable citdl="abspath()" line="487" name="abs" />
        <variable line="488" name="prefix" />
        <variable line="488" name="rest" />
        <variable citdl="bool()" line="489" name="is_unc" />
      </scope>
    </scope>
    