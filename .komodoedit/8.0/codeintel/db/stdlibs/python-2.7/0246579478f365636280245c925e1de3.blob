<scope doc="Fixer that changes input(...) into eval(input(...)).&#xA;" ilk="blob" lang="Python" name="lib2to3.fixes.fix_input">
      <scope doc="A function call" ilk="function" name="Call" signature="Call(func_name, args=None, prefix=None)" />
      <scope classrefs="BaseFix" doc="&#xA;" ilk="class" line="13" lineend="26" name="FixInput">
        <scope ilk="function" line="19" lineend="26" name="transform" returns="Call()" signature="transform(node, results)">
          <variable ilk="argument" name="node" />
          <variable citdl="node.clone()" line="24" name="new" />
          <variable citdl="FixInput" ilk="argument" name="self" />
          <variable ilk="argument" name="results" />
        </scope>
        <variable citdl="True" line="14" name="BM_compatible" />
        <variable citdl="str" line="15" name="PATTERN" />
      </scope>
      <scope doc="Return a NAME leaf" ilk="function" name="Name" signature="Name(name, prefix=None)" />
      <variable citdl="NodePattern" line="10" name="context" />
      <import module="fixer_base" />
      <import module="patcomp" />
    </scope>
    