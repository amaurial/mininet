<scope doc="#-----------------------------------------------------------------------&#xA;# # Copyright (C) 2000, 2001 by Autonomous Zone Industries # Copyright (C) 2002 Gregory P. Smith # # License:      This is free software.  You may use this software for any #               purpose including modification/redistribution, so long as #               this header remains intact and that you do not claim any #               rights of ownership or authorship of this software.  This #               software has been tested, but no warranty is expressed or #               implied." ilk="blob" lang="Python" name="bsddb.dbtables">
      <scope doc="This condition matches everything&#xA;" ilk="class" line="68" lineend="71" name="Cond">
        <scope ilk="function" line="70" lineend="71" name="__call__" returns="int" signature="__call__(s)">
          <variable citdl="Cond" ilk="argument" name="self" />
          <variable ilk="argument" name="s" />
        </scope>
      </scope>
      <scope classrefs="Cond" doc="Acts as an exact match condition function&#xA;" ilk="class" line="73" lineend="78" name="ExactCond">
        <scope ilk="function" line="77" lineend="78" name="__call__" returns="bool" signature="__call__(s)">
          <variable citdl="ExactCond" ilk="argument" name="self" />
          <variable ilk="argument" name="s" />
        </scope>
        <scope ilk="function" line="75" lineend="76" name="__init__" signature="ExactCond(strtomatch)">
          <variable citdl="ExactCond" ilk="argument" name="self" />
          <variable ilk="argument" name="strtomatch" />
        </scope>
        <variable attributes="__instancevar__" line="76" name="strtomatch" />
      </scope>
      <scope classrefs="Cond" doc="Acts as a function that will match using an SQL &apos;LIKE&apos; style&#xA;string.  Case insensitive and % signs are wild cards. This isn&apos;t perfect but it should work for the simple common cases." ilk="class" line="94" lineend="109" name="LikeCond">
        <scope ilk="function" line="108" lineend="109" name="__call__" returns="self.re.match()" signature="__call__(s)">
          <variable citdl="LikeCond" ilk="argument" name="self" />
          <variable ilk="argument" name="s" />
        </scope>
        <scope ilk="function" line="100" lineend="107" name="__init__" signature="LikeCond(likestr, re_flags=re.IGNORECASE)">
          <variable citdl="likestr.replace()" ilk="argument" name="likestr" />
          <variable citdl="LikeCond" ilk="argument" name="self" />
          <variable citdl="str" line="102" name="chars_to_escape" />
          <variable citdl="re.IGNORECASE" ilk="argument" name="re_flags" />
        </scope>
        <variable attributes="__instancevar__" citdl="likestr.replace()" line="106" name="likestr" />
        <variable attributes="__instancevar__" citdl="re.compile()" line="107" name="re" />
      </scope>
      <scope classrefs="Cond" doc="Acts as a condition function for matching a string postfix&#xA;" ilk="class" line="87" lineend="92" name="PostfixCond">
        <scope ilk="function" line="91" lineend="92" name="__call__" returns="bool" signature="__call__(s)">
          <variable citdl="PostfixCond" ilk="argument" name="self" />
          <variable ilk="argument" name="s" />
        </scope>
        <scope ilk="function" line="89" lineend="90" name="__init__" signature="PostfixCond(postfix)">
          <variable ilk="argument" name="postfix" />
          <variable citdl="PostfixCond" ilk="argument" name="self" />
        </scope>
        <variable attributes="__instancevar__" line="90" name="postfix" />
      </scope>
      <scope classrefs="Cond" doc="Acts as a condition function for matching a string prefix&#xA;" ilk="class" line="80" lineend="85" name="PrefixCond">
        <scope ilk="function" line="84" lineend="85" name="__call__" returns="bool" signature="__call__(s)">
          <variable citdl="PrefixCond" ilk="argument" name="self" />
          <variable ilk="argument" name="s" />
        </scope>
        <scope ilk="function" line="82" lineend="83" name="__init__" signature="PrefixCond(prefix)">
          <variable citdl="PrefixCond" ilk="argument" name="self" />
          <variable ilk="argument" name="prefix" />
        </scope>
        <variable attributes="__instancevar__" line="83" name="prefix" />
      </scope>
      <scope classrefs="TableDBError" doc="&#xA;" ilk="class" line="64" lineend="65" name="TableAlreadyExists" />
      <scope classrefs="StandardError" doc="&#xA;" ilk="class" line="62" lineend="63" name="TableDBError" />
      <scope doc="&#xA;" ilk="class" line="158" lineend="843" name="bsdTableDB">
        <scope doc="Print the database to stdout for debugging" ilk="function" line="291" lineend="306" name="_db_print" signature="_db_print()">
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable line="296" name="data" />
          <variable citdl="self.db.cursor()" line="294" name="cur" />
          <variable line="296" name="key" />
          <variable citdl="cur.next()" line="299" name="next" />
        </scope>
        <scope doc="Create a new unique row identifier" ilk="function" name="_bsdTableDB__new_rowid" />
        <scope doc="Used to implement Select and Delete (above)" ilk="function" name="_bsdTableDB__Select" signature="__Select()" />
        <scope doc="Create a new table in the database." ilk="function" line="383" lineend="438" name="CreateOrExtendTable" signature="CreateOrExtendTable(table, columns)">
          <variable citdl="self.env.txn_begin()" line="398" name="txn" />
          <variable citdl="_columns_key()" line="400" name="columnlist_key" />
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable citdl="dict" line="409" name="oldcolumnhash" />
          <variable citdl="pickle.loads()" line="404" name="oldcolumnlist" />
          <variable citdl="copy.copy()" line="415" name="newcolumnlist" />
          <variable ilk="argument" name="table" />
          <variable ilk="argument" name="columns" />
        </scope>
        <scope doc="Insert a new row into the table" ilk="function" line="480" lineend="521" name="Insert" signature="Insert(table, datadict)">
          <variable citdl="sys.exc_info()" line="514" name="info" />
          <variable citdl="self.env.txn_begin()" line="485" name="txn" />
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable ilk="argument" name="rowdict" />
          <variable citdl="__new_rowid()" line="499" name="rowid" />
          <variable ilk="argument" name="table" />
        </scope>
        <scope ilk="function" line="274" lineend="275" name="__del__" signature="__del__()">
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
        </scope>
        <scope doc="Remove an entire table from the database" ilk="function" line="783" lineend="843" name="Drop" signature="Drop(table)">
          <variable citdl="_search_rowid_key()" line="795" name="table_key" />
          <variable citdl="self.db.cursor()" line="792" name="cur" />
          <variable citdl="self.env.txn_begin()" line="785" name="txn" />
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable citdl="pickle.loads()" line="821" name="tablelist" />
          <variable line="798" name="key" />
          <variable ilk="argument" name="table" />
          <variable line="798" name="data" />
        </scope>
        <scope doc="Modify items in rows matching &apos;conditions&apos; using mapping&#xA;functions in &apos;mappings&apos;" ilk="function" line="524" lineend="576" name="Modify" signature="Modify(table, conditions={}, mappings={})">
          <variable citdl="self.env.txn_begin()" line="542" name="txn" />
          <variable citdl="dict" ilk="argument" name="mappings" />
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable citdl="self.db.get()" line="548" name="dataitem" />
          <variable ilk="argument" name="table" />
          <variable citdl="dict" ilk="argument" name="conditions" />
          <variable citdl="mappings.keys()" line="540" name="columns" />
          <variable citdl="self.__Select()" line="537" name="matching_rowids" />
        </scope>
        <scope ilk="function" line="288" lineend="289" name="sync" signature="sync()">
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="285" lineend="286" name="checkpoint" signature="checkpoint(mins=0)">
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable citdl="int" ilk="argument" name="mins" />
        </scope>
        <scope doc="Create a new table in the database." ilk="function" line="309" lineend="354" name="CreateTable" signature="CreateTable(table, columns)">
          <variable citdl="self.env.txn_begin()" line="316" name="txn" />
          <variable citdl="_columns_key()" line="328" name="columnlist_key" />
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable citdl="pickle.loads()" line="338" name="tablelist" />
          <variable ilk="argument" name="table" />
          <variable ilk="argument" name="columns" />
        </scope>
        <scope doc="Return a list of tables in this database." ilk="function" line="375" lineend="381" name="ListTables" returns="list" signature="ListTables()">
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable citdl="self.db.get_get()" line="377" name="pickledtablelist" />
        </scope>
        <scope doc="initialize the self.__tablecolumns dict" ilk="function" name="_bsdTableDB__load_column_info" />
        <scope doc="retrieve specific row data" ilk="function" line="623" lineend="645" name="Select" returns="matching_rowids.values()" signature="Select(table, columns, conditions)">
          <variable ilk="argument" name="table" />
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable citdl="dict" ilk="argument" name="conditions" />
          <variable citdl="self.__Select()" line="638" name="matching_rowids" />
          <variable ilk="argument" name="columns" />
        </scope>
        <scope ilk="function" line="277" lineend="283" name="close" signature="close()">
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
        </scope>
        <scope doc="Return a list of columns in the given table." ilk="function" line="357" lineend="373" name="ListTableColumns" returns="list" signature="ListTableColumns(table)">
          <variable citdl="_columns_key()" line="365" name="columnlist_key" />
          <variable ilk="argument" name="table" />
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable citdl="getattr()()" line="368" name="pickledcolumnlist" />
        </scope>
        <scope doc="Open database name in the dbhome Berkeley DB directory." ilk="function" line="159" lineend="272" name="__init__" signature="bsdTableDB(filename, dbhome, create=0, truncate=0, mode=0600)">
          <variable citdl="db.DB_THREAD" line="167" name="myflags" />
          <variable ilk="argument" name="dbhome" />
          <scope classrefs="object" ilk="class" line="195" lineend="214" name="cursor_py3k">
            <scope attributes="__ctor__" ilk="function" line="196" lineend="197" name="__init__" signature="cursor_py3k(dbcursor)">
              <variable citdl="cursor_py3k" ilk="argument" name="self" />
              <variable ilk="argument" name="dbcursor" />
            </scope>
            <variable attributes="protected __instancevar__" line="197" name="_dbcursor" />
            <scope ilk="function" line="199" lineend="200" name="close" returns="self._dbcursor.close()" signature="close()">
              <variable citdl="cursor_py3k" ilk="argument" name="self" />
            </scope>
            <scope ilk="function" line="202" lineend="207" name="set_range" returns="tuple" signature="set_range(search)">
              <variable citdl="cursor_py3k" ilk="argument" name="self" />
              <variable ilk="argument" name="search" />
              <variable citdl="tuple" line="203" name="v" />
            </scope>
            <scope ilk="function" line="209" lineend="214" name="__next__" returns="tuple" signature="__next__()">
              <variable citdl="cursor_py3k" ilk="argument" name="self" />
              <variable citdl="getattr()()" line="210" name="v" />
            </scope>
          </scope>
          <variable citdl="int" ilk="argument" name="truncate" />
          <scope classrefs="object" ilk="class" line="216" lineend="253" name="db_py3k">
            <scope attributes="__ctor__" ilk="function" line="217" lineend="218" name="__init__" signature="db_py3k(db)">
              <variable citdl="db_py3k" ilk="argument" name="self" />
              <variable ilk="argument" name="db" />
            </scope>
            <variable attributes="protected __instancevar__" line="218" name="_db" />
            <scope ilk="function" line="220" lineend="221" name="cursor" returns="bsdTableDB.__init__.cursor_py3k" signature="cursor(txn=None)">
              <variable citdl="db_py3k" ilk="argument" name="self" />
              <variable ilk="argument" name="txn" />
            </scope>
            <scope ilk="function" line="223" lineend="225" name="has_key" returns="getattr()()" signature="has_key(key, txn=None)">
              <variable citdl="db_py3k" ilk="argument" name="self" />
              <variable ilk="argument" name="key" />
              <variable ilk="argument" name="txn" />
            </scope>
            <scope ilk="function" line="227" lineend="231" name="put" returns="self._db.put()" signature="put(key, value, flags=0, txn=None)">
              <variable citdl="db_py3k" ilk="argument" name="self" />
              <variable citdl="bytes()" ilk="argument" name="key" />
              <variable citdl="bytes()" ilk="argument" name="value" />
              <variable citdl="int" ilk="argument" name="flags" />
              <variable ilk="argument" name="txn" />
            </scope>
            <scope ilk="function" line="233" lineend="235" name="put_bytes" returns="self._db.put()" signature="put_bytes(key, value, txn=None)">
              <variable citdl="db_py3k" ilk="argument" name="self" />
              <variable citdl="bytes()" ilk="argument" name="key" />
              <variable ilk="argument" name="value" />
              <variable ilk="argument" name="txn" />
            </scope>
            <scope ilk="function" line="237" lineend="242" name="get" returns="v.decode()" signature="get(key, txn=None, flags=0)">
              <variable citdl="db_py3k" ilk="argument" name="self" />
              <variable citdl="bytes()" ilk="argument" name="key" />
              <variable ilk="argument" name="txn" />
              <variable citdl="int" ilk="argument" name="flags" />
              <variable citdl="v.decode()" line="239" name="v" />
            </scope>
            <scope ilk="function" line="244" lineend="246" name="get_bytes" returns="self._db.get()" signature="get_bytes(key, txn=None, flags=0)">
              <variable citdl="db_py3k" ilk="argument" name="self" />
              <variable citdl="bytes()" ilk="argument" name="key" />
              <variable ilk="argument" name="txn" />
              <variable citdl="int" ilk="argument" name="flags" />
            </scope>
            <scope ilk="function" line="248" lineend="250" name="delete" returns="self._db.delete()" signature="delete(key, txn=None)">
              <variable citdl="db_py3k" ilk="argument" name="self" />
              <variable citdl="bytes()" ilk="argument" name="key" />
              <variable ilk="argument" name="txn" />
            </scope>
            <scope ilk="function" line="252" lineend="253" name="close" returns="self._db.close()" signature="close()">
              <variable citdl="db_py3k" ilk="argument" name="self" />
            </scope>
          </scope>
          <variable citdl="int" line="170" name="flagsforenv" />
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable citdl="self.env.txn_begin()" line="260" name="txn" />
          <variable ilk="argument" name="filename" />
          <variable citdl="int" ilk="argument" name="dbflags" />
          <variable citdl="int" ilk="argument" name="mode" />
          <variable citdl="int" ilk="argument" name="recover" />
          <variable citdl="int" ilk="argument" name="create" />
        </scope>
        <scope doc="Delete items matching the given" ilk="function" line="578" lineend="620" name="Delete" signature="Delete(table, conditions)">
          <variable citdl="self.env.txn_begin()" line="593" name="txn" />
          <variable citdl="self.__Select()" line="588" name="matching_rowids" />
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable ilk="argument" name="table" />
          <variable citdl="dict" ilk="argument" name="conditions" />
          <variable line="591" name="columns" />
        </scope>
        <scope attributes="private" doc="Create a new unique row identifier" ilk="function" line="453" lineend="477" name="__new_rowid" returns="struct.pack()" signature="__new_rowid(table, txn)">
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable ilk="argument" name="table" />
          <variable ilk="argument" name="txn" />
          <variable citdl="int" line="455" name="unique" />
          <variable citdl="list" line="460" name="blist" />
          <variable citdl="struct.pack()" line="463" name="newid" />
        </scope>
        <scope attributes="private" doc="Used to implement Select and Delete (above)" ilk="function" line="648" lineend="780" name="__Select" returns="dict" signature="__Select()">
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable ilk="argument" name="table" />
          <variable ilk="argument" name="columns" />
          <variable ilk="argument" name="conditions" />
          <variable citdl="dict" line="668" name="matching_rowids" />
          <variable citdl="dict" line="670" name="rejected_rowids" />
          <scope ilk="function" line="674" lineend="701" name="cmp_conditions" returns="bsdTableDB.__Select.cmp_conditions.cmp()" signature="cmp_conditions(atuple, btuple)">
            <variable ilk="argument" name="atuple" />
            <variable ilk="argument" name="btuple" />
            <variable line="675" name="a" />
            <variable line="676" name="b" />
            <scope ilk="function" line="680" lineend="683" name="cmp" returns="int" signature="cmp(a, b)">
              <variable ilk="argument" name="a" />
              <variable ilk="argument" name="b" />
            </scope>
          </scope>
          <variable citdl="list" line="704" name="conditionlist" />
          <variable citdl="cmp_conditions()" line="710" name="r" />
          <variable citdl="self.db.cursor()" line="718" name="cur" />
          <variable citdl="int" line="719" name="column_num" />
          <variable citdl="_search_col_data_key()" line="722" name="searchkey" />
          <variable citdl="int" line="725" name="savethiscolumndata" />
          <variable line="730" name="key" />
          <variable line="730" name="data" />
          <variable citdl="list" line="733" name="rowid" />
        </scope>
        <variable attributes="private __instancevar__" citdl="dict" line="272" name="__tablecolumns" />
        <variable attributes="__instancevar__" line="192" name="dbfilename" />
        <variable attributes="__instancevar__" citdl="db.DB()" line="166" name="db" />
        <scope attributes="private" doc="initialize the self.__tablecolumns dict" ilk="function" line="441" lineend="451" name="__load_column_info" signature="__load_column_info(table)">
          <variable citdl="bsdTableDB" ilk="argument" name="self" />
          <variable ilk="argument" name="table" />
          <variable citdl="getattr()()" line="445" name="tcolpickles" />
        </scope>
        <variable attributes="__instancevar__" citdl="db.DBEnv()" line="179" name="env" />
      </scope>
      <scope doc="Verify that the given string does not contain any metadata&#xA;strings that might interfere with dbtables database&#xA;operation." ilk="function" line="144" lineend="155" name="contains_metastrings" returns="int" signature="contains_metastrings(s)">
        <variable ilk="argument" name="s" />
      </scope>
      <import module="copy" />
      <import module="db" />
      <import module="pickle" />
      <import module="random" />
      <import module="re" />
      <import module="struct" />
      <import module="sys" />
      <import module="warnings" />
      <scope attributes="protected __hidden__" ilk="function" line="138" lineend="139" name="_rowid_key" returns="str" signature="_rowid_key(table, rowid)">
        <variable ilk="argument" name="table" />
        <variable ilk="argument" name="rowid" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="129" lineend="130" name="_data_key" returns="str" signature="_data_key(table, col, rowid)">
        <variable ilk="argument" name="table" />
        <variable ilk="argument" name="col" />
        <variable ilk="argument" name="rowid" />
      </scope>
      <variable attributes="protected __hidden__" citdl="str" line="18" name="_cvsid" />
      <scope attributes="protected __hidden__" ilk="function" line="141" lineend="142" name="_search_rowid_key" returns="str" signature="_search_rowid_key(table)">
        <variable ilk="argument" name="table" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="132" lineend="133" name="_search_col_data_key" returns="str" signature="_search_col_data_key(table, col)">
        <variable ilk="argument" name="table" />
        <variable ilk="argument" name="col" />
      </scope>
      <variable attributes="protected __hidden__" citdl="str" line="124" name="_rowid" />
      <scope attributes="protected __hidden__" ilk="function" line="117" lineend="118" name="_columns_key" returns="str" signature="_columns_key(table)">
        <variable ilk="argument" name="table" />
      </scope>
      <variable attributes="__hidden__" citdl="warnings.catch_warnings()" line="44" name="w" />
      <variable attributes="protected __hidden__" citdl="str" line="114" name="_table_names_key" />
      <scope attributes="protected __hidden__" ilk="function" line="135" lineend="136" name="_search_all_data_key" returns="str" signature="_search_all_data_key(table)">
        <variable ilk="argument" name="table" />
      </scope>
      <variable attributes="protected __hidden__" citdl="int" line="126" name="_rowid_str_len" />
      <variable attributes="protected __hidden__" citdl="str" line="123" name="_data" />
      <variable attributes="protected __hidden__" citdl="str" line="115" name="_columns" />
    </scope>
    