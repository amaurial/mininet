<scope doc="Faux ``threading`` version using ``dummy_thread`` instead of ``thread``.&#xA;The module ``_dummy_threading`` is added to ``sys.modules`` in order to not have ``threading`` considered imported.  Had ``threading`` been directly imported it would have made all subsequent imports succeed regardless of whether ``thread`` was available which is not desired." ilk="blob" lang="Python" name="dummy_threading">
      <scope ilk="function" name="BoundedSemaphore" signature="BoundedSemaphore(*args, **kwargs)" />
      <scope ilk="function" name="Condition" signature="Condition(*args, **kwargs)" />
      <scope ilk="function" name="Event" signature="Event(*args, **kwargs)" />
      <scope doc="Dummy implementation of thread.allocate_lock()." ilk="function" name="Lock" signature="Lock()" />
      <scope ilk="function" name="RLock" signature="RLock(*args, **kwargs)" />
      <scope ilk="function" name="Semaphore" signature="Semaphore(*args, **kwargs)" />
      <scope classrefs="_Verbose" doc="&#xA;" ilk="class" name="Thread">
        <scope ilk="function" name="isAlive" />
        <scope ilk="function" name="setName" />
        <scope ilk="function" name="_Thread__bootstrap" />
        <scope ilk="function" name="setDaemon" />
        <scope ilk="function" name="isDaemon" />
        <scope ilk="function" name="_set_daemon" />
        <scope ilk="function" name="__init__" />
        <scope ilk="function" name="join" />
        <scope ilk="function" name="start" />
        <scope ilk="function" name="_reset_internal_locks" />
        <scope ilk="function" name="getName" />
        <scope ilk="function" name="_set_ident" />
        <scope doc="Remove current thread from the dict of currently running&#xA;threads." ilk="function" name="_Thread__delete" />
        <scope ilk="function" name="run" />
        <scope ilk="function" name="__repr__" />
        <scope ilk="function" name="is_alive" />
        <scope ilk="function" name="_Thread__bootstrap_inner" />
        <scope ilk="function" name="_Thread__stop" />
      </scope>
      <scope ilk="function" name="Timer" signature="Timer(*args, **kwargs)" />
      <variable citdl="list" name="__all__" />
      <scope ilk="function" name="activeCount" signature="activeCount()" />
      <scope ilk="function" name="active_count" signature="active_count()" />
      <scope ilk="function" name="currentThread" signature="currentThread()" />
      <scope ilk="function" name="current_thread" signature="current_thread()" />
      <scope ilk="function" name="enumerate" signature="enumerate()" />
      <scope classrefs="_localbase" doc="&#xA;" ilk="class" name="local">
        <scope ilk="function" name="__del__" />
        <scope ilk="function" name="__getattribute__" />
        <scope ilk="function" name="__setattr__" />
        <scope ilk="function" name="__delattr__" />
      </scope>
      <scope ilk="function" name="setprofile" signature="setprofile(func)" />
      <scope ilk="function" name="settrace" signature="settrace(func)" />
      <scope doc="Dummy implementation of thread.stack_size()." ilk="function" name="stack_size" signature="stack_size(size=None)" />
      <import module="threading" />
      <variable attributes="__hidden__" line="41" name="held__threading_local" />
      <variable attributes="__hidden__" citdl="True" line="16" name="holding__threading_local" />
      <variable attributes="__hidden__" citdl="True" line="14" name="holding_thread" />
      <variable attributes="__hidden__" line="23" name="held_thread" />
      <variable attributes="__hidden__" citdl="True" line="15" name="holding_threading" />
      <variable attributes="__hidden__" line="33" name="held_threading" />
    </scope>
    