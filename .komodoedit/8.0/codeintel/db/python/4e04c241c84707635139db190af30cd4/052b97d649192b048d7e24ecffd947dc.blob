<scope doc="An ARP utility that can learn and proxy ARPs, and can also&#xA;answer queries from a list of static entries." ilk="blob" lang="Python" name="arp_responder" src="/home/mininet/new_pox/pox/pox/misc/arp_responder.py"><import line="26" module="pox.core" symbol="core" /><import line="27" module="pox" /><import line="30" module="pox.lib.packet.ethernet" symbol="ethernet" /><import line="30" module="pox.lib.packet.ethernet" symbol="ETHER_BROADCAST" /><import line="31" module="pox.lib.packet.arp" symbol="arp" /><import line="32" module="pox.lib.addresses" symbol="IPAddr" /><import line="32" module="pox.lib.addresses" symbol="EthAddr" /><import line="33" module="pox.lib.util" symbol="dpid_to_str" /><import line="33" module="pox.lib.util" symbol="str_to_bool" /><import line="34" module="pox.lib.recoco" symbol="Timer" /><import line="35" module="pox.lib.revent" symbol="EventHalt" /><import alias="of" line="37" module="pox.openflow.libopenflow_01" /><import line="39" module="time" /><variable citdl="core.getLogger()" line="28" name="log" /><variable citdl="int" line="43" name="ARP_TIMEOUT" /><scope classrefs="object" doc="We use the MAC to answer ARP replies.&#xA;We use the timeout so that if an entry is older than ARP_TIMEOUT, we&#xA; flood the ARP request rather than try to answer it ourselves." ilk="class" line="46" lineend="73" name="Entry"><scope attributes="__ctor__" ilk="function" line="52" lineend="60" name="__init__" signature="Entry(mac, static=False)"><variable citdl="Entry" ilk="argument" name="self" /><variable ilk="argument" name="mac" /><variable citdl="False" ilk="argument" name="static" /></scope><variable attributes="__instancevar__" citdl="time.time()" line="53" name="timeout" /><variable attributes="__instancevar__" citdl="False" line="54" name="static" /><variable attributes="__instancevar__" citdl="EthAddr()" line="57" name="mac" /><scope ilk="function" line="62" lineend="66" name="__eq__" returns="bool" signature="__eq__(other)"><variable citdl="Entry" ilk="argument" name="self" /><variable ilk="argument" name="other" /></scope><scope ilk="function" line="67" lineend="68" name="__ne__" returns="bool" signature="__ne__(other)"><variable citdl="Entry" ilk="argument" name="self" /><variable ilk="argument" name="other" /></scope><variable attributes="property" citdl="bool" line="71" name="is_expired" /><scope attributes="__hidden__" ilk="function" line="71" lineend="73" name="is_expired (property getter)" returns="bool" signature="is_expired (property getter)()"><variable citdl="Entry" ilk="argument" name="self" /></scope></scope><scope classrefs="dict" ilk="class" line="76" lineend="115" name="ARPTable"><scope ilk="function" line="77" lineend="100" name="__repr__" returns="__builtins__.str.join()" signature="__repr__()"><variable citdl="ARPTable" ilk="argument" name="self" /><variable citdl="list" line="78" name="o" /><variable citdl="str" line="80" name="t" /><variable citdl="e.mac" line="86" name="mac" /></scope><scope ilk="function" line="102" lineend="106" name="__setitem__" signature="__setitem__(key, val)"><variable citdl="ARPTable" ilk="argument" name="self" /><variable citdl="IPAddr()" ilk="argument" name="key" /><variable citdl="Entry" ilk="argument" name="val" /></scope><scope ilk="function" line="108" lineend="110" name="__delitem__" signature="__delitem__(key)"><variable citdl="ARPTable" ilk="argument" name="self" /><variable citdl="IPAddr()" ilk="argument" name="key" /></scope><scope ilk="function" line="112" lineend="115" name="set" signature="set(key, value=True, static=True)"><variable citdl="ARPTable" ilk="argument" name="self" /><variable ilk="argument" name="key" /><variable citdl="Entry" ilk="argument" name="value" /><variable citdl="True" ilk="argument" name="static" /></scope></scope><scope attributes="protected" ilk="function" line="118" lineend="120" name="_dpid_to_mac" returns="EthAddr()" signature="_dpid_to_mac(dpid)"><variable ilk="argument" name="dpid" /></scope><scope attributes="protected" ilk="function" line="123" lineend="129" name="_handle_expiration" signature="_handle_expiration()" /><scope classrefs="object" ilk="class" line="132" lineend="285" name="ARPResponder"><variable citdl="dict" line="134" name="requests" /><variable citdl="int" line="135" name="max_replies" /><scope attributes="__ctor__" ilk="function" line="137" lineend="141" name="__init__" signature="ARPResponder()"><variable citdl="ARPResponder" ilk="argument" name="self" /></scope><variable attributes="protected __instancevar__" citdl="Timer()" line="139" name="_expire_timer" /><scope attributes="protected" ilk="function" line="143" lineend="145" name="_handle_GoingUpEvent" signature="_handle_GoingUpEvent(event)"><variable citdl="ARPResponder" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="147" lineend="153" name="_handle_ConnectionUp" signature="_handle_ConnectionUp(event)"><variable citdl="ARPResponder" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="of.ofp_flow_mod()" line="149" name="fm" /></scope><scope attributes="protected" ilk="function" line="155" lineend="285" name="_handle_PacketIn" signature="_handle_PacketIn(event)"><variable citdl="ARPResponder" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="bool" line="160" name="squelch" /><variable citdl="event.connection.dpid" line="162" name="dpid" /><variable citdl="event.port" line="163" name="inport" /><variable citdl="event.parsed" line="164" name="packet" /><variable citdl="packet.find()" line="169" name="a" /><variable citdl="arp()" line="203" name="r" /><variable citdl="_dpid_to_mac()" line="212" name="mac" /><variable citdl="ethernet()" line="217" name="e" /><variable citdl="of.ofp_packet_out()" line="222" name="msg" /></scope></scope><variable attributes="protected" citdl="ARPTable" line="288" name="_arp_table" /><variable attributes="protected" line="289" name="_install_flow" /><variable attributes="protected" line="290" name="_eat_packets" /><variable attributes="protected" citdl="dict" line="291" name="_failed_queries" /><variable attributes="protected" line="292" name="_learn" /><scope ilk="function" line="294" lineend="305" name="launch" signature="launch(timeout=ARP_TIMEOUT, no_flow=False, eat_packets=True, no_learn=False, **kw)"><variable citdl="int" ilk="argument" name="timeout" /><variable citdl="False" ilk="argument" name="no_flow" /><variable citdl="True" ilk="argument" name="eat_packets" /><variable citdl="False" ilk="argument" name="no_learn" /><variable attributes="kwargs" ilk="argument" name="kw" /><variable citdl="int" line="297" name="ARP_TIMEOUT" /><variable attributes="protected" citdl="bool" line="298" name="_install_flow" /><variable attributes="protected" citdl="str_to_bool()" line="299" name="_eat_packets" /><variable attributes="protected" citdl="bool" line="300" name="_learn" /></scope></scope>