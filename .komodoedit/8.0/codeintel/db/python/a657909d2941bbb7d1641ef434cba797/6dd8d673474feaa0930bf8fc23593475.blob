<scope doc="Implementation of an OpenFlow flow table" ilk="blob" lang="Python" name="flow_table" src="/home/mininet/new_pox/pox/pox/openflow/flow_table.py"><import line="22" module="libopenflow_01" symbol="*" /><import line="23" module="pox.lib.revent" symbol="*" /><import line="25" module="time" /><scope classrefs="object" doc="Models a flow table entry, with a match, actions, and options/flags/counters.&#xA;Note: the current time can either be specified explicitely with the optional &apos;now&apos; parameter or is taken from time.time()" ilk="class" line="31" lineend="118" name="TableEntry"><scope attributes="__ctor__" ilk="function" line="37" lineend="54" name="__init__" signature="TableEntry(priority=OFP_DEFAULT_PRIORITY, cookie=0, idle_timeout=0, hard_timeout=0, flags=0, match=ofp_match(), actions=[], buffer_id=None, now=None)"><variable citdl="TableEntry" ilk="argument" name="self" /><variable citdl="OFP_DEFAULT_PRIORITY" ilk="argument" name="priority" /><variable citdl="int" ilk="argument" name="cookie" /><variable citdl="int" ilk="argument" name="idle_timeout" /><variable citdl="int" ilk="argument" name="hard_timeout" /><variable citdl="int" ilk="argument" name="flags" /><variable citdl="ofp_match()" ilk="argument" name="match" /><variable citdl="list" ilk="argument" name="actions" /><variable ilk="argument" name="buffer_id" /><variable citdl="time.time()" ilk="argument" name="now" /></scope><variable attributes="__instancevar__" citdl="dict" line="41" name="counters" /><variable attributes="__instancevar__" citdl="OFP_DEFAULT_PRIORITY" line="47" name="priority" /><variable attributes="__instancevar__" citdl="int" line="48" name="cookie" /><variable attributes="__instancevar__" citdl="int" line="49" name="idle_timeout" /><variable attributes="__instancevar__" citdl="int" line="50" name="hard_timeout" /><variable attributes="__instancevar__" citdl="int" line="51" name="flags" /><variable attributes="__instancevar__" citdl="ofp_match()" line="52" name="match" /><variable attributes="__instancevar__" citdl="list" line="53" name="actions" /><variable attributes="__instancevar__" line="54" name="buffer_id" /><scope ilk="function" line="57" lineend="65" name="from_flow_mod" returns="TableEntry" signature="from_flow_mod()"><variable citdl="TableEntry" ilk="argument" name="flow_mod" /><variable citdl="OFP_DEFAULT_PRIORITY" line="58" name="priority" /><variable citdl="int" line="59" name="cookie" /><variable citdl="ofp_match()" line="60" name="match" /><variable citdl="list" line="61" name="actions" /><variable line="62" name="buffer_id" /><variable citdl="int" line="63" name="flags" /></scope><scope ilk="function" line="67" lineend="72" name="to_flow_mod" returns="ofp_flow_mod()" signature="to_flow_mod(flags=None, **kw)"><variable citdl="TableEntry" ilk="argument" name="self" /><variable citdl="int" ilk="argument" name="flags" /><variable attributes="kwargs" ilk="argument" name="kw" /></scope><scope doc="return whether /this/ entry is matched by some other entry (e.g., for FLOW_MOD updates) " ilk="function" line="74" lineend="81" name="is_matched_by" returns="TableEntry.is_matched_by.check_port()" signature="is_matched_by(match, priority=None, strict=False, out_port=None)"><variable citdl="TableEntry" ilk="argument" name="self" /><variable ilk="argument" name="match" /><variable ilk="argument" name="priority" /><variable citdl="False" ilk="argument" name="strict" /><variable ilk="argument" name="out_port" /><variable line="76" name="check_port" /></scope><scope doc="update the counters and expiry timer of this entry for a packet with a given byte count" ilk="function" line="83" lineend="88" name="touch_packet" signature="touch_packet(byte_count, now=None)"><variable citdl="TableEntry" ilk="argument" name="self" /><variable ilk="argument" name="byte_count" /><variable citdl="time.time()" ilk="argument" name="now" /></scope><scope doc="&quot; return whether this flow entry is expired due to its idle timeout or hard timeout" ilk="function" line="90" lineend="93" name="is_expired" returns="bool" signature="is_expired(now=None)"><variable citdl="TableEntry" ilk="argument" name="self" /><variable citdl="time.time()" ilk="argument" name="now" /></scope><scope ilk="function" line="95" lineend="96" name="__str__" returns="str" signature="__str__()"><variable citdl="TableEntry" ilk="argument" name="self" /></scope><scope ilk="function" line="98" lineend="99" name="__repr__" returns="str" signature="__repr__()"><variable citdl="TableEntry" ilk="argument" name="self" /></scope><scope ilk="function" line="101" lineend="103" name="show" returns="tuple" signature="show()"><variable citdl="TableEntry" ilk="argument" name="self" /></scope><scope ilk="function" line="105" lineend="118" name="flow_stats" returns="ofp_flow_stats()" signature="flow_stats(now=None)"><variable citdl="TableEntry" ilk="argument" name="self" /><variable citdl="time.time()" ilk="argument" name="now" /><variable citdl="time.time()" line="107" name="duration" /></scope></scope><scope classrefs="Event" ilk="class" line="122" lineend="126" name="FlowTableModification"><scope attributes="__ctor__" ilk="function" line="123" lineend="126" name="__init__" signature="FlowTableModification(added=[], removed=[])"><variable citdl="FlowTableModification" ilk="argument" name="self" /><variable citdl="list" ilk="argument" name="added" /><variable citdl="list" ilk="argument" name="removed" /></scope><variable attributes="__instancevar__" citdl="list" line="125" name="added" /><variable attributes="__instancevar__" citdl="list" line="126" name="removed" /></scope><scope classrefs="EventMixin" ilk="class" line="129" lineend="215" name="FlowTable"><variable attributes="protected" citdl="set()" line="130" name="_eventMixin_events" /><scope attributes="__ctor__" ilk="function" line="136" lineend="145" name="__init__" signature="FlowTable()"><variable citdl="FlowTable" ilk="argument" name="self" /></scope><variable attributes="protected __instancevar__" citdl="list" line="145" name="_table" /><variable attributes="property" citdl="list" line="148" name="entries" /><scope attributes="__hidden__" ilk="function" line="148" lineend="149" name="entries (property getter)" returns="list" signature="entries (property getter)()"><variable citdl="FlowTable" ilk="argument" name="self" /></scope><scope ilk="function" line="151" lineend="152" name="__len__" returns="len()" signature="__len__()"><variable citdl="FlowTable" ilk="argument" name="self" /></scope><scope ilk="function" line="154" lineend="163" name="add_entry" signature="add_entry(entry)"><variable citdl="FlowTable" ilk="argument" name="self" /><variable ilk="argument" name="entry" /></scope><scope ilk="function" line="165" lineend="169" name="remove_entry" signature="remove_entry(entry)"><variable citdl="FlowTable" ilk="argument" name="self" /><variable ilk="argument" name="entry" /></scope><scope ilk="function" line="171" lineend="181" name="entries_for_port" returns="list" signature="entries_for_port(port_no)"><variable citdl="FlowTable" ilk="argument" name="self" /><variable ilk="argument" name="port_no" /><variable citdl="list" line="172" name="entries" /><variable citdl="entry.actions" line="174" name="actions" /><variable line="176" name="last_action" /><variable citdl="last_action.port" line="178" name="outgoing_port" /></scope><scope ilk="function" line="183" lineend="184" name="matching_entries" returns="list" signature="matching_entries(match, priority=0, strict=False, out_port=None)"><variable citdl="FlowTable" ilk="argument" name="self" /><variable ilk="argument" name="match" /><variable citdl="int" ilk="argument" name="priority" /><variable citdl="False" ilk="argument" name="strict" /><variable ilk="argument" name="out_port" /></scope><scope ilk="function" line="186" lineend="187" name="flow_stats" signature="flow_stats(match, out_port=None, now=None)"><variable citdl="FlowTable" ilk="argument" name="self" /><variable ilk="argument" name="match" /><variable ilk="argument" name="out_port" /><variable ilk="argument" name="now" /></scope><scope ilk="function" line="189" lineend="190" name="expired_entries" returns="list" signature="expired_entries(now=None)"><variable citdl="FlowTable" ilk="argument" name="self" /><variable ilk="argument" name="now" /></scope><scope ilk="function" line="192" lineend="197" name="remove_expired_entries" returns="expired_entries()" signature="remove_expired_entries(now=None)"><variable citdl="FlowTable" ilk="argument" name="self" /><variable ilk="argument" name="now" /><variable citdl="expired_entries()" line="193" name="remove_flows" /></scope><scope ilk="function" line="199" lineend="204" name="remove_matching_entries" returns="matching_entries()" signature="remove_matching_entries(match, priority=0, strict=False)"><variable citdl="FlowTable" ilk="argument" name="self" /><variable ilk="argument" name="match" /><variable citdl="int" ilk="argument" name="priority" /><variable citdl="False" ilk="argument" name="strict" /><variable citdl="matching_entries()" line="200" name="remove_flows" /></scope><scope doc="return the highest priority flow table entry that matches the given packet&#xA;   on the given in_port, or None if no matching entry is found. " ilk="function" line="206" lineend="215" name="entry_for_packet" returns="entry" signature="entry_for_packet(packet, in_port)"><variable citdl="FlowTable" ilk="argument" name="self" /><variable ilk="argument" name="packet" /><variable ilk="argument" name="in_port" /><variable citdl="ofp_match.from_packet()" line="209" name="packet_match" /></scope></scope><scope classrefs="FlowTable" doc="Model a flow table for our switch implementation. Handles the behavior in response&#xA;to the OF messages send to the switch" ilk="class" line="218" lineend="256" name="SwitchFlowTable"><scope doc="Process a flow mod sent to the switch&#xA;   @return a tuple (added|modified|removed, [list of affected entries])&#xA;   " ilk="function" line="224" lineend="256" name="process_flow_mod" returns="tuple" signature="process_flow_mod(flow_mod)"><variable citdl="SwitchFlowTable" ilk="argument" name="self" /><variable ilk="argument" name="flow_mod" /><variable citdl="bool" line="239" name="is_strict" /><variable citdl="list" line="240" name="modified" /></scope></scope></scope>