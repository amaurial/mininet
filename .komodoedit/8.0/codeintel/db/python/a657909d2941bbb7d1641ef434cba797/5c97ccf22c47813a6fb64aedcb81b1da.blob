<scope doc="Various stuff for converting between OpenFlow and JSON-&#xA;friendly data structures." ilk="blob" lang="Python" name="of_json" src="/home/mininet/new_pox/pox/pox/openflow/of_json.py"><import line="25" module="pox.lib.util" symbol="fields_of" /><import line="25" module="pox.lib.util" symbol="is_scalar" /><import alias="of" line="26" module="pox.openflow.libopenflow_01" /><import line="33" module="pox.lib.packet" symbol="ethernet" /><import line="33" module="pox.lib.packet" symbol="ipv4" /><import line="34" module="pox.lib.packet.packet_utils" symbol="ethtype_to_str" /><import line="35" module="pox.lib.util" symbol="dpidToStr" /><import line="36" module="pox.lib.addresses" symbol="EthAddr" /><import line="36" module="pox.lib.addresses" symbol="IPAddr" /><import line="59" module="pox.lib.addresses" symbol="parse_cidr" /><import line="59" module="pox.lib.addresses" symbol="EthAddr" /><import line="69" module="socket" /><import alias="packetlib" line="207" module="pox.lib.packet" /><import line="245" module="pox.lib.packet.packet_base" symbol="packet_base" /><scope attributes="protected" ilk="function" line="28" lineend="31" name="_fix_of_int" returns="getattr()" signature="_fix_of_int(n)"><variable ilk="argument" name="n" /></scope><scope attributes="protected" ilk="function" line="38" lineend="50" name="_fix_ethertype" returns="int()" signature="_fix_ethertype(n)"><variable ilk="argument" name="n" /><variable citdl="int()" line="43" name="v" /></scope><scope attributes="protected" ilk="function" line="52" lineend="57" name="_fix_proto" returns="getattr()" signature="_fix_proto(n)"><variable ilk="argument" name="n" /></scope><scope attributes="protected" ilk="function" line="61" lineend="63" name="_fix_eth" returns="EthAddr()" signature="_fix_eth(n)"><variable ilk="argument" name="n" /></scope><scope attributes="protected" ilk="function" line="65" lineend="67" name="_fix_ip" returns="parse_cidr()" signature="_fix_ip(n)"><variable ilk="argument" name="n" /></scope><scope attributes="protected" ilk="function" line="71" lineend="74" name="_fix_port" returns="socket.getservbyname()" signature="_fix_port(n)"><variable ilk="argument" name="n" /></scope><scope ilk="function" line="76" lineend="91" name="dict_to_match" returns="of.ofp_match()" signature="dict_to_match(jm)"><variable ilk="argument" name="jm" /><variable citdl="of.ofp_match()" line="77" name="m" /></scope><scope attributes="protected" ilk="function" line="93" lineend="94" name="_unfix_null" signature="_unfix_null(v)"><variable ilk="argument" name="v" /></scope><scope attributes="protected" ilk="function" line="95" lineend="96" name="_unfix_port" returns="of.ofp_port_map.get()" signature="_unfix_port(v)"><variable ilk="argument" name="v" /></scope><scope attributes="protected" ilk="function" line="97" lineend="101" name="_unfix_ip" returns="str" signature="_unfix_ip(v)"><variable citdl="v()" ilk="argument" name="v" /></scope><scope attributes="protected" ilk="function" line="102" lineend="103" name="_unfix_str" returns="str()" signature="_unfix_str(v)"><variable ilk="argument" name="v" /></scope><scope attributes="protected" ilk="function" line="104" lineend="109" name="_unfix_ethertype" returns="ethtype_to_str()" signature="_unfix_ethertype(v)"><variable ilk="argument" name="v" /></scope><variable attributes="protected" line="111" name="_unfix_map" /><scope ilk="function" line="119" lineend="127" name="match_to_dict" returns="dict" signature="match_to_dict(m)"><variable ilk="argument" name="m" /><variable citdl="dict" line="120" name="d" /><variable citdl="getattr()" line="123" name="v" /></scope><scope ilk="function" line="130" lineend="138" name="action_to_dict" returns="dict" signature="action_to_dict(a)"><variable ilk="argument" name="a" /><variable citdl="dict" line="131" name="d" /><variable citdl="of.ofp_port_map.get()" line="136" name="v" /></scope><scope ilk="function" line="141" lineend="152" name="dict_to_action" returns="cls()" signature="dict_to_action(d)"><variable citdl="d.copy()" ilk="argument" name="d" /><variable citdl="str" line="146" name="t" /><variable line="150" name="cls" /><variable citdl="cls()" line="151" name="a" /></scope><scope doc="Takes a list of flow stats" ilk="function" line="155" lineend="170" name="flow_stats_to_list" returns="list" signature="flow_stats_to_list(flowstats)"><variable ilk="argument" name="flowstats" /><variable citdl="list" line="159" name="stats" /><variable citdl="dict" line="161" name="s" /><variable citdl="list" line="166" name="v" /></scope><scope doc="Takes ofp_desc_stats response" ilk="function" line="173" lineend="180" name="switch_desc_to_dict" returns="dict" signature="switch_desc_to_dict(desc)"><variable ilk="argument" name="desc" /><variable citdl="dict" line="177" name="r" /></scope><scope ilk="function" line="183" lineend="204" name="dict_to_flow_mod" returns="of.ofp_flow_mod()" signature="dict_to_flow_mod(flow)"><variable ilk="argument" name="flow" /><variable citdl="of.ofp_match()" line="184" name="match" /><variable citdl="list" line="190" name="actions" /><variable citdl="of.ofp_action_output()" line="194" name="a" /><variable citdl="of.ofp_flow_mod()" line="197" name="fm" /></scope><variable citdl="dict" line="208" name="valid_packet_types" /><scope attributes="protected" ilk="function" line="209" lineend="215" name="_init" signature="_init()"><variable citdl="list" line="210" name="candidates" /><variable citdl="set()" line="211" name="good" /></scope><scope ilk="function" line="218" lineend="242" name="dict_to_packet" returns="__builtins__.str.join()" signature="dict_to_packet(d, parent=None)"><variable citdl="d.copy()" ilk="argument" name="d" /><variable ilk="argument" name="parent" /><variable citdl="d.get()" line="224" name="payload" /><variable line="228" name="cls" /><variable citdl="cls()" line="229" name="example" /><variable citdl="cls()" line="237" name="o" /></scope><scope doc="Translate parsed packet data to dicts and stuff" ilk="function" line="247" lineend="273" name="fix_parsed" returns="dict" signature="fix_parsed(m)"><variable ilk="argument" name="m" /><variable citdl="()" line="257" name="u" /><variable citdl="dict" line="260" name="r" /></scope><scope doc="Converts dict to packet_out&#xA;Also, special key &quot;output&quot; is an output port." ilk="function" line="276" lineend="297" name="dict_to_packet_out" returns="of.ofp_packet_out()" signature="dict_to_packet_out(d)"><variable ilk="argument" name="d" /><variable citdl="of.ofp_packet_out()" line="281" name="po" /><variable citdl="d.get()" line="284" name="actions" /><variable citdl="of.ofp_action_output()" line="288" name="a" /><variable citdl="data.pack()" line="292" name="data" /></scope><scope ilk="function" line="300" lineend="322" name="list_switches" returns="list" signature="list_switches(ofnexus=None)"><import line="302" module="pox.core" symbol="core" /><variable citdl="core.openflow" ilk="argument" name="ofnexus" /><variable citdl="list" line="305" name="r" /><variable citdl="list" line="307" name="ports" /><variable citdl="dict" line="315" name="rr" /></scope></scope>