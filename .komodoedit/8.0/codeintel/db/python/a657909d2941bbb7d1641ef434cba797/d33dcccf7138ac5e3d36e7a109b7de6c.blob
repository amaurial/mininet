<scope doc="OpenFlow doesn&apos;t know anything about Topology, and Topology&#xA;doesn&apos;t know anything about OpenFlow." ilk="blob" lang="Python" name="topology" src="/home/mininet/new_pox/pox/pox/openflow/topology.py"><import line="28" module="itertools" /><import line="30" module="pox.lib.revent" symbol="*" /><import alias="of" line="31" module="libopenflow_01" /><import line="32" module="pox.openflow" symbol="*" /><import line="33" module="pox.core" symbol="core" /><import line="34" module="pox.topology.topology" symbol="*" /><import line="35" module="pox.openflow.discovery" symbol="*" /><import line="36" module="pox.openflow.libopenflow_01" symbol="xid_generator" /><import line="37" module="pox.openflow.flow_table" symbol="FlowTable" /><import line="37" module="pox.openflow.flow_table" symbol="FlowTableModification" /><import line="37" module="pox.openflow.flow_table" symbol="TableEntry" /><import line="38" module="pox.lib.util" symbol="dpidToStr" /><import line="39" module="pox.lib.addresses" symbol="*" /><import line="41" module="pickle" /><import line="42" module="itertools" /><variable citdl="int" line="47" name="RECONNECT_TIMEOUT" /><variable citdl="core.getLogger()" line="49" name="log" /><scope classrefs="object" doc="Listens to various OpenFlow-specific events and uses those to manipulate&#xA;Topology accordingly." ilk="class" line="51" lineend="104" name="OpenFlowTopology"><scope attributes="__ctor__" ilk="function" line="57" lineend="58" name="__init__" signature="OpenFlowTopology()"><variable citdl="OpenFlowTopology" ilk="argument" name="self" /></scope><scope attributes="protected" doc="The discovery module simply sends out LLDP packets, and triggers&#xA;LinkEvents for discovered switches. It&apos;s our job to take these&#xA;LinkEvents and update pox.topology." ilk="function" line="60" lineend="76" name="_handle_openflow_discovery_LinkEvent" signature="_handle_openflow_discovery_LinkEvent(event)"><variable citdl="OpenFlowTopology" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="event.link" line="66" name="link" /><variable citdl="self.topology.getEntityByID()" line="67" name="sw1" /><variable citdl="self.topology.getEntityByID()" line="68" name="sw2" /></scope><scope attributes="protected" ilk="function" line="78" lineend="92" name="_handle_openflow_ConnectionUp" signature="_handle_openflow_ConnectionUp(event)"><variable citdl="OpenFlowTopology" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="self.topology.getEntityByID()" line="79" name="sw" /><variable citdl="False" line="80" name="add" /></scope><scope attributes="protected" ilk="function" line="94" lineend="104" name="_handle_openflow_ConnectionDown" signature="_handle_openflow_ConnectionDown(event)"><variable citdl="OpenFlowTopology" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="self.topology.getEntityByID()" line="95" name="sw" /></scope></scope><scope classrefs="Port" doc="A subclass of topology.Port for OpenFlow switch ports.&#xA;&#xA;Adds the notion of &quot;connected entities&quot;, which the default&#xA;ofp_phy_port class does not have.&#xA;&#xA;Note: Not presently used." ilk="class" line="107" lineend="149" name="OpenFlowPort"><scope attributes="__ctor__" ilk="function" line="116" lineend="122" name="__init__" signature="OpenFlowPort(ofp)"><variable citdl="OpenFlowPort" ilk="argument" name="self" /><variable ilk="argument" name="ofp" /></scope><variable attributes="__instancevar__" citdl="bool" line="119" name="isController" /><variable attributes="__instancevar__" citdl="True" line="121" name="exists" /><variable attributes="__instancevar__" citdl="set()" line="122" name="entities" /><scope attributes="protected" ilk="function" line="124" lineend="129" name="_update" signature="_update(ofp)"><variable citdl="OpenFlowPort" ilk="argument" name="self" /><variable ilk="argument" name="ofp" /></scope><variable attributes="__instancevar__" citdl="EthAddr()" line="127" name="hwAddr" /><variable attributes="protected __instancevar__" citdl="ofp.config" line="128" name="_config" /><variable attributes="protected __instancevar__" citdl="ofp.state" line="129" name="_state" /><scope doc="True if this port connects to the specified entity " ilk="function" line="131" lineend="133" name="__contains__" returns="bool" signature="__contains__(item)"><variable citdl="OpenFlowPort" ilk="argument" name="self" /><variable ilk="argument" name="item" /></scope><scope ilk="function" line="135" lineend="141" name="addEntity" signature="addEntity(entity, single=False)"><variable citdl="OpenFlowPort" ilk="argument" name="self" /><variable ilk="argument" name="entity" /><variable citdl="False" ilk="argument" name="single" /></scope><scope ilk="function" line="143" lineend="146" name="to_ofp_phy_port" returns="of.ofp_phy_port()" signature="to_ofp_phy_port()"><variable citdl="OpenFlowPort" ilk="argument" name="self" /></scope><scope ilk="function" line="148" lineend="149" name="__repr__" returns="str" signature="__repr__()"><variable citdl="OpenFlowPort" ilk="argument" name="self" /></scope></scope><scope classrefs="EventMixin Switch" doc="OpenFlowSwitches are Topology entities (inheriting from topology.Switch)&#xA;&#xA;OpenFlowSwitches are persistent; that is, if a switch reconnects, the&#xA;Connection field of the original OpenFlowSwitch object will simply be&#xA;reset to refer to the new connection.&#xA;&#xA;For now, OpenFlowSwitch is primarily a proxy to its underlying connection&#xA;object. Later, we&apos;ll possibly add more explicit operations the client can&#xA;perform.&#xA;&#xA;Note that for the purposes of the debugger, we can interpose on&#xA;a switch entity by enumerating all listeners for the events listed&#xA;below, and triggering mock events for those listeners." ilk="class" line="152" lineend="295" name="OpenFlowSwitch"><variable attributes="protected" citdl="set()" line="168" name="_eventMixin_events" /><scope attributes="__ctor__" ilk="function" line="180" lineend="193" name="__init__" signature="OpenFlowSwitch(dpid)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable ilk="argument" name="dpid" /></scope><variable attributes="__instancevar__" line="186" name="dpid" /><variable attributes="__instancevar__" citdl="dict" line="187" name="ports" /><variable attributes="__instancevar__" citdl="OFSyncFlowTable()" line="188" name="flow_table" /><variable attributes="__instancevar__" citdl="int" line="189" name="capabilities" /><variable attributes="protected __instancevar__" line="190" name="_connection" /><variable attributes="protected __instancevar__" citdl="list" line="191" name="_listeners" /><variable attributes="protected __instancevar__" citdl="Timer()" line="192" name="_reconnectTimeout" /><variable attributes="protected __instancevar__" citdl="xid_generator()" line="193" name="_xid_generator" /><scope attributes="protected" doc="ofp - a FeaturesReply message " ilk="function" line="195" lineend="225" name="_setConnection" signature="_setConnection(connection, ofp=None)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable ilk="argument" name="connection" /><variable ilk="argument" name="ofp" /><variable citdl="set()" line="210" name="untouched" /></scope><scope attributes="protected" doc="Called if we&apos;ve been disconnected for RECONNECT_TIMEOUT seconds " ilk="function" line="228" lineend="232" name="_timer_ReconnectTimeout" signature="_timer_ReconnectTimeout()"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /></scope><scope attributes="protected" ilk="function" line="234" lineend="247" name="_handle_con_PortStatus" signature="_handle_con_PortStatus(event)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="event.ofp.desc" line="235" name="p" /></scope><scope attributes="protected" ilk="function" line="249" lineend="250" name="_handle_con_ConnectionDown" signature="_handle_con_ConnectionDown(event)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="252" lineend="254" name="_handle_con_PacketIn" signature="_handle_con_PacketIn(event)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="256" lineend="258" name="_handle_con_BarrierIn" signature="_handle_con_BarrierIn(event)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="260" lineend="263" name="_handle_con_FlowRemoved" signature="_handle_con_FlowRemoved(event)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope ilk="function" line="265" lineend="269" name="findPortForEntity" returns="p" signature="findPortForEntity(entity)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable ilk="argument" name="entity" /></scope><scope attributes="__hidden__" ilk="function" line="272" lineend="273" name="connected (property getter)" returns="bool" signature="connected (property getter)()"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /></scope><variable attributes="property" citdl="bool" line="272" name="connected" /><scope doc="install flow in the local table and the associated switch " ilk="function" line="275" lineend="277" name="installFlow" signature="installFlow(**kw)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable attributes="kwargs" ilk="argument" name="kw" /></scope><scope ilk="function" line="279" lineend="282" name="serialize" returns="pickle.dumps()" signature="serialize()"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable citdl="" line="281" name="serializable" /></scope><scope ilk="function" line="284" lineend="285" name="send" returns="self._connection.send()" signature="send(*args, **kw)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable attributes="varargs" ilk="argument" name="args" /><variable attributes="kwargs" ilk="argument" name="kw" /></scope><scope ilk="function" line="287" lineend="288" name="read" returns="self._connection.read()" signature="read(*args, **kw)"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /><variable attributes="varargs" ilk="argument" name="args" /><variable attributes="kwargs" ilk="argument" name="kw" /></scope><scope ilk="function" line="290" lineend="291" name="__repr__" returns="tuple" signature="__repr__()"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /></scope><variable attributes="property" citdl="repr()" line="294" name="name" /><scope attributes="__hidden__" ilk="function" line="294" lineend="295" name="name (property getter)" returns="repr()" signature="name (property getter)()"><variable citdl="OpenFlowSwitch" ilk="argument" name="self" /></scope></scope><scope classrefs="EventMixin" ilk="class" line="298" lineend="460" name="OFSyncFlowTable"><variable attributes="protected" citdl="set()" line="299" name="_eventMixin_events" /><variable citdl="of.OFPFC_ADD" line="303" name="ADD" /><variable citdl="of.OFPFC_DELETE" line="304" name="REMOVE" /><variable citdl="of.OFPFC_DELETE_STRICT" line="305" name="REMOVE_STRICT" /><variable citdl="int" line="306" name="TIME_OUT" /><scope attributes="__ctor__" ilk="function" line="308" lineend="321" name="__init__" signature="OFSyncFlowTable(switch=None, **kw)"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable ilk="argument" name="switch" /><variable attributes="kwargs" ilk="argument" name="kw" /></scope><variable attributes="__instancevar__" citdl="FlowTable()" line="310" name="flow_table" /><variable attributes="__instancevar__" line="311" name="switch" /><variable attributes="protected __instancevar__" citdl="list" line="314" name="_pending" /><variable attributes="protected __instancevar__" citdl="dict" line="317" name="_pending_barrier_to_ops" /><variable attributes="protected __instancevar__" citdl="dict" line="319" name="_pending_op_to_barrier" /><scope doc="asynchronously install entries in the flow table&#xA;&#xA;will raise a FlowTableModification event when the change has been&#xA;processed by the switch" ilk="function" line="323" lineend="330" name="install" signature="install(entries=[])"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable citdl="list" ilk="argument" name="entries" /></scope><scope doc="asynchronously remove entries in the flow table&#xA;&#xA;will raise a FlowTableModification event when the change has been&#xA;processed by the switch" ilk="function" line="332" lineend="339" name="remove_with_wildcards" signature="remove_with_wildcards(entries=[])"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable citdl="list" ilk="argument" name="entries" /></scope><scope doc="asynchronously remove entries in the flow table.&#xA;&#xA;will raise a FlowTableModification event when the change has been&#xA;processed by the switch" ilk="function" line="341" lineend="348" name="remove_strict" signature="remove_strict(entries=[])"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable citdl="list" ilk="argument" name="entries" /></scope><scope attributes="__hidden__" ilk="function" line="351" lineend="352" name="entries (property getter)" returns="self.flow_table.entries" signature="entries (property getter)()"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /></scope><variable attributes="property" citdl="self.flow_table.entries" line="351" name="entries" /><variable attributes="property" citdl="len()" line="355" name="num_pending" /><scope attributes="__hidden__" ilk="function" line="355" lineend="356" name="num_pending (property getter)" returns="len()" signature="num_pending (property getter)()"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /></scope><scope ilk="function" line="358" lineend="359" name="__len__" returns="len()" signature="__len__()"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /></scope><scope attributes="protected" ilk="function" line="361" lineend="377" name="_mod" signature="_mod(entries, command)"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable citdl="list" ilk="argument" name="entries" /><variable ilk="argument" name="command" /></scope><scope attributes="protected" ilk="function" line="379" lineend="414" name="_sync_pending" returns="bool" signature="_sync_pending(clear=False)"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable citdl="False" ilk="argument" name="clear" /><variable citdl="list" line="394" name="todo" /><variable citdl="self.switch._xid_generator()" line="403" name="fmod_xid" /><variable line="404" name="flow_mod" /><variable citdl="self.switch._xid_generator()" line="408" name="barrier_xid" /><variable citdl="time.time()" line="410" name="now" /></scope><scope attributes="protected" ilk="function" line="416" lineend="418" name="_handle_SwitchConnectionUp" signature="_handle_SwitchConnectionUp(event)"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="420" lineend="423" name="_handle_SwitchConnectionDown" signature="_handle_SwitchConnectionDown(event)"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="425" lineend="447" name="_handle_BarrierIn" returns="EventContinue" signature="_handle_BarrierIn(barrier)"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable ilk="argument" name="barrier" /><variable citdl="list" line="428" name="added" /><variable citdl="list" line="429" name="removed" /></scope><scope attributes="protected" doc="process a flow removed event -- remove the matching flow from the table." ilk="function" line="449" lineend="460" name="_handle_FlowRemoved" returns="EventContinue" signature="_handle_FlowRemoved(event)"><variable citdl="OFSyncFlowTable" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="event.ofp" line="453" name="flow_removed" /></scope></scope><scope ilk="function" line="463" lineend="465" name="launch" signature="launch()" /></scope>