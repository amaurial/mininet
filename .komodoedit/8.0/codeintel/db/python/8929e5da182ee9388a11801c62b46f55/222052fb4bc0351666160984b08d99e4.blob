<scope doc="These are example uses of the recoco cooperative threading&#xA;library." ilk="blob" lang="Python" name="examples" src="/home/mininet/new_pox/pox/pox/lib/recoco/examples.py"><import line="24" module="pox.core" symbol="core" /><import alias="of" line="25" module="pox.openflow.libopenflow_01" /><import line="26" module="pox.lib.revent" symbol="*" /><import line="27" module="pox.lib.recoco" symbol="*" /><scope classrefs="Task" doc="Suppose we have a component of our application that uses it&apos;s own event&#xA;loop. recoco allows us to &quot;add&quot; our select loop to the other event&#xA;loops running within pox.&#xA;&#xA;First note that we inherit from Task. The Task class is recoco&apos;s equivalent&#xA;of python&apos;s threading.thread interface. " ilk="class" line="29" lineend="79" name="EventLoopExample"><scope attributes="__ctor__" ilk="function" line="38" lineend="45" name="__init__" signature="EventLoopExample()"><variable citdl="EventLoopExample" ilk="argument" name="self" /></scope><variable attributes="__instancevar__" citdl="self.get_sockets()" line="41" name="sockets" /><scope doc="Takes a second parameter: the GoingUpEvent object (which we ignore)" ilk="function" line="47" lineend="52" name="start_event_loop" signature="start_event_loop(event)"><variable citdl="EventLoopExample" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope ilk="function" line="54" lineend="55" name="get_sockets" returns="list" signature="get_sockets()"><variable citdl="EventLoopExample" ilk="argument" name="self" /></scope><scope ilk="function" line="57" lineend="58" name="handle_read_events" signature="handle_read_events()"><variable citdl="EventLoopExample" ilk="argument" name="self" /></scope><scope doc="run() is the method that gets called by the scheduler to execute this task&#xA; " ilk="function" line="60" lineend="79" name="run" signature="run() is the method that gets called by the scheduler to execute this task"><variable citdl="EventLoopExample" ilk="argument" name="self" /><variable citdl="list" line="73" name="events" /></scope></scope></scope>