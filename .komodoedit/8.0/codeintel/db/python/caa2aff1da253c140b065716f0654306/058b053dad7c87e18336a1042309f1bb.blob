<scope doc="The POX Messenger system." ilk="blob" lang="Python" name="__init__" src="/home/mininet/new_pox/pox/pox/messenger/__init__.py"><import line="50" module="pox.lib.revent.revent" symbol="*" /><import alias="core" line="51" module="pox.core" symbol="core" /><import line="52" module="json" /><import line="53" module="time" /><import line="54" module="random" /><import line="55" module="hashlib" /><import line="56" module="base64" symbol="b32encode" /><variable citdl="core.getLogger()" line="58" name="log" /><variable citdl="json.JSONDecoder()" line="61" name="defaultDecoder" /><scope classrefs="Event" doc="Fired on a channel when a client joins. " ilk="class" line="64" lineend="70" name="ChannelJoin"><scope attributes="__ctor__" ilk="function" line="66" lineend="70" name="__init__" signature="ChannelJoin(connection, channel, msg={})"><variable citdl="ChannelJoin" ilk="argument" name="self" /><variable ilk="argument" name="connection" /><variable ilk="argument" name="channel" /><variable citdl="dict" ilk="argument" name="msg" /></scope><variable attributes="__instancevar__" line="68" name="con" /><variable attributes="__instancevar__" line="69" name="channel" /><variable attributes="__instancevar__" citdl="dict" line="70" name="msg" /></scope><scope classrefs="Event" doc="Fired on a connection when it closes. " ilk="class" line="72" lineend="76" name="ConnectionClosed"><scope attributes="__ctor__" ilk="function" line="74" lineend="76" name="__init__" signature="ConnectionClosed(connection)"><variable citdl="ConnectionClosed" ilk="argument" name="self" /><variable ilk="argument" name="connection" /></scope><variable attributes="__instancevar__" line="76" name="con" /></scope><scope classrefs="Event" doc="Fired on a channel when a client leaves. " ilk="class" line="78" lineend="83" name="ChannelLeave"><scope attributes="__ctor__" ilk="function" line="80" lineend="83" name="__init__" signature="ChannelLeave(connection, channel)"><variable citdl="ChannelLeave" ilk="argument" name="self" /><variable ilk="argument" name="connection" /><variable ilk="argument" name="channel" /></scope><variable attributes="__instancevar__" line="82" name="con" /><variable attributes="__instancevar__" line="83" name="channel" /></scope><scope classrefs="Event" doc="Fired on a Nexus when a channel is created. " ilk="class" line="85" lineend="89" name="ChannelCreate"><scope attributes="__ctor__" ilk="function" line="87" lineend="89" name="__init__" signature="ChannelCreate(channel)"><variable citdl="ChannelCreate" ilk="argument" name="self" /><variable ilk="argument" name="channel" /></scope><variable attributes="__instancevar__" line="89" name="channel" /></scope><scope classrefs="Event" doc="Fired on the channel and its Nexus right before a channel is destroyed.&#xA;Set .keep = True to keep the channel after all." ilk="class" line="91" lineend="99" name="ChannelDestroy"><scope attributes="__ctor__" ilk="function" line="96" lineend="99" name="__init__" signature="ChannelDestroy(channel)"><variable citdl="ChannelDestroy" ilk="argument" name="self" /><variable ilk="argument" name="channel" /></scope><variable attributes="__instancevar__" line="98" name="channel" /><variable attributes="__instancevar__" citdl="False" line="99" name="keep" /></scope><scope classrefs="Event" doc="Fired on the channel and its Nexus right after a channel is destroyed." ilk="class" line="101" lineend="107" name="ChannelDestroyed"><scope attributes="__ctor__" ilk="function" line="105" lineend="107" name="__init__" signature="ChannelDestroyed(channel)"><variable citdl="ChannelDestroyed" ilk="argument" name="self" /><variable ilk="argument" name="channel" /></scope><variable attributes="__instancevar__" line="107" name="channel" /></scope><scope classrefs="Event" doc="Fired on a Nexus when a message has been received to a non-existant channel.&#xA;You can create the channel in response to this." ilk="class" line="109" lineend="118" name="MissingChannel"><scope attributes="__ctor__" ilk="function" line="114" lineend="118" name="__init__" signature="MissingChannel(connection, channel_name, msg)"><variable citdl="MissingChannel" ilk="argument" name="self" /><variable ilk="argument" name="connection" /><variable ilk="argument" name="channel_name" /><variable ilk="argument" name="msg" /></scope><variable attributes="__instancevar__" line="116" name="con" /><variable attributes="__instancevar__" line="117" name="channel_name" /><variable attributes="__instancevar__" line="118" name="msg" /></scope><scope classrefs="Event" doc="Fired by a channel when a message has been receieved.&#xA;&#xA;Always fired on the Connection itself.  Also fired on the corresponding&#xA;Channel object as specified by the CHANNEL key.&#xA;&#xA;The listener looks like:&#xA;def _handle_MessageReceived (event, msg):" ilk="class" line="120" lineend="148" name="MessageReceived"><scope attributes="__ctor__" ilk="function" line="130" lineend="134" name="__init__" signature="MessageReceived(connection, channel, msg)"><variable citdl="MessageReceived" ilk="argument" name="self" /><variable ilk="argument" name="connection" /><variable ilk="argument" name="channel" /><variable ilk="argument" name="msg" /></scope><variable attributes="__instancevar__" line="132" name="con" /><variable attributes="__instancevar__" line="133" name="msg" /><variable attributes="__instancevar__" line="134" name="channel" /><scope doc="Returns True if this message is to the given channel" ilk="function" line="136" lineend="144" name="is_to_channel" returns="bool" signature="is_to_channel(channel)"><variable citdl="MessageReceived" ilk="argument" name="self" /><variable citdl="channel.name" ilk="argument" name="channel" /></scope><scope attributes="protected" ilk="function" line="146" lineend="148" name="_invoke" returns="MessageReceived._invoke.handler()" signature="_invoke(handler, *args, **kw)"><variable citdl="MessageReceived" ilk="argument" name="self" /><variable ilk="argument" name="handler" /><variable attributes="varargs" ilk="argument" name="args" /><variable attributes="kwargs" ilk="argument" name="kw" /></scope></scope><scope attributes="protected" ilk="function" line="151" lineend="161" name="_get_nexus" returns="str" signature="_get_nexus(nexus)"><variable citdl="str" ilk="argument" name="nexus" /><variable citdl="str" line="156" name="s" /></scope><scope classrefs="object" ilk="class" line="164" lineend="170" name="Transport"><scope attributes="__ctor__" ilk="function" line="165" lineend="166" name="__init__" signature="Transport(nexus)"><variable citdl="Transport" ilk="argument" name="self" /><variable ilk="argument" name="nexus" /></scope><variable attributes="protected __instancevar__" citdl="_get_nexus()" line="166" name="_nexus" /><scope attributes="protected" doc="Forget about a connection " ilk="function" line="168" lineend="170" name="_forget" signature="_forget(connection)"><variable citdl="Transport" ilk="argument" name="self" /><variable ilk="argument" name="connection" /></scope></scope><scope classrefs="EventMixin" doc="Superclass for Connections.&#xA;&#xA;This could actually be a bit thinner, if someone wants to clean it up.&#xA;&#xA;Maintains the state and handles message parsing and dispatch for a&#xA;single connection." ilk="class" line="173" lineend="300" name="Connection"><variable attributes="protected" citdl="set()" line="182" name="_eventMixin_events" /><scope attributes="__ctor__" doc="transport is the source of the connection (e.g, TCPTransport)." ilk="function" line="187" lineend="201" name="__init__" signature="Connection(transport)"><variable citdl="Connection" ilk="argument" name="self" /><variable ilk="argument" name="transport" /><variable line="200" name="num" /><variable line="200" name="key" /></scope><variable attributes="protected __instancevar__" citdl="True" line="192" name="_is_connected" /><variable attributes="protected __instancevar__" line="193" name="_transport" /><variable attributes="protected __instancevar__" citdl="False" line="194" name="_newlines" /><variable attributes="protected __instancevar__" citdl="self._buf.lstrip()" line="198" name="_buf" /><variable attributes="protected __instancevar__" line="201" name="_session_id" /><variable attributes="protected __instancevar__" line="201" name="_session_num" /><scope attributes="protected" doc="Send a message to a client so they know they&apos;re connected" ilk="function" line="203" lineend="207" name="_send_welcome" signature="_send_welcome()"><variable citdl="Connection" ilk="argument" name="self" /></scope><scope attributes="protected" doc="Called internally to shut the connection down." ilk="function" line="209" lineend="218" name="_close" signature="_close()"><variable citdl="Connection" ilk="argument" name="self" /></scope><scope doc="Send data over the connection.&#xA;&#xA;It will first be encoded into JSON, and optionally followed with&#xA;a newline.  Ultimately, it will be passed to send_raw() to actually&#xA;be sent." ilk="function" line="221" lineend="233" name="send" returns="bool" signature="send(whatever)"><variable citdl="Connection" ilk="argument" name="self" /><variable ilk="argument" name="whatever" /><variable citdl="json.dumps()" line="230" name="s" /></scope><scope doc="This method should actually send data out over the connection.&#xA;&#xA;Subclasses need to implement this." ilk="function" line="235" lineend="241" name="send_raw" signature="send_raw(data)"><variable citdl="Connection" ilk="argument" name="self" /><variable ilk="argument" name="data" /></scope><scope attributes="__hidden__" doc="True if this Connection is still connected." ilk="function" line="244" lineend="248" name="is_connected (property getter)" returns="bool" signature="is_connected (property getter)()"><variable citdl="Connection" ilk="argument" name="self" /></scope><variable attributes="property" citdl="bool" line="244" name="is_connected" /><scope attributes="protected" doc="Raises events when a complete message is available.&#xA;&#xA;Subclasses may want to call this when they have a new message&#xA;available.  See _recv_raw()." ilk="function" line="250" lineend="258" name="_rx_message" signature="_rx_message(msg)"><variable citdl="Connection" ilk="argument" name="self" /><variable ilk="argument" name="msg" /><variable citdl="self.raiseEventNoErrors()" line="257" name="e" /></scope><scope attributes="protected" doc="If your subclass receives a stream instead of discrete messages, this&#xA;method can parse out individual messages and call _recv_msg() when&#xA;it has full messages." ilk="function" line="260" lineend="287" name="_rx_raw" signature="_rx_raw(data)"><variable citdl="Connection" ilk="argument" name="self" /><variable ilk="argument" name="data" /><variable line="277" name="msg" /><variable line="277" name="l" /></scope><scope doc="Subclasses should implement better versions of this." ilk="function" line="289" lineend="294" name="__str__" returns="tuple" signature="__str__()"><variable citdl="Connection" ilk="argument" name="self" /></scope><scope doc="Close the connection." ilk="function" line="296" lineend="300" name="close" signature="close()"><variable citdl="Connection" ilk="argument" name="self" /></scope></scope><scope classrefs="EventMixin" doc="Allows one to easily listen to only messages that have a CHANNEL key&#xA;with a specific name.&#xA;&#xA;Generally you will not create these classes directly, but by calling&#xA;getChannel() on the ChannelNexus." ilk="class" line="303" lineend="389" name="Channel"><variable attributes="protected" citdl="set()" line="311" name="_eventMixin_events" /><scope attributes="__ctor__" doc="name is the name for the channel (i.e., the value for the messages&apos;&#xA;CHANNEL key).&#xA;nexus is the specific MessengerNexus with which this channel is to be&#xA;associated (defaults to core.MessengerNexus)." ilk="function" line="319" lineend="335" name="__init__" signature="Channel(name, nexus=None, temporary=False)"><variable citdl="Channel" ilk="argument" name="self" /><variable ilk="argument" name="name" /><variable ilk="argument" name="nexus" /><variable citdl="False" ilk="argument" name="temporary" /></scope><variable attributes="protected __instancevar__" line="328" name="_name" /><variable attributes="protected __instancevar__" citdl="_get_nexus()" line="330" name="_nexus" /><variable attributes="__instancevar__" citdl="False" line="333" name="temporary" /><variable attributes="protected __instancevar__" citdl="set()" line="335" name="_members" /><variable attributes="property" line="338" name="name" /><scope attributes="__hidden__" ilk="function" line="338" lineend="339" name="name (property getter)" signature="name (property getter)()"><variable citdl="Channel" ilk="argument" name="self" /></scope><scope attributes="protected" doc="Remove channel " ilk="function" line="341" lineend="363" name="_destroy" returns="bool" signature="_destroy()"><variable citdl="Channel" ilk="argument" name="self" /><variable citdl="self.raiseEvent()" line="343" name="e" /></scope><scope attributes="protected" ilk="function" line="365" lineend="368" name="_add_member" signature="_add_member(con, msg={})"><variable citdl="Channel" ilk="argument" name="self" /><variable ilk="argument" name="con" /><variable citdl="dict" ilk="argument" name="msg" /></scope><scope attributes="protected" ilk="function" line="370" lineend="379" name="_remove_member" signature="_remove_member(con, allow_destroy=True)"><variable citdl="Channel" ilk="argument" name="self" /><variable ilk="argument" name="con" /><variable citdl="True" ilk="argument" name="allow_destroy" /></scope><scope ilk="function" line="381" lineend="386" name="send" signature="send(msg)"><variable citdl="Channel" ilk="argument" name="self" /><variable ilk="argument" name="msg" /><variable citdl="dict()" line="382" name="d" /></scope><scope ilk="function" line="388" lineend="389" name="__str__" returns="str" signature="__str__()"><variable citdl="Channel" ilk="argument" name="self" /></scope></scope><scope ilk="function" line="392" lineend="398" name="reply" signature="reply(_msg, **kw)"><variable citdl="_msg.msg" ilk="argument" name="_msg" /><variable attributes="kwargs" ilk="argument" name="kw" /></scope><scope classrefs="object" doc="A very simple framework for writing &quot;bots&quot; that respond to messages&#xA;on a channel." ilk="class" line="401" lineend="500" name="ChannelBot"><scope ilk="function" line="407" lineend="408" name="__str__" returns="tuple" signature="__str__()"><variable citdl="ChannelBot" ilk="argument" name="self" /></scope><scope attributes="__ctor__" ilk="function" line="410" lineend="411" name="__init__" signature="ChannelBot(channel, nexus=None, weak=False, extra={})"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="channel" /><variable ilk="argument" name="nexus" /><variable citdl="False" ilk="argument" name="weak" /><variable citdl="dict" ilk="argument" name="extra" /></scope><scope attributes="protected" ilk="function" line="413" lineend="429" name="_startup" signature="_startup(channel, nexus=None, weak=False, extra={})"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="channel" /><variable ilk="argument" name="nexus" /><variable citdl="False" ilk="argument" name="weak" /><variable citdl="dict" ilk="argument" name="extra" /><variable line="428" name="n" /></scope><variable attributes="protected __instancevar__" citdl="_get_nexus()" line="414" name="_nexus" /><variable attributes="__instancevar__" citdl="self._nexus.get_channel()" line="416" name="channel" /><variable attributes="__instancevar__" citdl="self.channel.addListeners()" line="419" name="listeners" /><variable attributes="__instancevar__" citdl="list" line="420" name="prefixes" /><scope attributes="protected" ilk="function" line="431" lineend="433" name="_handle_ChannelDestroyed" signature="_handle_ChannelDestroyed(event)"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="435" lineend="436" name="_handle_ChannelJoin" signature="_handle_ChannelJoin(event)"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="438" lineend="439" name="_handle_ChannelLeave" signature="_handle_ChannelLeave(event)"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="441" lineend="456" name="_handle_MessageReceived" signature="_handle_MessageReceived(event, msg)"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable ilk="argument" name="msg" /><variable citdl="str" line="444" name="cmd" /></scope><scope attributes="protected" doc="Called when no command found " ilk="function" line="458" lineend="460" name="_unhandled" signature="_unhandled(event)"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" doc="Called when a connection joins " ilk="function" line="462" lineend="464" name="_join" signature="_join(event, connection, msg)"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable ilk="argument" name="connection" /><variable ilk="argument" name="msg" /></scope><scope attributes="protected" doc="Called when a connection leaves&#xA;&#xA;If channel now has no members, empty is True" ilk="function" line="466" lineend="472" name="_leave" signature="_leave(connection, empty)"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="connection" /><variable ilk="argument" name="empty" /></scope><scope attributes="protected" doc="Called when channel is destroyed " ilk="function" line="474" lineend="476" name="_destroyed" signature="_destroyed()"><variable citdl="ChannelBot" ilk="argument" name="self" /></scope><scope attributes="protected" doc="Called during initialization&#xA;&apos;extra&apos; is any additional information passed in when initializing&#xA;the bot.  In particular, this may be the message that goes along&#xA;with its invitation into a channel." ilk="function" line="478" lineend="485" name="_init" signature="_init(extra)"><variable citdl="ChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="extra" /></scope><scope doc="Unicast reply to a specific message." ilk="function" line="487" lineend="491" name="reply" signature="reply(__event, **kw)"><variable citdl="ChannelBot" ilk="argument" name="__self" /><variable ilk="argument" name="__event" /><variable attributes="kwargs" ilk="argument" name="kw" /></scope><scope doc="Send a message to all members of this channel." ilk="function" line="493" lineend="500" name="send" signature="send(__msg={}, **kw)"><variable citdl="ChannelBot" ilk="argument" name="__self" /><variable citdl="dict" ilk="argument" name="__msg" /><variable attributes="kwargs" ilk="argument" name="kw" /><variable citdl="dict" line="497" name="m" /></scope></scope><scope classrefs="ChannelBot" ilk="class" line="503" lineend="591" name="DefaultChannelBot"><scope attributes="protected" ilk="function" line="504" lineend="505" name="_init" signature="_init(extra)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="extra" /></scope><variable attributes="protected __instancevar__" citdl="dict" line="505" name="_bots" /><scope doc="Registers a bot (an instance of ChannelBot) so that it can be&#xA;invited to other channels." ilk="function" line="507" lineend="515" name="add_bot" signature="add_bot(bot, name=None)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="bot" /><variable citdl="bot.__name__" ilk="argument" name="name" /></scope><scope attributes="protected" ilk="function" line="517" lineend="518" name="_exec_newlines_False" signature="_exec_newlines_False(event)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" ilk="function" line="520" lineend="521" name="_exec_newlines_True" signature="_exec_newlines_True(event)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" doc="Invites a bot that has been registered with add_bot() to a channel.&#xA;&#xA;Note that you can invite a bot to an empty (new) temporary channel.&#xA;It will stay until the first member leaves." ilk="function" line="523" lineend="551" name="_exec_cmd_invite" signature="_exec_cmd_invite(event)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="event.msg.get()" line="530" name="botname" /><variable citdl="self._bots.get()" line="531" name="botclass" /><variable citdl="event.msg.get()" line="532" name="channel" /><variable citdl="True" line="533" name="new_channel" /><variable citdl="self._nexus.get_channel()" line="538" name="chan" /><variable citdl="botclass()" line="549" name="bot" /></scope><scope attributes="protected" ilk="function" line="553" lineend="555" name="_unhandled" signature="_unhandled(event)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope><scope attributes="protected" doc="Makes up a channel name " ilk="function" line="557" lineend="567" name="_gen_channel_name" returns="str" signature="_gen_channel_name(prefix=&apos;temp&apos;)"><import line="560" module="random" /><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable citdl="str" ilk="argument" name="prefix" /><variable citdl="random.randint()" line="563" name="r" /><variable citdl="str" line="564" name="n" /></scope><scope attributes="protected" doc="Generates a new channel with random name " ilk="function" line="569" lineend="575" name="_exec_cmd_new_channel" signature="_exec_cmd_new_channel(event)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="event.msg.get()" line="571" name="prefix" /><variable citdl="_gen_channel_name()" line="572" name="n" /><variable citdl="self._nexus.get_channel()" line="573" name="ch" /></scope><scope attributes="protected" doc="Joins/creates a channel " ilk="function" line="577" lineend="582" name="_exec_cmd_join_channel" signature="_exec_cmd_join_channel(event)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="event.msg.get()" line="579" name="temp" /><variable citdl="self._nexus.get_channel()" line="580" name="ch" /></scope><scope attributes="protected" ilk="function" line="584" lineend="587" name="_exec_cmd_leave_channel" signature="_exec_cmd_leave_channel(event)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="self._nexus.get_channel()" line="585" name="ch" /></scope><scope attributes="protected" ilk="function" line="589" lineend="591" name="_exec_test" signature="_exec_test(event, value)"><variable citdl="DefaultChannelBot" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable ilk="argument" name="value" /></scope></scope><scope classrefs="EventMixin" doc="Transports, Channels, etc. are all associated with a MessengerNexus.&#xA;Typically, there is only one, and it is registered as&#xA;pox.core.MessengerNexus" ilk="class" line="594" lineend="674" name="MessengerNexus"><variable attributes="protected" citdl="set()" line="601" name="_eventMixin_events" /><scope attributes="__ctor__" ilk="function" line="608" lineend="613" name="__init__" signature="MessengerNexus()"><variable citdl="MessengerNexus" ilk="argument" name="self" /></scope><variable attributes="protected __instancevar__" citdl="dict" line="610" name="_channels" /><variable attributes="__instancevar__" citdl="DefaultChannelBot" line="611" name="default_bot" /><variable attributes="protected __instancevar__" citdl="int" line="612" name="_next_ses" /><variable attributes="protected __instancevar__" citdl="str()" line="613" name="_session_salt" /><scope doc="Return a new session ID tuple (key, num)&#xA;&#xA;The key is a unique and not-trivial-to-guess alphanumeric value&#xA;associated with the session.&#xA;The num is a unique numerical value associated with the session." ilk="function" line="615" lineend="638" name="generate_session" returns="tuple" signature="generate_session()"><variable citdl="MessengerNexus" ilk="argument" name="self" /><variable citdl="int" line="623" name="r" /><variable citdl="str()" line="626" name="key" /><scope doc="base 16 on digits &apos;a&apos; through &apos;p&apos; " ilk="function" line="631" lineend="634" name="alphahex" returns="__builtins__.str.join()" signature="alphahex(r)"><variable ilk="argument" name="r" /></scope></scope><scope ilk="function" line="640" lineend="649" name="get_channel" returns="Channel" signature="get_channel(name, create=True, temporary=False)"><variable citdl="MessengerNexus" ilk="argument" name="self" /><variable citdl="str" ilk="argument" name="name" /><variable citdl="True" ilk="argument" name="create" /><variable citdl="False" ilk="argument" name="temporary" /><variable citdl="Channel" line="645" name="c" /></scope><scope attributes="protected" doc="Dispatches messages to listeners of this nexus and to its Channels.&#xA;Called by Connections." ilk="function" line="651" lineend="674" name="_rx_message" returns="bool" signature="_rx_message(con, msg)"><variable citdl="MessengerNexus" ilk="argument" name="self" /><variable ilk="argument" name="con" /><variable ilk="argument" name="msg" /><variable citdl="True" line="656" name="ret" /><variable citdl="list" line="659" name="channels" /><variable citdl="get_channel()" line="665" name="channel" /><variable citdl="self.raiseEvent()" line="667" name="e" /><variable citdl="e.channel_name" line="668" name="cname" /></scope></scope><scope ilk="function" line="678" lineend="679" name="launch" signature="launch()" /></scope>