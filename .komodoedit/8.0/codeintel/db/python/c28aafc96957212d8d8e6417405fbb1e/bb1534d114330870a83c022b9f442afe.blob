<scope ilk="blob" lang="Python" name="ImageChops" src="/usr/lib/python2.7/dist-packages/PIL/ImageChops.py"><import line="18" module="Image" /><scope doc="Fill a channel with a given grey level" ilk="function" line="43" lineend="46" name="constant" returns="Image.new()" signature="constant(image, value)"><variable ilk="argument" name="image" /><variable ilk="argument" name="value" /></scope><scope doc="Create a copy of a channel" ilk="function" line="54" lineend="57" name="duplicate" returns="image.copy()" signature="duplicate(image)"><variable ilk="argument" name="image" /></scope><scope doc="Invert a channel" ilk="function" line="66" lineend="70" name="invert" returns="image._new()" signature="invert(image)"><variable ilk="argument" name="image" /></scope><scope doc="Select the lighter pixels from each image" ilk="function" line="83" lineend="88" name="lighter" returns="image1._new()" signature="lighter(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Select the darker pixels from each image" ilk="function" line="101" lineend="106" name="darker" returns="image1._new()" signature="darker(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Subtract one image from another" ilk="function" line="118" lineend="123" name="difference" returns="image1._new()" signature="difference(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Superimpose two positive images" ilk="function" line="137" lineend="142" name="multiply" returns="image1._new()" signature="multiply(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Superimpose two negative images" ilk="function" line="154" lineend="159" name="screen" returns="image1._new()" signature="screen(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Add two images" ilk="function" line="172" lineend="177" name="add" returns="image1._new()" signature="add(image1, image2, scale=1.0, offset=0)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /><variable citdl="float" ilk="argument" name="scale" /><variable citdl="int" ilk="argument" name="offset" /></scope><scope doc="Subtract two images" ilk="function" line="190" lineend="195" name="subtract" returns="image1._new()" signature="subtract(image1, image2, scale=1.0, offset=0)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /><variable citdl="float" ilk="argument" name="scale" /><variable citdl="int" ilk="argument" name="offset" /></scope><scope doc="Add two images without clipping" ilk="function" line="207" lineend="212" name="add_modulo" returns="image1._new()" signature="add_modulo(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Subtract two images without clipping" ilk="function" line="224" lineend="229" name="subtract_modulo" returns="image1._new()" signature="subtract_modulo(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Logical and between two images" ilk="function" line="235" lineend="240" name="logical_and" returns="image1._new()" signature="logical_and(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Logical or between two images" ilk="function" line="246" lineend="251" name="logical_or" returns="image1._new()" signature="logical_or(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Logical xor between two images" ilk="function" line="257" lineend="262" name="logical_xor" returns="image1._new()" signature="logical_xor(image1, image2)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /></scope><scope doc="Blend two images using a constant transparency weight" ilk="function" line="269" lineend="272" name="blend" returns="Image.blend()" signature="blend(image1, image2, alpha)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /><variable ilk="argument" name="alpha" /></scope><scope doc="Create composite image by blending images using a transparency mask" ilk="function" line="279" lineend="282" name="composite" returns="Image.composite()" signature="composite(image1, image2, mask)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /><variable ilk="argument" name="mask" /></scope><scope doc="Offset image in horizontal and/or vertical direction" ilk="function" line="297" lineend="302" name="offset" returns="image._new()" signature="offset(image, xoffset, yoffset=None)"><variable ilk="argument" name="image" /><variable ilk="argument" name="xoffset" /><variable ilk="argument" name="yoffset" /></scope></scope>