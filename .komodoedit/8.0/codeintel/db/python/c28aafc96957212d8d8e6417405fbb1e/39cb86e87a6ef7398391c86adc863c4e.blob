<scope ilk="blob" lang="Python" name="IcnsImagePlugin" src="/usr/lib/python2.7/dist-packages/PIL/IcnsImagePlugin.py"><import line="17" module="Image" /><import line="17" module="ImageFile" /><import line="18" module="string" /><import line="18" module="struct" /><import line="208" module="os" /><import line="208" module="sys" /><variable citdl="int" line="20" name="HEADERSIZE" /><scope ilk="function" line="22" lineend="23" name="nextheader" returns="struct.unpack()" signature="nextheader(fobj)"><variable ilk="argument" name="fobj" /></scope><scope ilk="function" line="25" lineend="31" name="read_32t" returns="read_32()" signature="read_32t(fobj, (&apos;start&apos;, &apos;length&apos;), (&apos;width&apos;, &apos;height&apos;))"><variable ilk="argument" name="fobj" /><variable ilk="argument" name="start" /><variable ilk="argument" name="length" /><variable ilk="argument" name="width" /><variable ilk="argument" name="height" /><variable citdl="fobj.read()" line="28" name="sig" /></scope><scope doc="Read a 32bit RGB icon resource.  Seems to be either uncompressed or&#xA;an RLE packbits-like scheme." ilk="function" line="33" lineend="74" name="read_32" returns="dict" signature="read_32(fobj, (&apos;start&apos;, &apos;length&apos;), size)"><variable ilk="argument" name="fobj" /><variable ilk="argument" name="start" /><variable ilk="argument" name="length" /><variable ilk="argument" name="size" /><variable line="39" name="sizesq" /><variable citdl="fobj.read()" line="42" name="indata" /><variable citdl="Image.new()" line="43" name="im" /><variable citdl="list" line="48" name="data" /><variable citdl="ord()" line="49" name="bytesleft" /><variable citdl="fobj.read()" line="51" name="byte" /><variable citdl="ord()" line="56" name="blocksize" /><variable citdl="Image.frombuffer()" line="70" name="band" /></scope><scope ilk="function" line="76" lineend="82" name="read_mk" returns="dict" signature="read_mk(fobj, (&apos;start&apos;, &apos;length&apos;), size)"><variable ilk="argument" name="fobj" /><variable ilk="argument" name="start" /><variable ilk="argument" name="length" /><variable ilk="argument" name="size" /><variable citdl="Image.frombuffer()" line="79" name="band" /></scope><scope ilk="class" line="84" lineend="161" name="IcnsFile"><variable citdl="dict" line="86" name="SIZES" /><scope attributes="__ctor__" doc="fobj is a file-like object as an icns resource" ilk="function" line="105" lineend="122" name="__init__" signature="IcnsFile(fobj)"><variable citdl="IcnsFile" ilk="argument" name="self" /><variable ilk="argument" name="fobj" /><variable line="112" name="sig" /><variable line="112" name="filesize" /><variable citdl="int" line="115" name="i" /><variable citdl="int" line="117" name="blocksize" /></scope><variable attributes="__instancevar__" citdl="dict" line="110" name="dct" /><variable attributes="__instancevar__" line="111" name="fobj" /><scope ilk="function" line="124" lineend="131" name="itersizes" returns="list" signature="itersizes()"><variable citdl="IcnsFile" ilk="argument" name="self" /><variable citdl="list" line="125" name="sizes" /></scope><scope ilk="function" line="133" lineend="137" name="bestsize" returns="max()" signature="bestsize()"><variable citdl="IcnsFile" ilk="argument" name="self" /><variable citdl="itersizes()" line="134" name="sizes" /></scope><scope doc="Get an icon resource as {channel: array}.  Note that&#xA;the arrays are bottom-up like windows bitmaps and will likely&#xA;need to be flipped or transposed in some way." ilk="function" line="139" lineend="150" name="dataforsize" returns="dict" signature="dataforsize(size)"><variable citdl="IcnsFile" ilk="argument" name="self" /><variable ilk="argument" name="size" /><variable citdl="dict" line="145" name="dct" /><variable citdl="self.dct.get()" line="147" name="desc" /></scope><scope ilk="function" line="152" lineend="161" name="getimage" signature="getimage(size=None)"><variable citdl="IcnsFile" ilk="argument" name="self" /><variable citdl="bestsize()" ilk="argument" name="size" /><variable citdl="dataforsize()" line="155" name="channels" /><variable line="156" name="im" /></scope></scope><scope classrefs="ImageFile.ImageFile" doc="PIL read-only image support for Mac OS .icns files.&#xA;Chooses the best resolution, but will possibly load&#xA;a different size image if you mutate the size attribute&#xA;before calling &apos;load&apos;.&#xA;&#xA;The info dictionary has a key &apos;sizes&apos; that is a list&#xA;of sizes that the icns file has." ilk="class" line="166" lineend="201" name="IcnsImageFile"><variable citdl="str" line="177" name="format" /><variable citdl="str" line="178" name="format_description" /><scope attributes="protected" ilk="function" line="180" lineend="186" name="_open" signature="_open()"><variable citdl="IcnsImageFile" ilk="argument" name="self" /></scope><variable attributes="__instancevar__" citdl="IcnsFile" line="181" name="icns" /><variable attributes="__instancevar__" citdl="im.mode" line="182" name="mode" /><variable attributes="__instancevar__" citdl="im.size" line="183" name="size" /><variable attributes="__instancevar__" citdl="tuple" line="186" name="tile" /><scope ilk="function" line="188" lineend="201" name="load" signature="load()"><variable citdl="IcnsImageFile" ilk="argument" name="self" /><variable citdl="self.icns.getimage()" line="194" name="im" /></scope><variable attributes="__instancevar__" citdl="im.im" line="195" name="im" /><variable attributes="__instancevar__" line="198" name="fp" /></scope><variable citdl="Image.open()" line="209" name="im" /></scope>