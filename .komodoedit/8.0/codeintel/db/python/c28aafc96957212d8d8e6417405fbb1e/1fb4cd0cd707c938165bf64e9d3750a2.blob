<scope ilk="blob" lang="Python" name="ImageFile" src="/usr/lib/python2.7/dist-packages/PIL/ImageFile.py"><import line="30" module="Image" /><import line="31" module="traceback" /><import line="31" module="string" /><import line="31" module="os" /><variable citdl="int" line="33" name="MAXBLOCK" /><variable citdl="int" line="35" name="SAFEBLOCK" /><variable citdl="dict" line="37" name="ERRORS" /><scope ilk="function" line="45" lineend="52" name="raise_ioerror" signature="raise_ioerror(error)"><variable ilk="argument" name="error" /><variable citdl="Image.core.getcodecstatus()" line="47" name="message" /></scope><scope attributes="protected" ilk="function" line="58" lineend="60" name="_tilesort" returns="cmp()" signature="_tilesort(t1, t2)"><variable ilk="argument" name="t1" /><variable ilk="argument" name="t2" /></scope><scope classrefs="Image.Image" doc="Base class for image file format handlers." ilk="class" line="69" lineend="238" name="ImageFile"><scope attributes="__ctor__" ilk="function" line="72" lineend="110" name="__init__" signature="ImageFile(fp=None, filename=None)"><variable citdl="ImageFile" ilk="argument" name="self" /><variable ilk="argument" name="fp" /><variable ilk="argument" name="filename" /></scope><variable attributes="__instancevar__" citdl="list" line="75" name="tile" /><variable attributes="__instancevar__" citdl="int" line="76" name="readonly" /><variable attributes="__instancevar__" citdl="tuple" line="78" name="decoderconfig" /><variable attributes="__instancevar__" citdl="int" line="79" name="decodermaxblock" /><variable attributes="__instancevar__" citdl="open()" line="83" name="fp" /><variable attributes="__instancevar__" line="84" name="filename" /><scope doc="Set draft mode" ilk="function" line="112" lineend="115" name="draft" signature="draft(mode, size)"><variable citdl="ImageFile" ilk="argument" name="self" /><variable ilk="argument" name="mode" /><variable ilk="argument" name="size" /></scope><scope doc="Check file integrity" ilk="function" line="117" lineend="122" name="verify" signature="verify()"><variable citdl="ImageFile" ilk="argument" name="self" /></scope><scope doc="Load image data based on tile list" ilk="function" line="124" lineend="225" name="load" returns="Image.Image.load()" signature="load()"><import line="152" module="mmap" /><variable citdl="ImageFile" ilk="argument" name="self" /><variable citdl="Image.Image.load()" line="127" name="pixel" /><variable citdl="int" line="136" name="readonly" /><variable citdl="open()" line="153" name="file" /><variable citdl="os.path.getsize()" line="154" name="size" /><variable citdl="self.load_read" line="168" name="read" /><variable citdl="self.load_seek" line="173" name="seek" /><variable citdl="self.tile_prefix" line="184" name="prefix" /><variable citdl="Image._getdecoder()" line="189" name="d" /><variable citdl="self.tile_prefix" line="195" name="b" /><variable citdl="len()" line="196" name="t" /><variable citdl="read()" line="198" name="s" /><variable line="203" name="e" /><variable line="203" name="n" /></scope><variable attributes="__instancevar__" citdl="mmap.mmap()" line="134" name="map" /><variable attributes="__instancevar__" citdl="Image.core.map_buffer()" line="147" name="im" /><variable attributes="__instancevar__" citdl="self.im.size" line="221" name="size" /><scope ilk="function" line="227" lineend="234" name="load_prepare" signature="load_prepare()"><variable citdl="ImageFile" ilk="argument" name="self" /></scope><scope ilk="function" line="236" lineend="238" name="load_end" signature="load_end()"><variable citdl="ImageFile" ilk="argument" name="self" /></scope></scope><scope classrefs="ImageFile" doc="Base class for stub image loaders." ilk="class" line="254" lineend="277" name="StubImageFile"><scope attributes="protected" ilk="function" line="257" lineend="259" name="_open" signature="_open()"><variable citdl="StubImageFile" ilk="argument" name="self" /></scope><scope ilk="function" line="262" lineend="270" name="load" signature="load()"><variable citdl="StubImageFile" ilk="argument" name="self" /><variable citdl="self._load()" line="263" name="loader" /><variable citdl="loader.load()" line="266" name="image" /></scope><variable attributes="__instancevar__" citdl="image.__class__" line="269" name="__class__" /><variable attributes="__instancevar__" citdl="image.__dict__" line="270" name="__dict__" /><scope attributes="protected" ilk="function" line="275" lineend="277" name="_load" signature="_load()"><variable citdl="StubImageFile" ilk="argument" name="self" /></scope></scope><scope attributes="protected" ilk="class" line="283" lineend="324" name="_ParserFile"><scope attributes="__ctor__" ilk="function" line="286" lineend="288" name="__init__" signature="_ParserFile(data)"><variable citdl="_ParserFile" ilk="argument" name="self" /><variable ilk="argument" name="data" /></scope><variable attributes="__instancevar__" line="287" name="data" /><variable attributes="__instancevar__" citdl="int" line="288" name="offset" /><scope ilk="function" line="290" lineend="291" name="close" signature="close()"><variable citdl="_ParserFile" ilk="argument" name="self" /></scope><scope ilk="function" line="293" lineend="294" name="tell" returns="int" signature="tell()"><variable citdl="_ParserFile" ilk="argument" name="self" /></scope><scope ilk="function" line="296" lineend="303" name="seek" signature="seek(offset, whence=0)"><variable citdl="_ParserFile" ilk="argument" name="self" /><variable ilk="argument" name="offset" /><variable citdl="int" ilk="argument" name="whence" /></scope><scope ilk="function" line="305" lineend="312" name="read" returns="list" signature="read(bytes=0)"><variable citdl="_ParserFile" ilk="argument" name="self" /><variable citdl="int" ilk="argument" name="bytes" /><variable citdl="int" line="306" name="pos" /><variable citdl="list" line="308" name="data" /></scope><scope ilk="function" line="314" lineend="324" name="readline" returns="str" signature="readline()"><variable citdl="_ParserFile" ilk="argument" name="self" /><variable citdl="str" line="316" name="s" /><variable citdl="read()" line="318" name="c" /></scope></scope><scope ilk="class" line="330" lineend="455" name="Parser"><variable line="332" name="incremental" /><variable citdl="Image.open()" line="333" name="image" /><variable citdl="list" line="334" name="data" /><variable citdl="Image._getdecoder()" line="335" name="decoder" /><variable citdl="int" line="336" name="finished" /><scope ilk="function" line="343" lineend="344" name="reset" signature="reset()"><variable citdl="Parser" ilk="argument" name="self" /></scope><scope ilk="function" line="352" lineend="428" name="feed" signature="feed(data)"><variable citdl="Parser" ilk="argument" name="self" /><variable ilk="argument" name="data" /><variable citdl="min()" line="368" name="skip" /><variable line="374" name="e" /><variable line="374" name="n" /><variable citdl="_ParserFile" line="401" name="fp" /><variable citdl="Image.open()" line="402" name="im" /><variable citdl="hasattr()" line="408" name="flag" /></scope><variable attributes="__instancevar__" citdl="int" line="370" name="offset" /><variable attributes="__instancevar__" line="411" name="decode" /><scope ilk="function" line="436" lineend="455" name="close" returns="Image.open()" signature="close()"><variable citdl="Parser" ilk="argument" name="self" /><variable citdl="_ParserFile" line="450" name="fp" /></scope></scope><scope attributes="protected" doc="Helper to save image based on tile list" ilk="function" line="466" lineend="504" name="_save" signature="_save(im, fp, tile)"><variable ilk="argument" name="im" /><variable ilk="argument" name="fp" /><variable ilk="argument" name="tile" /><variable citdl="max()" line="474" name="bufsize" /><variable citdl="fp.fileno()" line="476" name="fh" /><variable citdl="Image._getencoder()" line="481" name="e" /><variable line="486" name="d" /><variable line="486" name="l" /><variable citdl="e.encode_to_file()" line="486" name="s" /></scope><scope attributes="protected" ilk="function" line="516" lineend="528" name="_safe_read" returns="string.join()" signature="_safe_read(fp, size)"><variable ilk="argument" name="fp" /><variable citdl="len()" ilk="argument" name="size" /><variable citdl="list" line="521" name="data" /><variable citdl="fp.read()" line="523" name="block" /></scope></scope>