<scope ilk="blob" lang="Python" name="Image" src="/usr/lib/python2.7/dist-packages/PIL/Image.py"><import line="30" module="warnings" /><import line="54" module="_imaging" /><import line="69" module="ImageMode" /><import line="70" module="ImagePalette" /><import line="72" module="os" /><import line="72" module="string" /><import line="72" module="sys" /><import line="75" module="types" symbol="IntType" /><import line="75" module="types" symbol="StringType" /><import line="75" module="types" symbol="TupleType" /><import line="108" module="operator" symbol="isNumberType" /><import line="108" module="operator" symbol="isSequenceType" /><import line="194" module="struct" /><variable citdl="str" line="27" name="VERSION" /><variable line="32" name="warnings" /><scope attributes="protected" ilk="class" line="34" lineend="37" name="_imaging_not_installed"><scope ilk="function" line="36" lineend="37" name="__getattr__" signature="__getattr__(id)"><variable citdl="_imaging_not_installed" ilk="argument" name="self" /><variable ilk="argument" name="id" /></scope></scope><variable citdl="_imaging_not_installed" line="55" name="core" /><variable citdl="type()" line="78" name="UnicodeStringType" /><scope ilk="function" line="86" lineend="87" name="isStringType" returns="isinstance()" signature="isStringType(t)"><variable ilk="argument" name="t" /></scope><scope ilk="function" line="92" lineend="93" name="isTupleType" returns="isinstance()" signature="isTupleType(t)"><variable ilk="argument" name="t" /></scope><scope ilk="function" line="98" lineend="99" name="isImageType" returns="hasattr()" signature="isImageType(t)"><variable ilk="argument" name="t" /></scope><scope ilk="function" line="105" lineend="106" name="isDirectory" returns="isStringType()" signature="isDirectory(f)"><variable ilk="argument" name="f" /></scope><variable citdl="int" line="113" name="DEBUG" /><variable citdl="int" line="118" name="NONE" /><variable citdl="int" line="121" name="FLIP_LEFT_RIGHT" /><variable citdl="int" line="122" name="FLIP_TOP_BOTTOM" /><variable citdl="int" line="123" name="ROTATE_90" /><variable citdl="int" line="124" name="ROTATE_180" /><variable citdl="int" line="125" name="ROTATE_270" /><variable citdl="int" line="128" name="AFFINE" /><variable citdl="int" line="129" name="EXTENT" /><variable citdl="int" line="130" name="PERSPECTIVE" /><variable citdl="int" line="131" name="QUAD" /><variable citdl="int" line="132" name="MESH" /><variable citdl="int" line="136" name="NEAREST" /><variable citdl="int" line="137" name="ANTIALIAS" /><variable citdl="int" line="138" name="LINEAR" /><variable citdl="int" line="139" name="CUBIC" /><variable citdl="int" line="144" name="ORDERED" /><variable citdl="int" line="145" name="RASTERIZE" /><variable citdl="int" line="146" name="FLOYDSTEINBERG" /><variable citdl="int" line="149" name="WEB" /><variable citdl="int" line="150" name="ADAPTIVE" /><variable citdl="int" line="153" name="NORMAL" /><variable citdl="int" line="154" name="SEQUENCE" /><variable citdl="int" line="155" name="CONTAINER" /><variable citdl="list" line="160" name="ID" /><variable citdl="dict" line="161" name="OPEN" /><variable citdl="dict" line="162" name="MIME" /><variable citdl="dict" line="163" name="SAVE" /><variable citdl="dict" line="164" name="EXTENSION" /><variable attributes="protected" citdl="dict" line="169" name="_MODEINFO" /><variable citdl="str" line="192" name="byteorder" /><variable attributes="protected" citdl="str" line="201" name="_ENDIAN" /><variable attributes="protected" citdl="dict" line="205" name="_MODE_CONV" /><scope attributes="protected" ilk="function" line="219" lineend="225" name="_conv_type_shape" returns="tuple" signature="_conv_type_shape(im)"><variable ilk="argument" name="im" /><variable citdl="tuple" line="220" name="shape" /></scope><variable citdl="_MODEINFO.keys()" line="228" name="MODES" /><variable attributes="protected" citdl="tuple" line="233" name="_MAPMODES" /><scope ilk="function" line="244" lineend="245" name="getmodebase" signature="getmodebase(mode)"><variable ilk="argument" name="mode" /></scope><scope ilk="function" line="255" lineend="256" name="getmodetype" signature="getmodetype(mode)"><variable ilk="argument" name="mode" /></scope><scope ilk="function" line="269" lineend="270" name="getmodebandnames" signature="getmodebandnames(mode)"><variable ilk="argument" name="mode" /></scope><scope ilk="function" line="279" lineend="280" name="getmodebands" returns="len()" signature="getmodebands(mode)"><variable ilk="argument" name="mode" /></scope><variable attributes="protected" citdl="int" line="285" name="_initialized" /><scope doc="Load standard file format drivers." ilk="function" line="290" lineend="322" name="preinit" signature="preinit()"><import line="298" module="BmpImagePlugin" /><import line="302" module="GifImagePlugin" /><import line="306" module="JpegImagePlugin" /><import line="310" module="PpmImagePlugin" /><import line="314" module="PngImagePlugin" /><variable attributes="protected" citdl="int" line="322" name="_initialized" /></scope><scope doc="Load all file format drivers." ilk="function" line="328" lineend="366" name="init" returns="int" signature="init()"><variable citdl="dict" line="335" name="visited" /><variable citdl="sys.path" line="337" name="directories" /><variable citdl="os.path.abspath()" line="346" name="fullpath" /><variable line="351" name="e" /><variable line="351" name="f" /><variable attributes="protected" citdl="int" line="365" name="_initialized" /></scope><scope attributes="protected" ilk="function" line="371" lineend="385" name="_getdecoder" returns="apply()" signature="_getdecoder(mode, decoder_name, args, extra=())"><variable ilk="argument" name="mode" /><variable ilk="argument" name="decoder_name" /><variable citdl="tuple" ilk="argument" name="args" /><variable citdl="tuple" ilk="argument" name="extra" /><variable citdl="getattr()" line="381" name="decoder" /></scope><scope attributes="protected" ilk="function" line="387" lineend="401" name="_getencoder" returns="apply()" signature="_getencoder(mode, encoder_name, args, extra=())"><variable ilk="argument" name="mode" /><variable ilk="argument" name="encoder_name" /><variable citdl="tuple" ilk="argument" name="args" /><variable citdl="tuple" ilk="argument" name="extra" /><variable citdl="getattr()" line="397" name="encoder" /></scope><scope attributes="protected" ilk="class" line="407" lineend="411" name="_E"><variable attributes="__instancevar__" line="408" name="data" /><scope attributes="__ctor__" ilk="function" line="408" lineend="408" name="__init__" signature="_E(data)"><variable citdl="_E" ilk="argument" name="self" /><variable ilk="argument" name="data" /></scope><scope ilk="function" line="409" lineend="409" name="__coerce__" returns="tuple" signature="__coerce__(other)"><variable citdl="_E" ilk="argument" name="self" /><variable ilk="argument" name="other" /></scope><scope ilk="function" line="410" lineend="410" name="__add__" returns="_E" signature="__add__(other)"><variable citdl="_E" ilk="argument" name="self" /><variable ilk="argument" name="other" /></scope><scope ilk="function" line="411" lineend="411" name="__mul__" returns="_E" signature="__mul__(other)"><variable citdl="_E" ilk="argument" name="self" /><variable ilk="argument" name="other" /></scope></scope><scope attributes="protected" ilk="function" line="413" lineend="429" name="_getscaleoffset" returns="tuple" signature="_getscaleoffset(expr)"><variable ilk="argument" name="expr" /><variable citdl="list" line="414" name="stub" /><variable line="415" name="data" /></scope><scope ilk="class" line="444" lineend="1678" name="Image"><variable line="446" name="format" /><variable line="447" name="format_description" /><scope attributes="__ctor__" ilk="function" line="449" lineend="458" name="__init__" signature="Image()"><variable citdl="Image" ilk="argument" name="self" /></scope><variable attributes="__instancevar__" citdl="self.im.convert()" line="452" name="im" /><variable attributes="__instancevar__" citdl="str" line="453" name="mode" /><variable attributes="__instancevar__" citdl="tuple" line="454" name="size" /><variable attributes="__instancevar__" citdl="ImagePalette.raw()" line="455" name="palette" /><variable attributes="__instancevar__" citdl="dict" line="456" name="info" /><variable attributes="__instancevar__" citdl="int" line="457" name="category" /><variable attributes="__instancevar__" citdl="int" line="458" name="readonly" /><scope attributes="protected" ilk="function" line="460" lineend="475" name="_new" signature="_new(im)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="im" /><variable citdl="" line="461" name="new" /></scope><variable attributes="protected" citdl="Image._new" line="477" name="_makeself" /><scope attributes="protected" ilk="function" line="479" lineend="482" name="_copy" signature="_copy()"><variable citdl="Image" ilk="argument" name="self" /></scope><scope attributes="protected" ilk="function" line="484" lineend="494" name="_dump" returns="str" signature="_dump(file=None, format=None)"><import line="485" module="tempfile" /><variable citdl="Image" ilk="argument" name="self" /><variable citdl="tempfile.mktemp()" ilk="argument" name="file" /><variable ilk="argument" name="format" /></scope><scope ilk="function" line="496" lineend="500" name="__repr__" returns="tuple" signature="__repr__()"><variable citdl="Image" ilk="argument" name="self" /></scope><scope ilk="function" line="503" lineend="512" name="__getattr__" returns="dict" signature="__getattr__(name)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="name" /><variable citdl="dict" line="506" name="new" /><variable line="507" name="shape" /><variable line="507" name="typestr" /></scope><scope doc="Return image as a binary string" ilk="function" line="522" lineend="549" name="tostring" returns="string.join()" signature="tostring(encoder_name=&apos;raw&apos;, *args)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="str" ilk="argument" name="encoder_name" /><variable attributes="varargs" citdl="str" ilk="argument" name="args" /><variable citdl="_getencoder()" line="535" name="e" /><variable citdl="max()" line="538" name="bufsize" /><variable citdl="list" line="540" name="data" /><variable line="542" name="d" /><variable line="542" name="l" /><variable line="542" name="s" /></scope><scope doc="Return image as an XBM bitmap" ilk="function" line="559" lineend="568" name="tobitmap" returns="string.join()" signature="tobitmap(name=&apos;image&apos;)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="str" ilk="argument" name="name" /><variable citdl="tostring()" line="565" name="data" /></scope><scope doc="Load data to image from binary string" ilk="function" line="577" lineend="596" name="fromstring" signature="fromstring(data, decoder_name=&apos;raw&apos;, *args)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="data" /><variable citdl="str" ilk="argument" name="decoder_name" /><variable attributes="varargs" citdl="str" ilk="argument" name="args" /><variable citdl="_getdecoder()" line="589" name="d" /><variable citdl="d.decode()" line="591" name="s" /></scope><scope doc="Explicitly load pixel data." ilk="function" line="606" lineend="618" name="load" returns="self.im.pixel_access()" signature="load()"><variable citdl="Image" ilk="argument" name="self" /></scope><scope doc="Verify file contents." ilk="function" line="628" lineend="630" name="verify" signature="verify()"><variable citdl="Image" ilk="argument" name="self" /></scope><scope doc="Convert to other pixel format" ilk="function" line="664" lineend="706" name="convert" returns="Image._new()" signature="convert(mode=None, data=None, dither=None, palette=WEB, colors=256)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="str" ilk="argument" name="mode" /><variable ilk="argument" name="data" /><variable citdl="int" ilk="argument" name="dither" /><variable citdl="int" ilk="argument" name="palette" /><variable citdl="int" ilk="argument" name="colors" /><variable citdl="self.im.convert()" line="685" name="im" /></scope><scope ilk="function" line="708" lineend="732" name="quantize" returns="Image._makeself()" signature="quantize(colors=256, method=0, kmeans=0, palette=None)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="int" ilk="argument" name="colors" /><variable citdl="int" ilk="argument" name="method" /><variable citdl="int" ilk="argument" name="kmeans" /><variable ilk="argument" name="palette" /><variable citdl="self.im.convert()" line="728" name="im" /></scope><scope doc="Copy raster data" ilk="function" line="740" lineend="745" name="copy" returns="Image._new()" signature="copy()"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="self.im.copy()" line="744" name="im" /></scope><scope doc="Crop region from image" ilk="function" line="760" lineend="768" name="crop" returns="Image.copy()" signature="crop(box=None)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="box" /></scope><scope doc="Configure image decoder" ilk="function" line="783" lineend="786" name="draft" signature="draft(mode, size)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="mode" /><variable ilk="argument" name="size" /></scope><scope attributes="protected" ilk="function" line="788" lineend="792" name="_expand" returns="Image._new()" signature="_expand(xmargin, ymargin=None)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="xmargin" /><variable ilk="argument" name="ymargin" /></scope><scope doc="Apply environment filter to image" ilk="function" line="802" lineend="818" name="filter" returns="merge()" signature="filter(filter)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="filter()" ilk="argument" name="filter" /><variable citdl="list" line="815" name="ims" /></scope><scope doc="Get band names" ilk="function" line="826" lineend="829" name="getbands" signature="getbands()"><variable citdl="Image" ilk="argument" name="self" /></scope><scope doc="Get bounding box of actual data (non-zero pixels) in image" ilk="function" line="839" lineend="843" name="getbbox" returns="self.im.getbbox()" signature="getbbox()"><variable citdl="Image" ilk="argument" name="self" /></scope><scope doc="Get colors from image, up to given limit" ilk="function" line="853" lineend="866" name="getcolors" returns="list" signature="getcolors(maxcolors=256)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="int" ilk="argument" name="maxcolors" /><variable citdl="self.im.histogram()" line="858" name="h" /><variable citdl="list" line="859" name="out" /></scope><scope doc="Get image data as sequence object." ilk="function" line="884" lineend="890" name="getdata" returns="self.im.getband()" signature="getdata(band=None)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="band" /></scope><scope doc="Get min/max value" ilk="function" line="900" lineend="909" name="getextrema" returns="self.im.getextrema()" signature="getextrema()"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="list" line="905" name="extrema" /></scope><scope doc="Get PyCObject pointer to internal image memory" ilk="function" line="916" lineend="920" name="getim" returns="self.im.ptr" signature="getim()"><variable citdl="Image" ilk="argument" name="self" /></scope><scope doc="Get palette contents." ilk="function" line="929" lineend="936" name="getpalette" returns="map()" signature="getpalette()"><variable citdl="Image" ilk="argument" name="self" /></scope><scope doc="Get pixel value" ilk="function" line="946" lineend="950" name="getpixel" returns="self.im.getpixel()" signature="getpixel(xy)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="xy" /></scope><scope doc="Get projection to x and y axes" ilk="function" line="958" lineend="963" name="getprojection" returns="tuple" signature="getprojection()"><variable citdl="Image" ilk="argument" name="self" /><variable line="962" name="y" /><variable line="962" name="x" /></scope><scope doc="Take histogram of image" ilk="function" line="984" lineend="995" name="histogram" returns="self.im.histogram()" signature="histogram(mask=None, extrema=None)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="mask" /><variable citdl="getextrema()" ilk="argument" name="extrema" /></scope><scope doc="(deprecated) Offset image in horizontal and/or vertical direction" ilk="function" line="1010" lineend="1018" name="offset" returns="ImageChops.offset()" signature="offset(xoffset, yoffset=None)"><import line="1017" module="ImageChops" /><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="xoffset" /><variable ilk="argument" name="yoffset" /></scope><scope doc="Paste other image into region" ilk="function" line="1059" lineend="1103" name="paste" signature="paste(im, box=None, mask=None)"><import line="1084" module="ImageColor" /><variable citdl="Image" ilk="argument" name="self" /><variable citdl="ImageColor.getcolor()" ilk="argument" name="im" /><variable citdl="tuple" ilk="argument" name="box" /><variable ilk="argument" name="mask" /><variable citdl="im.size" line="1073" name="size" /></scope><scope doc="Map image through lookup table" ilk="function" line="1118" lineend="1139" name="point" returns="lut.point()" signature="point(lut, mode=None)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="self.im.bands" ilk="argument" name="lut" /><variable ilk="argument" name="mode" /><variable line="1130" name="scale" /><variable line="1130" name="offset" /></scope><scope doc="Set alpha layer" ilk="function" line="1150" lineend="1195" name="putalpha" signature="putalpha(alpha)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="alpha.convert()" ilk="argument" name="alpha" /><variable citdl="getmodebase()" line="1160" name="mode" /><variable citdl="self.im.convert()" line="1165" name="im" /><variable citdl="int" line="1174" name="band" /></scope><scope doc="Put data from a sequence object into an image." ilk="function" line="1208" lineend="1215" name="putdata" signature="putdata(data, scale=1.0, offset=0.0)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="data" /><variable citdl="float" ilk="argument" name="scale" /><variable citdl="float" ilk="argument" name="offset" /></scope><scope doc="Put palette data into an image." ilk="function" line="1228" lineend="1243" name="putpalette" signature="putpalette(data, rawmode=&apos;RGB&apos;)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="string.join()" ilk="argument" name="data" /><variable citdl="str" ilk="argument" name="rawmode" /><variable citdl="ImagePalette.raw()" line="1235" name="palette" /></scope><scope doc="Set pixel value" ilk="function" line="1260" lineend="1267" name="putpixel" returns="self.im.putpixel()" signature="putpixel(xy, value)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="xy" /><variable ilk="argument" name="value" /></scope><scope doc="Resize image" ilk="function" line="1284" lineend="1304" name="resize" returns="Image._new()" signature="resize(size, resample=NEAREST)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="size" /><variable citdl="int" ilk="argument" name="resample" /><variable citdl="self.im.stretch()" line="1298" name="im" /></scope><scope doc="Rotate image.  Angle given as degrees counter-clockwise." ilk="function" line="1325" lineend="1364" name="rotate" returns="Image._new()" signature="rotate(angle, resample=NEAREST, expand=0)"><import line="1329" module="math" /><variable citdl="Image" ilk="argument" name="self" /><variable citdl="math.pi" ilk="argument" name="angle" /><variable citdl="int" ilk="argument" name="resample" /><variable citdl="int" ilk="argument" name="expand" /><variable citdl="list" line="1331" name="matrix" /><scope ilk="function" line="1335" lineend="1336" name="transform" returns="tuple" signature="transform(x, y, (&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos;)=matrix)"><variable ilk="argument" name="x" /><variable ilk="argument" name="y" /><variable ilk="argument" name="a" /><variable ilk="argument" name="b" /><variable ilk="argument" name="c" /><variable ilk="argument" name="d" /><variable ilk="argument" name="e" /><variable ilk="argument" name="f" /></scope><variable citdl="list" line="1340" name="xx" /><variable citdl="list" line="1341" name="yy" /><variable line="1343" name="y" /><variable line="1343" name="x" /><variable citdl="int()" line="1346" name="w" /><variable citdl="int()" line="1347" name="h" /></scope><scope doc="Save image to file or stream" ilk="function" line="1394" lineend="1443" name="save" signature="save(fp, format=None, **params)"><import line="1432" module="__builtin__" /><variable citdl="Image" ilk="argument" name="self" /><variable citdl="__builtin__.open()" ilk="argument" name="fp" /><variable ilk="argument" name="format" /><variable attributes="kwargs" ilk="argument" name="params" /><variable citdl="fp.name" line="1398" name="filename" /><variable citdl="string.lower()" line="1413" name="ext" /><variable line="1426" name="save_handler" /><variable citdl="int" line="1434" name="close" /></scope><variable attributes="__instancevar__" line="1408" name="encoderinfo" /><variable attributes="__instancevar__" citdl="tuple" line="1409" name="encoderconfig" /><scope doc="Seek to given frame in sequence file" ilk="function" line="1459" lineend="1464" name="seek" signature="seek(frame)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="frame" /></scope><scope doc="Display image (for debug purposes only)" ilk="function" line="1480" lineend="1483" name="show" signature="show(title=None, command=None)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="title" /><variable ilk="argument" name="command" /></scope><scope doc="Split image into bands" ilk="function" line="1494" lineend="1504" name="split" returns="tuple()" signature="split()"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="list" line="1499" name="ims" /></scope><scope doc="Return current frame number" ilk="function" line="1512" lineend="1515" name="tell" returns="int" signature="tell()"><variable citdl="Image" ilk="argument" name="self" /></scope><scope doc="Create thumbnail representation (modifies image in place)" ilk="function" line="1542" lineend="1572" name="thumbnail" signature="thumbnail(size, resample=NEAREST)"><variable citdl="Image" ilk="argument" name="self" /><variable citdl="tuple" ilk="argument" name="size" /><variable citdl="int" ilk="argument" name="resample" /><variable citdl="max()" line="1550" name="y" /><variable citdl="max()" line="1550" name="x" /><variable citdl="resize()" line="1562" name="im" /></scope><scope doc="Transform image" ilk="function" line="1599" lineend="1617" name="transform" returns="new()" signature="transform(size, method, data=None, resample=NEAREST, fill=1)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="size" /><variable ilk="argument" name="method" /><variable ilk="argument" name="data" /><variable citdl="int" ilk="argument" name="resample" /><variable citdl="int" ilk="argument" name="fill" /><variable citdl="new()" line="1609" name="im" /></scope><scope attributes="private" ilk="function" line="1619" lineend="1665" name="__transformer" signature="__transformer(box, image, method, data, resample=NEAREST, fill=1)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="box" /><variable ilk="argument" name="image" /><variable citdl="int" ilk="argument" name="method" /><variable citdl="tuple" ilk="argument" name="data" /><variable citdl="int" ilk="argument" name="resample" /><variable citdl="int" ilk="argument" name="fill" /><variable line="1624" name="w" /><variable line="1625" name="h" /><variable citdl="float()" line="1634" name="xs" /><variable citdl="float()" line="1635" name="ys" /><variable citdl="list" line="1646" name="sw" /><variable citdl="list" line="1646" name="ne" /><variable citdl="list" line="1646" name="se" /><variable citdl="list" line="1646" name="nw" /><variable citdl="float" line="1647" name="As" /><variable citdl="float" line="1647" name="At" /></scope><scope doc="Transpose image (flip or rotate in 90 degree steps)" ilk="function" line="1673" lineend="1678" name="transpose" returns="Image._new()" signature="transpose(method)"><variable citdl="Image" ilk="argument" name="self" /><variable ilk="argument" name="method" /><variable citdl="self.im.transpose()" line="1677" name="im" /></scope></scope><scope attributes="protected" classrefs="Image" ilk="class" line="1683" lineend="1710" name="_ImageCrop"><scope attributes="__ctor__" ilk="function" line="1685" lineend="1700" name="__init__" signature="_ImageCrop(im, box)"><variable citdl="_ImageCrop" ilk="argument" name="self" /><variable ilk="argument" name="im" /><variable ilk="argument" name="box" /><variable citdl="x0" line="1691" name="x1" /><variable citdl="y0" line="1693" name="y1" /></scope><variable attributes="__instancevar__" citdl="im.mode" line="1695" name="mode" /><variable attributes="__instancevar__" citdl="tuple" line="1696" name="size" /><variable attributes="private __instancevar__" citdl="tuple" line="1698" name="__crop" /><variable attributes="__instancevar__" citdl="self.im.crop()" line="1700" name="im" /><scope ilk="function" line="1702" lineend="1710" name="load" returns="self.im.pixel_access()" signature="load()"><variable citdl="_ImageCrop" ilk="argument" name="self" /></scope></scope><scope ilk="class" line="1718" lineend="1720" name="ImagePointHandler" /><scope ilk="class" line="1722" lineend="1724" name="ImageTransformHandler" /><scope attributes="protected" doc="Create greyscale wedge (for debugging only)" ilk="function" line="1732" lineend="1735" name="_wedge" signature="_wedge()" /><scope doc="Create a new image" ilk="function" line="1750" lineend="1763" name="new" signature="new(mode, size, color=0)"><import line="1760" module="ImageColor" /><variable ilk="argument" name="mode" /><variable ilk="argument" name="size" /><variable citdl="int" ilk="argument" name="color" /></scope><scope doc="Load image from string" ilk="function" line="1786" lineend="1798" name="fromstring" returns="new()" signature="fromstring(mode, size, data, decoder_name=&apos;raw&apos;, *args)"><variable ilk="argument" name="mode" /><variable ilk="argument" name="size" /><variable ilk="argument" name="data" /><variable citdl="str" ilk="argument" name="decoder_name" /><variable attributes="varargs" ilk="argument" name="args" /><variable citdl="new()" line="1796" name="im" /></scope><scope doc="Load image from string or buffer" ilk="function" line="1833" lineend="1858" name="frombuffer" returns="im._new()" signature="frombuffer(mode, size, data, decoder_name=&apos;raw&apos;, *args)"><variable ilk="argument" name="mode" /><variable ilk="argument" name="size" /><variable ilk="argument" name="data" /><variable citdl="str" ilk="argument" name="decoder_name" /><variable attributes="varargs" citdl="tuple" ilk="argument" name="args" /><variable citdl="im._new()" line="1851" name="im" /></scope><scope ilk="function" line="1872" lineend="1902" name="fromarray" returns="frombuffer()" signature="fromarray(obj, mode=None)"><variable citdl="obj.tostring()" ilk="argument" name="obj" /><variable ilk="argument" name="mode" /><variable citdl="obj.__array_interface__" line="1873" name="arr" /><variable line="1874" name="shape" /><variable citdl="len()" line="1875" name="ndim" /><variable line="1877" name="strides" /><variable citdl="tuple" line="1882" name="typekey" /><variable line="1888" name="rawmode" /><variable citdl="int" line="1890" name="ndmax" /><variable citdl="tuple" line="1898" name="size" /></scope><variable attributes="protected" citdl="dict" line="1904" name="_fromarray_typemap" /><scope doc="Open an image file, without loading the raster data" ilk="function" line="1943" lineend="1980" name="open" returns="factory()" signature="open(fp, mode=&apos;r&apos;)"><import line="1950" module="__builtin__" /><variable citdl="__builtin__.open()" ilk="argument" name="fp" /><variable citdl="str" ilk="argument" name="mode" /><variable citdl="str" line="1951" name="filename" /><variable citdl="fp.read()" line="1956" name="prefix" /></scope><scope doc="Interpolate between images." ilk="function" line="2003" lineend="2008" name="blend" returns="im1._new()" signature="blend(im1, im2, alpha)"><variable ilk="argument" name="im1" /><variable ilk="argument" name="im2" /><variable ilk="argument" name="alpha" /></scope><scope doc="Create composite image by blending images using a transparency mask" ilk="function" line="2021" lineend="2026" name="composite" returns="image2.copy()" signature="composite(image1, image2, mask)"><variable ilk="argument" name="image1" /><variable ilk="argument" name="image2" /><variable ilk="argument" name="mask" /><variable citdl="image2.copy()" line="2024" name="image" /></scope><scope doc="Evaluate image expression" ilk="function" line="2040" lineend="2043" name="eval" returns="image.point()" signature="eval(image, *args)"><variable ilk="argument" name="image" /><variable attributes="varargs" ilk="argument" name="args" /></scope><scope doc="Merge a set of single band images into a new multiband image." ilk="function" line="2054" lineend="2068" name="merge" signature="merge(mode, bands)"><variable ilk="argument" name="mode" /><variable ilk="argument" name="bands" /><variable citdl="core.new()" line="2064" name="im" /></scope><scope ilk="function" line="2082" lineend="2085" name="register_open" signature="register_open(id, factory, accept=None)"><variable citdl="string.upper()" ilk="argument" name="id" /><variable ilk="argument" name="factory" /><variable ilk="argument" name="accept" /></scope><scope ilk="function" line="2094" lineend="2095" name="register_mime" signature="register_mime(id, mimetype)"><variable ilk="argument" name="id" /><variable ilk="argument" name="mimetype" /></scope><scope ilk="function" line="2104" lineend="2105" name="register_save" signature="register_save(id, driver)"><variable ilk="argument" name="id" /><variable ilk="argument" name="driver" /></scope><scope ilk="function" line="2114" lineend="2115" name="register_extension" signature="register_extension(id, extension)"><variable ilk="argument" name="id" /><variable ilk="argument" name="extension" /></scope><scope attributes="protected" ilk="function" line="2121" lineend="2123" name="_show" signature="_show(image, **options)"><variable ilk="argument" name="image" /><variable attributes="kwargs" ilk="argument" name="options" /></scope><scope attributes="protected" ilk="function" line="2125" lineend="2127" name="_showxv" signature="_showxv(image, title=None, **options)"><import line="2126" module="ImageShow" /><variable ilk="argument" name="image" /><variable ilk="argument" name="title" /><variable attributes="kwargs" ilk="argument" name="options" /></scope></scope>