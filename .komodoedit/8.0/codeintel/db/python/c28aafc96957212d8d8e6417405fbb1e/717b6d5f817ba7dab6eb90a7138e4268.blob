<scope ilk="blob" lang="Python" name="ImageOps" src="/usr/lib/python2.7/dist-packages/PIL/ImageOps.py"><import line="20" module="Image" /><import line="21" module="operator" /><scope attributes="protected" ilk="function" line="34" lineend="42" name="_border" returns="tuple" signature="_border(border)"><variable ilk="argument" name="border" /><variable line="41" name="left" /></scope><scope attributes="protected" ilk="function" line="44" lineend="48" name="_color" returns="ImageColor.getcolor()" signature="_color(color, mode)"><import line="46" module="ImageColor" /><variable citdl="ImageColor.getcolor()" ilk="argument" name="color" /><variable ilk="argument" name="mode" /></scope><scope attributes="protected" ilk="function" line="50" lineend="59" name="_lut" returns="image.point()" signature="_lut(image, lut)"><variable ilk="argument" name="image" /><variable ilk="argument" name="lut" /></scope><scope doc="Maximize image contrast, based on histogram" ilk="function" line="76" lineend="138" name="autocontrast" returns="_lut()" signature="autocontrast(image, cutoff=0, ignore=None)"><variable ilk="argument" name="image" /><variable citdl="int" ilk="argument" name="cutoff" /><variable ilk="argument" name="ignore" /><variable citdl="image.histogram()" line="78" name="histogram" /><variable citdl="list" line="79" name="lut" /><variable citdl="list" line="81" name="h" /><variable citdl="int" line="93" name="n" /><variable citdl="int" line="97" name="cut" /><variable citdl="lo" line="129" name="scale" /><variable citdl="lo" line="130" name="offset" /><variable citdl="int" line="132" name="ix" /></scope><scope doc="Colorize a grayscale image" ilk="function" line="151" lineend="162" name="colorize" returns="_lut()" signature="colorize(image, black, white)"><variable citdl="image.convert()" ilk="argument" name="image" /><variable citdl="_color()" ilk="argument" name="black" /><variable citdl="_color()" ilk="argument" name="white" /><variable citdl="list" line="156" name="blue" /><variable citdl="list" line="156" name="green" /><variable citdl="list" line="156" name="red" /></scope><scope doc="Crop border off image" ilk="function" line="173" lineend="177" name="crop" returns="image.crop()" signature="crop(image, border=0)"><variable ilk="argument" name="image" /><variable citdl="int" ilk="argument" name="border" /><variable line="175" name="top" /><variable line="175" name="right" /><variable line="175" name="left" /><variable line="175" name="bottom" /></scope><scope doc="Deform image using the given deformer" ilk="function" line="189" lineend="192" name="deform" returns="image.transform()" signature="deform(image, deformer, resample=Image.BILINEAR)"><variable ilk="argument" name="image" /><variable ilk="argument" name="deformer" /><variable citdl="Image.BILINEAR" ilk="argument" name="resample" /></scope><scope doc="Equalize image histogram" ilk="function" line="205" lineend="224" name="equalize" returns="_lut()" signature="equalize(image, mask=None)"><variable citdl="image.convert()" ilk="argument" name="image" /><variable ilk="argument" name="mask" /><variable citdl="image.histogram()" line="209" name="h" /><variable citdl="list" line="210" name="lut" /><variable citdl="filter()" line="212" name="histo" /><variable citdl="reduce()" line="216" name="step" /><variable citdl="reduce()" line="220" name="n" /></scope><scope doc="Add border to image" ilk="function" line="234" lineend="241" name="expand" returns="Image.new()" signature="expand(image, border=0, fill=0)"><variable ilk="argument" name="image" /><variable citdl="int" ilk="argument" name="border" /><variable citdl="int" ilk="argument" name="fill" /><variable line="236" name="right" /><variable line="236" name="bottom" /><variable line="236" name="top" /><variable line="236" name="left" /><variable line="237" name="width" /><variable line="238" name="height" /><variable citdl="Image.new()" line="239" name="out" /></scope><scope doc="This method returns a sized and cropped version of the image,&#xA;cropped to the aspect ratio and size that you request." ilk="function" line="266" lineend="333" name="fit" returns="out.resize()" signature="fit(image, size, method=Image.NEAREST, bleed=0.0, centering=(0.5, 0.5))"><variable ilk="argument" name="image" /><variable ilk="argument" name="size" /><variable citdl="Image.NEAREST" ilk="argument" name="method" /><variable citdl="float" ilk="argument" name="bleed" /><variable citdl="list" ilk="argument" name="centering" /><variable citdl="tuple" line="292" name="bleedPixels" /><variable citdl="tuple" line="297" name="liveArea" /><variable citdl="tuple" line="302" name="liveSize" /><variable citdl="float()" line="305" name="liveAreaAspectRatio" /><variable citdl="float()" line="308" name="aspectRatio" /><variable citdl="int()" line="313" name="cropWidth" /><variable citdl="int()" line="314" name="cropHeight" /><variable citdl="int" line="321" name="leftSide" /><variable citdl="int" line="324" name="topSide" /><variable citdl="image.crop()" line="328" name="out" /></scope><scope doc="Flip image vertically" ilk="function" line="341" lineend="343" name="flip" returns="image.transpose()" signature="flip(image)"><variable ilk="argument" name="image" /></scope><scope doc="Convert to grayscale" ilk="function" line="351" lineend="353" name="grayscale" returns="image.convert()" signature="grayscale(image)"><variable ilk="argument" name="image" /></scope><scope doc="Invert image (negate)" ilk="function" line="361" lineend="366" name="invert" returns="_lut()" signature="invert(image)"><variable ilk="argument" name="image" /><variable citdl="list" line="363" name="lut" /></scope><scope doc="Flip image horizontally" ilk="function" line="374" lineend="376" name="mirror" returns="image.transpose()" signature="mirror(image)"><variable ilk="argument" name="image" /></scope><scope doc="Reduce the number of bits per color channel" ilk="function" line="385" lineend="391" name="posterize" returns="_lut()" signature="posterize(image, bits)"><variable ilk="argument" name="image" /><variable ilk="argument" name="bits" /><variable citdl="list" line="387" name="lut" /><variable citdl="int" line="388" name="mask" /></scope><scope doc="Invert all values above threshold" ilk="function" line="400" lineend="408" name="solarize" returns="_lut()" signature="solarize(image, threshold=128)"><variable ilk="argument" name="image" /><variable citdl="int" ilk="argument" name="threshold" /><variable citdl="list" line="402" name="lut" /></scope><scope ilk="function" line="413" lineend="421" name="gaussian_blur" returns="im.im.gaussian_blur()" signature="PIL_usm.gblur(im, [radius])"><variable ilk="argument" name="im" /><variable citdl="float" ilk="argument" name="radius" /></scope><variable citdl="gaussian_blur" line="423" name="gblur" /><scope ilk="function" line="425" lineend="437" name="unsharp_mask" returns="im.im.unsharp_mask()" signature="PIL_usm.usm(im, [radius, percent, threshold])"><variable ilk="argument" name="im" /><variable citdl="float" ilk="argument" name="radius" /><variable citdl="int" ilk="argument" name="percent" /><variable citdl="int" ilk="argument" name="threshold" /></scope><variable citdl="unsharp_mask" line="439" name="usm" /></scope>