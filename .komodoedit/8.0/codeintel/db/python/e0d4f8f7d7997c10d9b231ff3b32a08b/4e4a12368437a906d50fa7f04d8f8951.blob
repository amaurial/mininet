<scope ilk="blob" lang="Python" name="__init__" src="/usr/lib/python2.7/dist-packages/yaml/__init__.py"><import line="2" module="error" symbol="*" /><import line="4" module="tokens" symbol="*" /><import line="5" module="events" symbol="*" /><import line="6" module="nodes" symbol="*" /><import line="8" module="loader" symbol="*" /><import line="9" module="dumper" symbol="*" /><import line="14" module="cyaml" symbol="*" /><variable citdl="str" line="11" name="__version__" /><variable citdl="False" line="15" name="__with_libyaml__" /><scope doc="Scan a YAML stream and produce scanning tokens." ilk="function" line="19" lineend="28" name="scan" signature="scan(stream, Loader=Loader)"><variable ilk="argument" name="stream" /><variable citdl="Loader" ilk="argument" name="Loader" /><variable citdl="Loader()" line="23" name="loader" /></scope><scope doc="Parse a YAML stream and produce parsing events." ilk="function" line="30" lineend="39" name="parse" signature="parse(stream, Loader=Loader)"><variable ilk="argument" name="stream" /><variable citdl="Loader" ilk="argument" name="Loader" /><variable citdl="Loader()" line="34" name="loader" /></scope><scope doc="Parse the first YAML document in a stream&#xA;and produce the corresponding representation tree." ilk="function" line="41" lineend="50" name="compose" returns="loader.get_single_node()" signature="compose(stream, Loader=Loader)"><variable ilk="argument" name="stream" /><variable citdl="Loader" ilk="argument" name="Loader" /><variable citdl="Loader()" line="46" name="loader" /></scope><scope doc="Parse all YAML documents in a stream&#xA;and produce corresponding representation trees." ilk="function" line="52" lineend="62" name="compose_all" signature="compose_all(stream, Loader=Loader)"><variable ilk="argument" name="stream" /><variable citdl="Loader" ilk="argument" name="Loader" /><variable citdl="Loader()" line="57" name="loader" /></scope><scope doc="Parse the first YAML document in a stream&#xA;and produce the corresponding Python object." ilk="function" line="64" lineend="73" name="load" returns="loader.get_single_data()" signature="load(stream, Loader=Loader)"><variable ilk="argument" name="stream" /><variable citdl="Loader" ilk="argument" name="Loader" /><variable citdl="Loader()" line="69" name="loader" /></scope><scope doc="Parse all YAML documents in a stream&#xA;and produce corresponding Python objects." ilk="function" line="75" lineend="85" name="load_all" signature="load_all(stream, Loader=Loader)"><variable ilk="argument" name="stream" /><variable citdl="Loader" ilk="argument" name="Loader" /><variable citdl="Loader()" line="80" name="loader" /></scope><scope doc="Parse the first YAML document in a stream&#xA;and produce the corresponding Python object.&#xA;Resolve only basic YAML tags." ilk="function" line="87" lineend="93" name="safe_load" returns="load()" signature="safe_load(stream)"><variable ilk="argument" name="stream" /></scope><scope doc="Parse all YAML documents in a stream&#xA;and produce corresponding Python objects.&#xA;Resolve only basic YAML tags." ilk="function" line="95" lineend="101" name="safe_load_all" returns="load_all()" signature="safe_load_all(stream)"><variable ilk="argument" name="stream" /></scope><scope doc="Emit YAML parsing events into a stream.&#xA;If stream is None, return the produced string instead." ilk="function" line="103" lineend="123" name="emit" returns="emit.getvalue()" signature="emit(events, stream=None, Dumper=Dumper, canonical=None, indent=None, width=None, allow_unicode=None, line_break=None)"><import line="112" module="StringIO" symbol="StringIO" /><variable ilk="argument" name="events" /><variable citdl="StringIO()" ilk="argument" name="stream" /><variable citdl="Dumper" ilk="argument" name="Dumper" /><variable ilk="argument" name="canonical" /><variable ilk="argument" name="indent" /><variable ilk="argument" name="width" /><variable ilk="argument" name="allow_unicode" /><variable ilk="argument" name="line_break" /><variable citdl="stream.getvalue" line="110" name="getvalue" /><variable citdl="Dumper()" line="115" name="dumper" /></scope><scope doc="Serialize a sequence of representation trees into a YAML stream.&#xA;If stream is None, return the produced string instead." ilk="function" line="125" lineend="154" name="serialize_all" returns="serialize_all.getvalue()" signature="serialize_all(nodes, stream=None, Dumper=Dumper, canonical=None, indent=None, width=None, allow_unicode=None, line_break=None, encoding=&apos;utf-8&apos;, explicit_start=None, explicit_end=None, version=None, tags=None)"><import line="137" module="StringIO" symbol="StringIO" /><import line="139" module="cStringIO" symbol="StringIO" /><variable ilk="argument" name="nodes" /><variable citdl="StringIO()" ilk="argument" name="stream" /><variable citdl="Dumper" ilk="argument" name="Dumper" /><variable ilk="argument" name="canonical" /><variable ilk="argument" name="indent" /><variable ilk="argument" name="width" /><variable ilk="argument" name="allow_unicode" /><variable ilk="argument" name="line_break" /><variable citdl="str" ilk="argument" name="encoding" /><variable ilk="argument" name="explicit_start" /><variable ilk="argument" name="explicit_end" /><variable ilk="argument" name="version" /><variable ilk="argument" name="tags" /><variable citdl="stream.getvalue" line="134" name="getvalue" /><variable citdl="Dumper()" line="142" name="dumper" /></scope><scope doc="Serialize a representation tree into a YAML stream.&#xA;If stream is None, return the produced string instead." ilk="function" line="156" lineend="161" name="serialize" returns="serialize_all()" signature="serialize(node, stream=None, Dumper=Dumper, **kwds)"><variable ilk="argument" name="node" /><variable ilk="argument" name="stream" /><variable citdl="Dumper" ilk="argument" name="Dumper" /><variable attributes="kwargs" ilk="argument" name="kwds" /></scope><scope doc="Serialize a sequence of Python objects into a YAML stream.&#xA;If stream is None, return the produced string instead." ilk="function" line="163" lineend="195" name="dump_all" returns="dump_all.getvalue()" signature="dump_all(documents, stream=None, Dumper=Dumper, default_style=None, default_flow_style=None, canonical=None, indent=None, width=None, allow_unicode=None, line_break=None, encoding=&apos;utf-8&apos;, explicit_start=None, explicit_end=None, version=None, tags=None)"><import line="176" module="StringIO" symbol="StringIO" /><import line="178" module="cStringIO" symbol="StringIO" /><variable ilk="argument" name="documents" /><variable citdl="StringIO()" ilk="argument" name="stream" /><variable citdl="Dumper" ilk="argument" name="Dumper" /><variable ilk="argument" name="default_style" /><variable ilk="argument" name="default_flow_style" /><variable ilk="argument" name="canonical" /><variable ilk="argument" name="indent" /><variable ilk="argument" name="width" /><variable ilk="argument" name="allow_unicode" /><variable ilk="argument" name="line_break" /><variable citdl="str" ilk="argument" name="encoding" /><variable ilk="argument" name="explicit_start" /><variable ilk="argument" name="explicit_end" /><variable ilk="argument" name="version" /><variable ilk="argument" name="tags" /><variable citdl="stream.getvalue" line="173" name="getvalue" /><variable citdl="Dumper()" line="181" name="dumper" /></scope><scope doc="Serialize a Python object into a YAML stream.&#xA;If stream is None, return the produced string instead." ilk="function" line="197" lineend="202" name="dump" returns="dump_all()" signature="dump(data, stream=None, Dumper=Dumper, **kwds)"><variable ilk="argument" name="data" /><variable ilk="argument" name="stream" /><variable citdl="Dumper" ilk="argument" name="Dumper" /><variable attributes="kwargs" ilk="argument" name="kwds" /></scope><scope doc="Serialize a sequence of Python objects into a YAML stream.&#xA;Produce only basic YAML tags.&#xA;If stream is None, return the produced string instead." ilk="function" line="204" lineend="210" name="safe_dump_all" returns="dump_all()" signature="safe_dump_all(documents, stream=None, **kwds)"><variable ilk="argument" name="documents" /><variable ilk="argument" name="stream" /><variable attributes="kwargs" ilk="argument" name="kwds" /></scope><scope doc="Serialize a Python object into a YAML stream.&#xA;Produce only basic YAML tags.&#xA;If stream is None, return the produced string instead." ilk="function" line="212" lineend="218" name="safe_dump" returns="dump_all()" signature="safe_dump(data, stream=None, **kwds)"><variable ilk="argument" name="data" /><variable ilk="argument" name="stream" /><variable attributes="kwargs" ilk="argument" name="kwds" /></scope><scope doc="Add an implicit scalar detector.&#xA;If an implicit scalar value matches the given regexp,&#xA;the corresponding tag is assigned to the scalar.&#xA;first is a sequence of possible initial characters or None." ilk="function" line="220" lineend="229" name="add_implicit_resolver" signature="add_implicit_resolver(tag, regexp, first=None, Loader=Loader, Dumper=Dumper)"><variable ilk="argument" name="tag" /><variable ilk="argument" name="regexp" /><variable ilk="argument" name="first" /><variable citdl="Loader" ilk="argument" name="Loader" /><variable citdl="Dumper" ilk="argument" name="Dumper" /></scope><scope doc="Add a path based resolver for the given tag.&#xA;A path is a list of keys that forms a path&#xA;to a node in the representation tree.&#xA;Keys can be string values, integers, or None." ilk="function" line="231" lineend="239" name="add_path_resolver" signature="add_path_resolver(tag, path, kind=None, Loader=Loader, Dumper=Dumper)"><variable ilk="argument" name="tag" /><variable ilk="argument" name="path" /><variable ilk="argument" name="kind" /><variable citdl="Loader" ilk="argument" name="Loader" /><variable citdl="Dumper" ilk="argument" name="Dumper" /></scope><scope doc="Add a constructor for the given tag.&#xA;Constructor is a function that accepts a Loader instance&#xA;and a node object and produces the corresponding Python object." ilk="function" line="241" lineend="247" name="add_constructor" signature="add_constructor(tag, constructor, Loader=Loader)"><variable ilk="argument" name="tag" /><variable ilk="argument" name="constructor" /><variable citdl="Loader" ilk="argument" name="Loader" /></scope><scope doc="Add a multi-constructor for the given tag prefix.&#xA;Multi-constructor is called for a node if its tag starts with tag_prefix.&#xA;Multi-constructor accepts a Loader instance, a tag suffix,&#xA;and a node object and produces the corresponding Python object." ilk="function" line="249" lineend="256" name="add_multi_constructor" signature="add_multi_constructor(tag_prefix, multi_constructor, Loader=Loader)"><variable ilk="argument" name="tag_prefix" /><variable ilk="argument" name="multi_constructor" /><variable citdl="Loader" ilk="argument" name="Loader" /></scope><scope doc="Add a representer for the given type.&#xA;Representer is a function accepting a Dumper instance&#xA;and an instance of the given data type&#xA;and producing the corresponding representation node." ilk="function" line="258" lineend="265" name="add_representer" signature="add_representer(data_type, representer, Dumper=Dumper)"><variable ilk="argument" name="data_type" /><variable ilk="argument" name="representer" /><variable citdl="Dumper" ilk="argument" name="Dumper" /></scope><scope doc="Add a representer for the given type.&#xA;Multi-representer is a function accepting a Dumper instance&#xA;and an instance of the given data type or subtype&#xA;and producing the corresponding representation node." ilk="function" line="267" lineend="274" name="add_multi_representer" signature="add_multi_representer(data_type, multi_representer, Dumper=Dumper)"><variable ilk="argument" name="data_type" /><variable ilk="argument" name="multi_representer" /><variable citdl="Dumper" ilk="argument" name="Dumper" /></scope><scope classrefs="type" doc="The metaclass for YAMLObject." ilk="class" line="276" lineend="284" name="YAMLObjectMetaclass"><scope attributes="__ctor__" ilk="function" line="280" lineend="284" name="__init__" signature="YAMLObjectMetaclass(name, bases, kwds)"><variable citdl="YAMLObjectMetaclass" ilk="argument" name="cls" /><variable ilk="argument" name="name" /><variable ilk="argument" name="bases" /><variable ilk="argument" name="kwds" /></scope></scope><scope classrefs="object" doc="An object that can dump itself to a YAML stream&#xA;and load itself from a YAML stream." ilk="class" line="286" lineend="314" name="YAMLObject"><variable citdl="YAMLObjectMetaclass" line="292" name="__metaclass__" /><variable citdl="tuple" line="293" name="__slots__" /><variable citdl="Loader" line="295" name="yaml_loader" /><variable citdl="Dumper" line="296" name="yaml_dumper" /><variable line="298" name="yaml_tag" /><variable line="299" name="yaml_flow_style" /><scope doc="Convert a representation node to a Python object." ilk="function" line="306" lineend="305" name="from_yaml" returns="loader.construct_yaml_object()" signature="from_yaml(loader, node)"><variable citdl="YAMLObject" ilk="argument" name="cls" /><variable ilk="argument" name="loader" /><variable ilk="argument" name="node" /></scope><scope doc="Convert a Python object to a representation node." ilk="function" line="314" lineend="313" name="to_yaml" returns="dumper.represent_yaml_object()" signature="to_yaml(dumper, data)"><variable citdl="YAMLObject" ilk="argument" name="cls" /><variable ilk="argument" name="dumper" /><variable ilk="argument" name="data" /></scope></scope></scope>