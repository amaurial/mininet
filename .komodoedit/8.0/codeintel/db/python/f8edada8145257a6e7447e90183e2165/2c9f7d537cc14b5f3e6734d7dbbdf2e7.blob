<scope doc="A shortest-path forwarding application." ilk="blob" lang="Python" name="l2_multi" src="/home/mininet/new_pox/pox/pox/forwarding/l2_multi.py"><import line="33" module="pox.core" symbol="core" /><import alias="of" line="34" module="pox.openflow.libopenflow_01" /><import line="35" module="pox.lib.revent" symbol="*" /><import line="36" module="pox.lib.recoco" symbol="Timer" /><import line="37" module="collections" symbol="defaultdict" /><import line="38" module="pox.openflow.discovery" symbol="Discovery" /><import line="39" module="pox.lib.util" symbol="dpid_to_str" /><import line="40" module="time" /><variable citdl="core.getLogger()" line="42" name="log" /><variable citdl="defaultdict()" line="45" name="adjacency" /><variable citdl="dict" line="48" name="switches" /><variable citdl="dict" line="51" name="mac_map" /><variable citdl="defaultdict()" line="54" name="path_map" /><variable citdl="dict" line="57" name="waiting_paths" /><variable citdl="int" line="60" name="FLOOD_HOLDDOWN" /><variable citdl="int" line="63" name="FLOW_IDLE_TIMEOUT" /><variable citdl="int" line="64" name="FLOW_HARD_TIMEOUT" /><variable citdl="int" line="67" name="PATH_SETUP_TIME" /><scope attributes="protected" doc="Essentially Floyd-Warshall algorithm" ilk="function" line="70" lineend="103" name="_calc_paths" signature="_calc_paths()"><scope ilk="function" line="75" lineend="82" name="dump" signature="dump()"><variable citdl="str" line="78" name="a" /></scope><variable citdl="switches.values()" line="84" name="sws" /><variable line="100" name="ikj_dist" /></scope><scope attributes="protected" doc="Get a raw path (just a list of nodes to traverse)" ilk="function" line="109" lineend="124" name="_get_raw_path" returns="list" signature="_get_raw_path(src, dst)"><variable ilk="argument" name="src" /><variable ilk="argument" name="dst" /><variable line="119" name="intermediate" /></scope><scope attributes="protected" doc="Make sure that a path is actually a string of nodes with connected ports&#xA;&#xA;returns True if path is valid" ilk="function" line="127" lineend="138" name="_check_path" returns="bool" signature="_check_path(p)"><variable ilk="argument" name="p" /></scope><scope attributes="protected" doc="Gets a cooked path -- a list of (node,in_port,out_port)" ilk="function" line="141" lineend="164" name="_get_path" returns="list" signature="_get_path(src, dst, first_port, final_port)"><variable ilk="argument" name="src" /><variable ilk="argument" name="dst" /><variable ilk="argument" name="first_port" /><variable ilk="argument" name="final_port" /><variable citdl="list" line="147" name="path" /><variable citdl="list" line="154" name="r" /><variable line="155" name="in_port" /><variable line="157" name="out_port" /></scope><scope classrefs="object" doc="A path which is waiting for its path to be established" ilk="class" line="167" lineend="221" name="WaitingPath"><scope attributes="__ctor__" doc="xids is a sequence of (dpid,xid)&#xA;first_switch is the DPID where the packet came from&#xA;packet is something that can be sent in a packet_out" ilk="function" line="171" lineend="184" name="__init__" signature="WaitingPath(path, packet)"><variable citdl="WaitingPath" ilk="argument" name="self" /><variable ilk="argument" name="path" /><variable ilk="argument" name="packet" /></scope><variable attributes="__instancevar__" citdl="time.time()" line="177" name="expires_at" /><variable attributes="__instancevar__" line="178" name="path" /><variable attributes="__instancevar__" line="179" name="first_switch" /><variable attributes="__instancevar__" citdl="set()" line="180" name="xids" /><variable attributes="__instancevar__" line="181" name="packet" /><scope ilk="function" line="186" lineend="188" name="add_xid" signature="add_xid(dpid, xid)"><variable citdl="WaitingPath" ilk="argument" name="self" /><variable ilk="argument" name="dpid" /><variable ilk="argument" name="xid" /></scope><variable attributes="property" citdl="bool" line="191" name="is_expired" /><scope attributes="__hidden__" ilk="function" line="191" lineend="192" name="is_expired (property getter)" returns="bool" signature="is_expired (property getter)()"><variable citdl="WaitingPath" ilk="argument" name="self" /></scope><scope doc="Called when a barrier has been received" ilk="function" line="194" lineend="208" name="notify" signature="notify(event)"><variable citdl="WaitingPath" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="of.ofp_packet_out()" line="204" name="msg" /></scope><scope ilk="function" line="212" lineend="221" name="expire_waiting_paths" signature="expire_waiting_paths()"><variable citdl="set()" line="213" name="packets" /><variable citdl="int" line="214" name="killed" /></scope></scope><scope classrefs="Event" doc="Fired when a path is installed" ilk="class" line="224" lineend="230" name="PathInstalled"><scope attributes="__ctor__" ilk="function" line="228" lineend="230" name="__init__" signature="PathInstalled(path)"><variable citdl="PathInstalled" ilk="argument" name="self" /><variable ilk="argument" name="path" /></scope><variable attributes="__instancevar__" line="230" name="path" /></scope><scope classrefs="EventMixin" ilk="class" line="233" lineend="412" name="Switch"><scope attributes="__ctor__" ilk="function" line="234" lineend="239" name="__init__" signature="Switch()"><variable citdl="Switch" ilk="argument" name="self" /></scope><variable attributes="__instancevar__" line="235" name="connection" /><variable attributes="__instancevar__" citdl="connection.features.ports" line="236" name="ports" /><variable attributes="__instancevar__" citdl="connection.dpid" line="237" name="dpid" /><variable attributes="protected __instancevar__" citdl="self.listenTo()" line="238" name="_listeners" /><variable attributes="protected __instancevar__" citdl="time.time()" line="239" name="_connected_at" /><scope ilk="function" line="241" lineend="242" name="__repr__" returns="dpid_to_str()" signature="__repr__()"><variable citdl="Switch" ilk="argument" name="self" /></scope><scope attributes="protected" ilk="function" line="244" lineend="252" name="_install" signature="_install(switch, in_port, out_port, match, buf=None)"><variable citdl="Switch" ilk="argument" name="self" /><variable ilk="argument" name="switch" /><variable ilk="argument" name="in_port" /><variable ilk="argument" name="out_port" /><variable ilk="argument" name="match" /><variable ilk="argument" name="buf" /><variable citdl="of.ofp_flow_mod()" line="245" name="msg" /></scope><scope attributes="protected" ilk="function" line="254" lineend="260" name="_install_path" signature="_install_path(p, match, packet_in=None)"><variable citdl="Switch" ilk="argument" name="self" /><variable ilk="argument" name="p" /><variable ilk="argument" name="match" /><variable ilk="argument" name="packet_in" /><variable citdl="WaitingPath" line="255" name="wp" /><variable citdl="of.ofp_barrier_request()" line="258" name="msg" /></scope><scope doc="Attempts to install a path between this switch and some destination" ilk="function" line="262" lineend="315" name="install_path" signature="install_path(dst_sw, last_port, match, event)"><import alias="pkt" line="270" module="pox.lib.packet" /><import line="278" module="pox.lib.addresses" symbol="EthAddr" /><import line="294" module="struct" /><variable citdl="Switch" ilk="argument" name="self" /><variable ilk="argument" name="dst_sw" /><variable ilk="argument" name="last_port" /><variable ilk="argument" name="match" /><variable ilk="argument" name="event" /><variable citdl="list" line="266" name="p" /><variable citdl="pkt.ethernet()" line="279" name="e" /><variable citdl="pkt.ipv4()" line="283" name="ipp" /><variable citdl="pkt.icmp()" line="287" name="icmp" /><variable citdl="event.parsed.find()" line="290" name="orig_ip" /><variable citdl="orig_ip.pack()" line="292" name="d" /><variable citdl="of.ofp_packet_out()" line="299" name="msg" /></scope><scope attributes="protected" ilk="function" line="318" lineend="383" name="_handle_PacketIn" signature="_handle_PacketIn(event)"><variable citdl="Switch" ilk="argument" name="self" /><variable ilk="argument" name="event" /><scope doc="Floods the packet " ilk="function" line="319" lineend="328" name="flood" signature="flood()"><variable citdl="of.ofp_packet_out()" line="323" name="msg" /></scope><scope ilk="function" line="330" lineend="337" name="drop" signature="drop()"><variable citdl="of.ofp_packet_out()" line="333" name="msg" /></scope><variable citdl="event.parsed" line="339" name="packet" /><variable citdl="tuple" line="341" name="loc" /><variable citdl="mac_map.get()" line="342" name="oldloc" /><variable line="381" name="dest" /><variable citdl="of.ofp_match.from_packet()" line="382" name="match" /></scope><scope ilk="function" line="385" lineend="390" name="disconnect" signature="disconnect()"><variable citdl="Switch" ilk="argument" name="self" /></scope><scope ilk="function" line="392" lineend="402" name="connect" signature="connect(connection)"><variable citdl="Switch" ilk="argument" name="self" /><variable ilk="argument" name="connection" /></scope><variable attributes="property" citdl="bool" line="405" name="is_holding_down" /><scope attributes="__hidden__" ilk="function" line="405" lineend="409" name="is_holding_down (property getter)" returns="bool" signature="is_holding_down (property getter)()"><variable citdl="Switch" ilk="argument" name="self" /></scope><scope attributes="protected" ilk="function" line="411" lineend="412" name="_handle_ConnectionDown" signature="_handle_ConnectionDown(event)"><variable citdl="Switch" ilk="argument" name="self" /><variable ilk="argument" name="event" /></scope></scope><scope classrefs="EventMixin" ilk="class" line="415" lineend="506" name="l2_multi"><variable attributes="protected" citdl="set()" line="417" name="_eventMixin_events" /><scope attributes="__ctor__" ilk="function" line="421" lineend="426" name="__init__" signature="l2_multi()"><variable citdl="l2_multi" ilk="argument" name="self" /><scope ilk="function" line="423" lineend="425" name="startup" signature="startup()" /></scope><scope attributes="protected" ilk="function" line="428" lineend="488" name="_handle_LinkEvent" signature="_handle_LinkEvent(event)"><variable citdl="l2_multi" ilk="argument" name="self" /><variable ilk="argument" name="event" /><scope ilk="function" line="429" lineend="430" name="flip" returns="Discovery.Link()" signature="flip(link)"><variable ilk="argument" name="link" /></scope><variable citdl="event.link" line="432" name="l" /><variable line="433" name="sw1" /><variable line="434" name="sw2" /><variable citdl="of.ofp_flow_mod()" line="442" name="clear" /><variable citdl="set()" line="476" name="bad_macs" /></scope><scope attributes="protected" ilk="function" line="490" lineend="498" name="_handle_ConnectionUp" signature="_handle_ConnectionUp(event)"><variable citdl="l2_multi" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="switches.get()" line="491" name="sw" /></scope><scope attributes="protected" ilk="function" line="500" lineend="506" name="_handle_BarrierIn" signature="_handle_BarrierIn(event)"><variable citdl="l2_multi" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="waiting_paths.pop()" line="501" name="wp" /></scope></scope><scope ilk="function" line="509" lineend="513" name="launch" signature="launch()"><variable citdl="min()" line="512" name="timeout" /></scope></scope>