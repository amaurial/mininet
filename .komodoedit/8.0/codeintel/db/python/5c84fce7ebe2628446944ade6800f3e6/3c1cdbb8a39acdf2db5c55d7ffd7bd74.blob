<scope doc="A simple command-line interface for Mininet." ilk="blob" lang="Python" name="cli" src="/usr/local/lib/python2.7/dist-packages/mininet-2.0.0-py2.7.egg/mininet/cli.py"><import line="28" module="subprocess" symbol="call" /><import line="29" module="cmd" symbol="Cmd" /><import line="30" module="os" symbol="isatty" /><import line="31" module="select" symbol="poll" /><import line="31" module="select" symbol="POLLIN" /><import line="32" module="sys" /><import line="33" module="time" /><import line="35" module="mininet.log" symbol="info" /><import line="35" module="mininet.log" symbol="output" /><import line="35" module="mininet.log" symbol="error" /><import line="36" module="mininet.term" symbol="makeTerms" /><import line="37" module="mininet.util" symbol="quietRun" /><import line="37" module="mininet.util" symbol="isShellBuiltin" /><import line="37" module="mininet.util" symbol="dumpNodeConnections" /><scope classrefs="Cmd" doc="Simple command-line interface to talk to nodes." ilk="class" line="39" lineend="357" name="CLI"><variable citdl="str" line="42" name="prompt" /><scope attributes="__ctor__" ilk="function" line="44" lineend="75" name="__init__" signature="CLI(mininet, stdin=sys.stdin, script=None)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="mininet" /><variable citdl="sys.stdin" ilk="argument" name="stdin" /><variable ilk="argument" name="script" /></scope><variable attributes="__instancevar__" line="45" name="mn" /><variable attributes="__instancevar__" citdl="self.mn.switches" line="46" name="nodelist" /><variable attributes="__instancevar__" citdl="dict" line="47" name="nodemap" /><variable attributes="__instancevar__" citdl="dict" line="51" name="locals" /><variable attributes="__instancevar__" citdl="sys.stdin" line="54" name="stdin" /><variable attributes="__instancevar__" citdl="poll()" line="55" name="inPoller" /><variable attributes="__instancevar__" citdl="open()" line="57" name="inputFile" /><scope doc="Don&apos;t repeat last command when you hit return." ilk="function" line="77" lineend="79" name="emptyline" signature="emptyline()"><variable citdl="CLI" ilk="argument" name="self" /></scope><variable citdl="str" line="86" name="helpStr" /><scope doc="Describe available CLI commands." ilk="function" line="105" lineend="109" name="do_help" signature="do_help(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /></scope><scope doc="List all nodes." ilk="function" line="111" lineend="114" name="do_nodes" signature="do_nodes(_line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="_line" /><variable citdl="__builtins__.str.join()" line="113" name="nodes" /></scope><scope doc="List network connections." ilk="function" line="116" lineend="118" name="do_net" signature="do_net(_line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="_line" /></scope><scope doc="Run an external shell command" ilk="function" line="120" lineend="122" name="do_sh" signature="do_sh(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /></scope><scope doc="Evaluate a Python expression.&#xA;Node names may be used, e.g.: h1.cmd(&apos;ls&apos;)" ilk="function" line="127" lineend="139" name="do_py" signature="do_py(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /><variable citdl="eval()" line="131" name="result" /></scope><scope doc="Ping between all hosts." ilk="function" line="143" lineend="145" name="do_pingall" signature="do_pingall(_line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="_line" /></scope><scope doc="Ping between first two hosts, useful for testing." ilk="function" line="147" lineend="149" name="do_pingpair" signature="do_pingpair(_line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="_line" /></scope><scope doc="Ping between first two hosts, returns all ping results." ilk="function" line="151" lineend="153" name="do_pingallfull" signature="do_pingallfull(_line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="_line" /></scope><scope doc="Ping between first two hosts, returns all ping results." ilk="function" line="155" lineend="157" name="do_pingpairfull" signature="do_pingpairfull(_line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="_line" /></scope><scope doc="Simple iperf TCP test between two (optionally specified) hosts." ilk="function" line="159" lineend="176" name="do_iperf" signature="do_iperf(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /><variable citdl="line.split()" line="161" name="args" /><variable citdl="list" line="165" name="hosts" /><variable citdl="True" line="166" name="err" /></scope><scope doc="Simple iperf TCP test between two (optionally specified) hosts." ilk="function" line="178" lineend="197" name="do_iperfudp" signature="do_iperfudp(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /><variable citdl="line.split()" line="180" name="args" /><variable line="184" name="udpBw" /><variable citdl="list" line="185" name="hosts" /><variable citdl="False" line="186" name="err" /></scope><scope doc="List interfaces." ilk="function" line="199" lineend="203" name="do_intfs" signature="do_intfs(_line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="_line" /></scope><scope doc="Dump node info." ilk="function" line="205" lineend="208" name="do_dump" signature="do_dump(_line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="_line" /></scope><scope doc="Bring link(s) between two nodes up or down." ilk="function" line="210" lineend="218" name="do_link" signature="do_link(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /><variable citdl="line.split()" line="212" name="args" /></scope><scope doc="Spawn xterm(s) for the given node(s)." ilk="function" line="220" lineend="231" name="do_xterm" signature="do_xterm(line, term=&apos;xterm&apos;)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /><variable citdl="str" ilk="argument" name="term" /><variable citdl="line.split()" line="222" name="args" /><variable line="230" name="node" /></scope><scope doc="Spawn gnome-terminal(s) for the given node(s)." ilk="function" line="233" lineend="235" name="do_gterm" signature="do_gterm(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /></scope><scope doc="Exit" ilk="function" line="237" lineend="239" name="do_exit" returns="str" signature="do_exit(_line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="_line" /></scope><scope doc="Exit" ilk="function" line="241" lineend="243" name="do_quit" returns="CLI.do_exit()" signature="do_quit(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /></scope><scope doc="Exit" ilk="function" line="245" lineend="248" name="do_EOF" returns="CLI.do_exit()" signature="do_EOF(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /></scope><scope doc="Is our standard input a tty?" ilk="function" line="250" lineend="252" name="isatty" returns="CLI.isatty()" signature="isatty()"><variable citdl="CLI" ilk="argument" name="self" /></scope><scope doc="Run an interactive command with echoing turned off." ilk="function" line="254" lineend="260" name="do_noecho" signature="do_noecho(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /></scope><scope doc="Read commands from an input file." ilk="function" line="262" lineend="278" name="do_source" signature="do_source(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable citdl="self.inputFile.readline()" ilk="argument" name="line" /><variable citdl="line.split()" line="264" name="args" /></scope><scope doc="Run dpctl command on all switches." ilk="function" line="280" lineend="288" name="do_dpctl" signature="do_dpctl(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /><variable citdl="line.split()" line="282" name="args" /></scope><scope doc="Measure time taken for any command in Mininet." ilk="function" line="290" lineend="295" name="do_time" signature="do_time(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /><variable citdl="time.time()" line="292" name="start" /><variable citdl="time.time()" line="294" name="elapsed" /></scope><scope doc="Called on an input line when the command prefix is not recognized.&#xA;Overridden to run shell commands when a node is the first CLI argument.&#xA;Past the first CLI argument, node names are automatically replaced with&#xA;corresponding IP addrs." ilk="function" line="297" lineend="322" name="default" signature="default(line)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="line" /><variable citdl="list" line="303" name="args" /><variable line="303" name="first" /><variable citdl="list" line="308" name="rest" /><variable line="311" name="node" /><variable citdl="isShellBuiltin()" line="318" name="builtin" /></scope><scope doc="Wait for a node to finish, and  print its output." ilk="function" line="326" lineend="357" name="waitForNode" signature="waitForNode(node)"><variable citdl="CLI" ilk="argument" name="self" /><variable ilk="argument" name="node" /><variable citdl="poll()" line="329" name="nodePoller" /><variable citdl="poll()" line="331" name="bothPoller" /><variable citdl="self.inputFile.read()" line="343" name="key" /><variable citdl="node.monitor()" line="352" name="data" /></scope></scope><scope doc="Check whether a Poll object has a readable fd." ilk="function" line="361" lineend="366" name="isReadable" returns="bool" signature="isReadable(poller)"><variable ilk="argument" name="poller" /><variable line="364" name="mask" /></scope></scope>