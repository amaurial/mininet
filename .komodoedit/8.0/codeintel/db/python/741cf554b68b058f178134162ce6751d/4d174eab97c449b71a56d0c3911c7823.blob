<scope doc="Provides a Python interpreter while running POX" ilk="blob" lang="Python" name="py" src="/home/mininet/new_pox/pox/pox/py.py"><import line="22" module="__future__" symbol="print_function" /><import line="24" module="pox.core" symbol="core" /><import line="25" module="pox.lib.util" symbol="str_to_bool" /><import line="26" module="time" /><scope attributes="protected" doc="The readline in pypy (which is the readline from pyrepl) turns off output&#xA;postprocessing, which disables normal NL-&gt;CRLF translation.  An effect of&#xA;this is that output *from other threads* (like log messages) which try to&#xA;print newlines end up just getting linefeeds and the output is all stair-&#xA;stepped.  We monkeypatch the function in pyrepl which disables OPOST to&#xA;turn OPOST back on again.  This doesn&apos;t immediately seem to break&#xA;anything in the simple cases, and makes the console reasonable to use&#xA;in pypy." ilk="function" line="28" lineend="53" name="_monkeypatch_console" signature="_monkeypatch_console()"><import line="40" module="termios" /><import line="41" module="sys" /><import line="42" module="pyrepl.unix_console" /><variable citdl="pyrepl.unix_console.UnixConsole" line="43" name="uc" /><variable citdl="uc.prepare" line="44" name="old" /><scope ilk="function" line="45" lineend="50" name="prep" signature="prep(self)"><variable ilk="argument" name="self" /><variable citdl="sys.stdin.fileno()" line="47" name="f" /><variable citdl="termios.tcgetattr()" line="48" name="a" /></scope></scope><scope classrefs="object" doc="This is how other applications can interact with the interpreter.&#xA;&#xA;At the moment, it&apos;s really limited." ilk="class" line="56" lineend="117" name="Interactive"><scope attributes="__ctor__" ilk="function" line="62" lineend="80" name="__init__" signature="Interactive()"><import line="67" module="pox.license" /><import line="68" module="sys" /><variable citdl="Interactive" ilk="argument" name="self" /><scope classrefs="object" ilk="class" line="72" lineend="77" name="pox_exit"><scope ilk="function" line="73" lineend="75" name="__call__" signature="__call__(code=0)"><variable citdl="pox_exit" ilk="argument" name="self" /><variable citdl="int" ilk="argument" name="code" /></scope><scope ilk="function" line="76" lineend="77" name="__repr__" returns="str" signature="__repr__()"><variable citdl="pox_exit" ilk="argument" name="self" /></scope></scope></scope><variable attributes="__instancevar__" citdl="False" line="64" name="enabled" /><variable attributes="__instancevar__" citdl="False" line="65" name="completion" /><variable attributes="__instancevar__" citdl="dict()" line="69" name="variables" /><variable attributes="__instancevar__" citdl="True" line="80" name="running" /><scope doc="Begin user interaction " ilk="function" line="89" lineend="117" name="interact" signature="interact()"><import line="93" module="readline" /><import line="93" module="rlcompleter" /><import line="110" module="code" /><import line="111" module="sys" /><variable citdl="Interactive" ilk="argument" name="self" /><variable line="94" name="ns" /></scope></scope><scope ilk="function" line="120" lineend="131" name="launch" signature="launch(disable=False, completion=None, __INSTANCE__=None)"><import line="124" module="boot" /><variable citdl="False" ilk="argument" name="disable" /><variable ilk="argument" name="completion" /><variable ilk="argument" name="__INSTANCE__" /></scope></scope>