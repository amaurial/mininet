<scope ilk="blob" lang="Python" name="dsextras" src="/usr/lib/python2.7/dist-packages/gtk-2.0/dsextras.py"><import line="7" module="os" /><import line="8" module="sys" /><import line="9" module="fnmatch" /><import line="10" module="re" /><import line="11" module="string" /><import line="13" module="distutils" symbol="dep_util" /><import line="14" module="distutils.command.build_ext" symbol="build_ext" /><import line="15" module="distutils.command.install_lib" symbol="install_lib" /><import line="16" module="distutils.command.install_data" symbol="install_data" /><import line="17" module="distutils.extension" symbol="Extension" /><import line="18" module="distutils.spawn" symbol="find_executable" /><import line="21" module="codegen.createdefs" /><import line="22" module="codegen.override" symbol="Overrides" /><import line="23" module="codegen.defsparser" symbol="DefsParser" /><import line="24" module="codegen.codegen" symbol="register_types" /><import line="24" module="codegen.codegen" symbol="SourceWriter" /><import line="24" module="codegen.codegen" symbol="FileOutput" /><variable citdl="True" line="26" name="template_classes_enabled" /><variable citdl="list" line="31" name="GLOBAL_INC" /><variable citdl="list" line="32" name="GLOBAL_MACROS" /><variable citdl="str" line="34" name="codegen_error_message" /><scope doc="Return the value of a m4_define variable as set in configure.in." ilk="function" line="42" lineend="59" name="get_m4_define" returns="match_obj.group()" signature="get_m4_define(varname)"><variable ilk="argument" name="varname" /><variable citdl="re.compile()" line="44" name="pattern" /><variable citdl="str" line="47" name="fname" /><variable citdl="pattern.match()" line="54" name="match_obj" /></scope><scope doc="Return output (stdout or stderr) of executing cmd in a shell." ilk="function" line="61" lineend="63" name="getoutput" signature="getoutput(cmd)"><variable ilk="argument" name="cmd" /></scope><scope ilk="function" line="65" lineend="78" name="getstatusoutput" returns="tuple" signature="Return (status, output) of executing cmd in a shell."><import line="77" module="commands" symbol="getstatusoutput" /><variable ilk="argument" name="cmd" /><variable citdl="os.popen()" line="68" name="pipe" /><variable citdl="list" line="69" name="text" /><variable citdl="int" line="70" name="sts" /></scope><scope doc="Checks for the existence of gcc" ilk="function" line="80" lineend="83" name="have_gcc" returns="bool" signature="have_gcc()" /><scope doc="Checks for the existence of pkg-config" ilk="function" line="85" lineend="88" name="have_pkgconfig" returns="bool" signature="have_pkgconfig()" /><scope doc="List all files in a dir, with filename match support:&#xA;for example: glade/*.glade will return all files in the glade directory&#xA;that matches *.glade. It also looks up the full path" ilk="function" line="90" lineend="109" name="list_files" returns="list" signature="list_files(dir)"><variable citdl="os.path.abspath()" ilk="argument" name="dir" /><variable citdl="dir.split()" line="95" name="parts" /><variable citdl="string.join()" line="97" name="pattern" /><variable citdl="list" line="103" name="retval" /></scope><scope doc="Check the existence and version number of a package:&#xA;returns False if not installed or too old, True otherwise." ilk="function" line="111" lineend="126" name="pkgc_version_check" returns="bool" signature="pkgc_version_check(name, req_version)"><variable ilk="argument" name="name" /><variable ilk="argument" name="req_version" /><variable citdl="bool" line="114" name="is_installed" /><variable citdl="pkgc_get_version()" line="119" name="orig_version" /><variable citdl="map()" line="120" name="version" /><variable citdl="map()" line="121" name="pkc_version" /></scope><scope doc="return the version as return by pkg-config --modversion" ilk="function" line="128" lineend="130" name="pkgc_get_version" returns="getoutput()" signature="pkgc_get_version(name)"><variable ilk="argument" name="name" /></scope><scope doc="returns a list of libraries as returned by pkg-config --libs-only-l" ilk="function" line="132" lineend="135" name="pkgc_get_libraries" signature="pkgc_get_libraries(name)"><variable ilk="argument" name="name" /><variable citdl="getoutput()" line="134" name="output" /></scope><scope doc="returns a list of library dirs as returned by pkg-config --libs-only-L" ilk="function" line="137" lineend="140" name="pkgc_get_library_dirs" signature="pkgc_get_library_dirs(name)"><variable ilk="argument" name="name" /><variable citdl="getoutput()" line="139" name="output" /></scope><scope doc="returns a list of include dirs as returned by pkg-config --cflags-only-I" ilk="function" line="142" lineend="145" name="pkgc_get_include_dirs" signature="pkgc_get_include_dirs(name)"><variable ilk="argument" name="name" /><variable citdl="getoutput()" line="144" name="output" /></scope><scope doc="returns the defs dir as returned by pkg-config --variable=defsdir" ilk="function" line="147" lineend="150" name="pkgc_get_defs_dir" returns="getoutput()" signature="pkgc_get_defs_dir(name)"><variable ilk="argument" name="name" /><variable citdl="getoutput()" line="149" name="output" /></scope><scope classrefs="build_ext" ilk="class" line="153" lineend="213" name="BuildExt"><scope ilk="function" line="154" lineend="173" name="init_extra_compile_args" signature="init_extra_compile_args()"><variable citdl="BuildExt" ilk="argument" name="self" /><variable citdl="dict" line="165" name="msnative_struct" /><variable citdl="getoutput()" line="168" name="gcc_version" /></scope><variable attributes="__instancevar__" citdl="list" line="155" name="extra_compile_args" /><scope ilk="function" line="175" lineend="183" name="modify_compiler" signature="modify_compiler()"><variable citdl="BuildExt" ilk="argument" name="self" /></scope><scope ilk="function" line="185" lineend="191" name="build_extensions" signature="build_extensions()"><variable citdl="BuildExt" ilk="argument" name="self" /></scope><scope ilk="function" line="193" lineend="213" name="build_extension" signature="build_extension(ext)"><variable citdl="BuildExt" ilk="argument" name="self" /><variable ilk="argument" name="ext" /><variable citdl="ext.libraries" line="203" name="save_libs" /></scope></scope><scope classrefs="install_lib" ilk="class" line="216" lineend="227" name="InstallLib"><variable citdl="list" line="217" name="local_outputs" /><variable citdl="list" line="218" name="local_inputs" /><scope ilk="function" line="220" lineend="221" name="set_install_dir" signature="set_install_dir(install_dir)"><variable citdl="InstallLib" ilk="argument" name="self" /><variable ilk="argument" name="install_dir" /></scope><variable attributes="__instancevar__" line="221" name="install_dir" /><scope ilk="function" line="223" lineend="224" name="get_outputs" returns="list" signature="get_outputs()"><variable citdl="InstallLib" ilk="argument" name="self" /></scope><scope ilk="function" line="226" lineend="227" name="get_inputs" returns="install_lib.get_inputs()" signature="get_inputs()"><variable citdl="InstallLib" ilk="argument" name="self" /></scope></scope><scope classrefs="install_data" ilk="class" line="230" lineend="283" name="InstallData"><variable citdl="list" line="231" name="local_outputs" /><variable citdl="list" line="232" name="local_inputs" /><variable citdl="dict" line="233" name="template_options" /><scope ilk="function" line="235" lineend="255" name="prepare" signature="prepare()"><variable citdl="InstallData" ilk="argument" name="self" /></scope><variable attributes="__instancevar__" citdl="os.sep.join()" line="237" name="prefix" /><variable attributes="__instancevar__" citdl="str" line="242" name="exec_prefix" /><variable attributes="__instancevar__" citdl="str" line="243" name="includedir" /><variable attributes="__instancevar__" citdl="str" line="244" name="libdir" /><variable attributes="__instancevar__" citdl="str" line="245" name="datarootdir" /><variable attributes="__instancevar__" citdl="str" line="246" name="datadir" /><scope ilk="function" line="257" lineend="258" name="set_install_dir" signature="set_install_dir(install_dir)"><variable citdl="InstallData" ilk="argument" name="self" /><variable ilk="argument" name="install_dir" /></scope><variable attributes="__instancevar__" line="258" name="install_dir" /><scope ilk="function" line="260" lineend="261" name="add_template_option" signature="add_template_option(name, value)"><variable citdl="InstallData" ilk="argument" name="self" /><variable ilk="argument" name="name" /><variable ilk="argument" name="value" /></scope><scope doc="Install template filename into target directory install_dir." ilk="function" line="263" lineend="277" name="install_template" returns="os.path.join()" signature="install_template(filename, install_dir)"><variable citdl="InstallData" ilk="argument" name="self" /><variable ilk="argument" name="filename" /><variable ilk="argument" name="install_dir" /><variable citdl="list" line="265" name="output_file" /><variable citdl="template.replace()" line="267" name="template" /><variable citdl="os.path.join()" line="272" name="output" /></scope><scope ilk="function" line="279" lineend="280" name="get_outputs" returns="list" signature="get_outputs()"><variable citdl="InstallData" ilk="argument" name="self" /></scope><scope ilk="function" line="282" lineend="283" name="get_inputs" returns="install_data.get_inputs()" signature="get_inputs()"><variable citdl="InstallData" ilk="argument" name="self" /></scope></scope><scope classrefs="Extension" ilk="class" line="286" lineend="391" name="PkgConfigExtension"><variable citdl="kwargs.pop()" line="288" name="pygobject_pkc" /><variable citdl="False" line="289" name="can_build_ok" /><scope attributes="__ctor__" ilk="function" line="291" lineend="323" name="__init__" signature="PkgConfigExtension(**kwargs)"><variable citdl="PkgConfigExtension" ilk="argument" name="self" /><variable attributes="kwargs" ilk="argument" name="kwargs" /><variable line="292" name="name" /></scope><variable attributes="__instancevar__" line="319" name="name" /><variable attributes="__instancevar__" line="320" name="pkc_name" /><variable attributes="__instancevar__" line="321" name="pkc_version" /><scope ilk="function" line="325" lineend="334" name="get_include_dirs" returns="list" signature="get_include_dirs(names)"><variable citdl="PkgConfigExtension" ilk="argument" name="self" /><variable citdl="tuple" ilk="argument" name="names" /><variable citdl="list" line="329" name="retval" /></scope><scope ilk="function" line="336" lineend="345" name="get_libraries" returns="list" signature="get_libraries(names)"><variable citdl="PkgConfigExtension" ilk="argument" name="self" /><variable citdl="tuple" ilk="argument" name="names" /><variable citdl="list" line="340" name="retval" /></scope><scope ilk="function" line="347" lineend="356" name="get_library_dirs" returns="list" signature="get_library_dirs(names)"><variable citdl="PkgConfigExtension" ilk="argument" name="self" /><variable citdl="tuple" ilk="argument" name="names" /><variable citdl="list" line="351" name="retval" /></scope><scope doc="If the pkg-config version found is good enough" ilk="function" line="358" lineend="388" name="can_build" returns="bool" signature="can_build()"><variable citdl="PkgConfigExtension" ilk="argument" name="self" /><variable citdl="zip()" line="364" name="reqs" /><variable citdl="os.system()" line="369" name="retval" /><variable citdl="pkgc_get_version()" line="377" name="orig_version" /></scope><scope ilk="function" line="390" lineend="391" name="generate" signature="generate()"><variable citdl="PkgConfigExtension" ilk="argument" name="self" /></scope></scope><scope classrefs="object" ilk="class" line="394" lineend="469" name="Template"><scope ilk="function" line="395" lineend="401" name="__new__" returns="object.__new__()" signature="__new__(*args, **kwds)"><variable citdl="Template" ilk="argument" name="cls" /><variable attributes="varargs" ilk="argument" name="args" /><variable attributes="kwargs" ilk="argument" name="kwds" /></scope><scope attributes="__ctor__" ilk="function" line="403" lineend="427" name="__init__" signature="Template(override, output, defs, prefix, register=[], load_types=None, py_ssize_t_clean=False)"><variable citdl="Template" ilk="argument" name="self" /><variable ilk="argument" name="override" /><variable ilk="argument" name="output" /><variable ilk="argument" name="defs" /><variable ilk="argument" name="prefix" /><variable citdl="list" ilk="argument" name="register" /><variable ilk="argument" name="load_types" /><variable citdl="False" ilk="argument" name="py_ssize_t_clean" /></scope><variable attributes="__instancevar__" line="406" name="override" /><variable attributes="__instancevar__" line="407" name="output" /><variable attributes="__instancevar__" line="408" name="prefix" /><variable attributes="__instancevar__" line="409" name="load_types" /><variable attributes="__instancevar__" citdl="False" line="410" name="py_ssize_t_clean" /><variable attributes="__instancevar__" citdl="list" line="412" name="built_defs" /><variable attributes="__instancevar__" line="415" name="defs" /><variable attributes="__instancevar__" citdl="list" line="420" name="register" /><scope ilk="function" line="429" lineend="435" name="check_dates" returns="bool" signature="check_dates()"><variable citdl="Template" ilk="argument" name="self" /><variable citdl="list" line="431" name="files" /></scope><scope ilk="function" line="437" lineend="442" name="generate_defs" signature="generate_defs()"><variable citdl="Template" ilk="argument" name="self" /><variable citdl="sources" line="441" name="args" /></scope><scope ilk="function" line="444" lineend="469" name="generate" signature="generate()"><variable citdl="Template" ilk="argument" name="self" /><variable citdl="DefsParser()" line="453" name="dp" /><variable citdl="dict" line="458" name="globals" /><variable citdl="open()" line="465" name="fd" /><variable citdl="SourceWriter()" line="466" name="sw" /></scope></scope><scope classrefs="PkgConfigExtension" ilk="class" line="472" lineend="509" name="TemplateExtension"><scope ilk="function" line="473" lineend="478" name="__new__" returns="PkgConfigExtension.__new__()" signature="__new__(*args, **kwds)"><variable citdl="TemplateExtension" ilk="argument" name="cls" /><variable attributes="varargs" ilk="argument" name="args" /><variable attributes="kwargs" ilk="argument" name="kwds" /></scope><scope attributes="__ctor__" ilk="function" line="480" lineend="506" name="__init__" signature="TemplateExtension(**kwargs)"><variable citdl="TemplateExtension" ilk="argument" name="self" /><variable attributes="kwargs" ilk="argument" name="kwargs" /><variable line="481" name="name" /><variable line="482" name="defs" /><variable citdl="list" line="485" name="output" /><variable line="489" name="override" /><variable citdl="kwargs.get()" line="490" name="load_types" /><variable citdl="kwargs.pop()" line="491" name="py_ssize_t_clean" /></scope><variable attributes="__instancevar__" citdl="list" line="492" name="templates" /><scope ilk="function" line="508" lineend="509" name="generate" signature="generate()"><variable citdl="TemplateExtension" ilk="argument" name="self" /></scope></scope></scope>