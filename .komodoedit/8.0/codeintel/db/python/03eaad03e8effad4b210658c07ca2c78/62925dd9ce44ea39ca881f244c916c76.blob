<scope doc="consoles.py: bring up a bunch of miniature consoles on a&#xA;virtual network" ilk="blob" lang="Python" name="consoles" src="/home/mininet/mininet/examples/consoles.py"><import line="28" module="re" /><import line="30" module="Tkinter" symbol="Frame" /><import line="30" module="Tkinter" symbol="Button" /><import line="30" module="Tkinter" symbol="Label" /><import line="30" module="Tkinter" symbol="Text" /><import line="30" module="Tkinter" symbol="Scrollbar" /><import line="30" module="Tkinter" symbol="Canvas" /><import line="30" module="Tkinter" symbol="Wm" /><import line="30" module="Tkinter" symbol="READABLE" /><import line="32" module="mininet.log" symbol="setLogLevel" /><import line="33" module="mininet.topolib" symbol="TreeNet" /><import line="34" module="mininet.term" symbol="makeTerms" /><import line="34" module="mininet.term" symbol="cleanUpScreens" /><import line="35" module="mininet.util" symbol="quietRun" /><scope classrefs="Frame" doc="A simple console on a host." ilk="class" line="37" lineend="165" name="Console"><scope attributes="__ctor__" ilk="function" line="40" lineend="68" name="__init__" signature="Console(parent, net, node, height=10, width=32, title=&apos;Node&apos;)"><variable citdl="Console" ilk="argument" name="self" /><variable ilk="argument" name="parent" /><variable ilk="argument" name="net" /><variable ilk="argument" name="node" /><variable citdl="int" ilk="argument" name="height" /><variable citdl="int" ilk="argument" name="width" /><variable citdl="str" ilk="argument" name="title" /></scope><variable attributes="__instancevar__" line="43" name="net" /><variable attributes="__instancevar__" line="44" name="node" /><variable attributes="__instancevar__" citdl="str" line="45" name="prompt" /><variable attributes="__instancevar__" citdl="int" line="46" name="height" /><variable attributes="__instancevar__" citdl="str" line="46" name="title" /><variable attributes="__instancevar__" citdl="int" line="46" name="width" /><variable attributes="__instancevar__" citdl="dict" line="49" name="buttonStyle" /><variable attributes="__instancevar__" citdl="dict" line="50" name="textStyle" /><variable attributes="__instancevar__" citdl="self.makeWidgets()" line="64" name="text" /><variable attributes="__instancevar__" line="68" name="outputHook" /><scope doc="Make a label, a text area, and a scroll bar." ilk="function" line="70" lineend="85" name="makeWidgets" returns="Text()" signature="makeWidgets()"><variable citdl="Console" ilk="argument" name="self" /><scope doc="Pop up a new terminal window for a node." ilk="function" line="73" lineend="75" name="newTerm" signature="newTerm(net=self.net, node=self.node, title=self.title)"><variable ilk="argument" name="net" /><variable ilk="argument" name="node" /><variable citdl="str" ilk="argument" name="title" /></scope><variable citdl="Button()" line="76" name="label" /><variable citdl="Text()" line="79" name="text" /><variable citdl="Scrollbar()" line="80" name="ybar" /></scope><scope doc="Bind keyboard and file events." ilk="function" line="87" lineend="98" name="bindEvents" signature="bindEvents()"><variable citdl="Console" ilk="argument" name="self" /></scope><variable citdl="re.compile()" line="102" name="ignoreChars" /><scope doc="Append something to our text frame." ilk="function" line="104" lineend="113" name="append" signature="append(text)"><variable citdl="Console" ilk="argument" name="self" /><variable citdl="self.ignoreChars.sub()" ilk="argument" name="text" /><variable line="110" name="outputHook" /></scope><scope doc="If it&apos;s an interactive command, send it to the node." ilk="function" line="115" lineend="119" name="handleKey" signature="handleKey(event)"><variable citdl="Console" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="event.char" line="117" name="char" /></scope><scope doc="Handle a carriage return." ilk="function" line="121" lineend="132" name="handleReturn" signature="handleReturn(event)"><variable citdl="Console" ilk="argument" name="self" /><variable ilk="argument" name="event" /><variable citdl="list" line="123" name="cmd" /><variable citdl="cmd.find()" line="129" name="pos" /></scope><scope doc="Handle control-c." ilk="function" line="135" lineend="137" name="handleInt" signature="handleInt(_event=None)"><variable citdl="Console" ilk="argument" name="self" /><variable ilk="argument" name="_event" /></scope><scope doc="Send a command to our node." ilk="function" line="139" lineend="142" name="sendCmd" signature="sendCmd(cmd)"><variable citdl="Console" ilk="argument" name="self" /><variable ilk="argument" name="cmd" /></scope><scope doc="Handle file readable event." ilk="function" line="144" lineend="150" name="handleReadable" signature="handleReadable(_fds, timeoutms=None)"><variable citdl="Console" ilk="argument" name="self" /><variable ilk="argument" name="_fds" /><variable ilk="argument" name="timeoutms" /><variable citdl="self.node.monitor()" line="146" name="data" /></scope><scope doc="Are we waiting for output?" ilk="function" line="152" lineend="154" name="waiting" returns="self.node.waiting" signature="waiting()"><variable citdl="Console" ilk="argument" name="self" /></scope><scope doc="Wait for any remaining output." ilk="function" line="156" lineend="161" name="waitOutput" signature="waitOutput()"><variable citdl="Console" ilk="argument" name="self" /></scope><scope doc="Clear all of our text." ilk="function" line="163" lineend="165" name="clear" signature="clear()"><variable citdl="Console" ilk="argument" name="self" /></scope></scope><scope classrefs="Frame" doc="Graph that we can add bars to over time." ilk="class" line="168" lineend="271" name="Graph"><scope attributes="__ctor__" ilk="function" line="172" lineend="187" name="__init__" signature="Graph(parent=None, bg=&apos;white&apos;, gheight=200, gwidth=500, barwidth=10, ymax=3.5)"><variable citdl="Graph" ilk="argument" name="self" /><variable ilk="argument" name="parent" /><variable citdl="str" ilk="argument" name="bg" /><variable citdl="int" ilk="argument" name="gheight" /><variable citdl="int" ilk="argument" name="gwidth" /><variable citdl="int" ilk="argument" name="barwidth" /><variable citdl="float" ilk="argument" name="ymax" /></scope><variable attributes="__instancevar__" citdl="str" line="177" name="bg" /><variable attributes="__instancevar__" citdl="int" line="178" name="gheight" /><variable attributes="__instancevar__" citdl="int" line="179" name="gwidth" /><variable attributes="__instancevar__" citdl="int" line="180" name="barwidth" /><variable attributes="__instancevar__" citdl="float()" line="181" name="ymax" /><variable attributes="__instancevar__" citdl="int" line="182" name="xpos" /><variable attributes="__instancevar__" line="185" name="title" /><variable attributes="__instancevar__" line="185" name="graph" /><variable attributes="__instancevar__" line="185" name="scale" /><scope doc="Create a and return a new canvas with scale markers." ilk="function" line="189" lineend="204" name="createScale" returns="Canvas()" signature="createScale()"><variable citdl="Graph" ilk="argument" name="self" /><variable citdl="float()" line="191" name="height" /><variable citdl="int" line="192" name="width" /><variable citdl="float()" line="193" name="ymax" /><variable citdl="Canvas()" line="194" name="scale" /><variable citdl="dict" line="196" name="opts" /><variable citdl="float()" line="201" name="ypos" /></scope><scope doc="Update graph and scale scroll regions." ilk="function" line="206" lineend="212" name="updateScrollRegions" signature="updateScrollRegions()"><variable citdl="Graph" ilk="argument" name="self" /><variable citdl="int" line="208" name="ofs" /><variable citdl="int" line="209" name="height" /></scope><scope doc="Scroll both scale and graph." ilk="function" line="214" lineend="217" name="yview" signature="yview(*args)"><variable citdl="Graph" ilk="argument" name="self" /><variable attributes="varargs" ilk="argument" name="args" /></scope><scope doc="Create initial widget set." ilk="function" line="219" lineend="242" name="createWidgets" returns="tuple" signature="createWidgets()"><variable citdl="Graph" ilk="argument" name="self" /><variable citdl="Label()" line="223" name="title" /><variable citdl="int" line="224" name="width" /><variable citdl="int" line="225" name="height" /><variable citdl="createScale()" line="226" name="scale" /><variable citdl="Canvas()" line="227" name="graph" /><variable citdl="Scrollbar()" line="228" name="xbar" /><variable citdl="Scrollbar()" line="229" name="ybar" /></scope><scope doc="Add a new bar to our graph." ilk="function" line="244" lineend="255" name="addBar" signature="addBar(yval)"><variable citdl="Graph" ilk="argument" name="self" /><variable ilk="argument" name="yval" /><variable citdl="float()" line="246" name="percent" /><variable line="247" name="c" /><variable citdl="int" line="248" name="x0" /><variable citdl="int" line="249" name="x1" /><variable citdl="int" line="250" name="y0" /><variable citdl="float()" line="251" name="y1" /></scope><scope doc="Clear graph contents." ilk="function" line="257" lineend="260" name="clear" signature="clear()"><variable citdl="Graph" ilk="argument" name="self" /></scope><scope doc="Add a bar for testing purposes." ilk="function" line="262" lineend="267" name="test" signature="test()"><variable citdl="Graph" ilk="argument" name="self" /><variable citdl="int" line="264" name="ms" /></scope><scope doc="Set graph title" ilk="function" line="269" lineend="271" name="setTitle" signature="setTitle(text)"><variable citdl="Graph" ilk="argument" name="self" /><variable ilk="argument" name="text" /></scope></scope><scope classrefs="Frame" doc="Simple Tk consoles for Mininet." ilk="class" line="274" lineend="435" name="ConsoleApp"><variable citdl="dict" line="278" name="menuStyle" /><scope attributes="__ctor__" ilk="function" line="280" lineend="314" name="__init__" signature="ConsoleApp(net, parent=None, width=4)"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable ilk="argument" name="net" /><variable ilk="argument" name="parent" /><variable citdl="int" ilk="argument" name="width" /><variable citdl="Frame()" line="286" name="cframe" /><variable citdl="dict" line="288" name="titles" /><variable citdl="getattr()" line="294" name="nodes" /><variable line="295" name="frame" /><variable line="295" name="consoles" /><variable citdl="Graph" line="306" name="graph" /></scope><variable attributes="__instancevar__" citdl="self.winfo_toplevel()" line="282" name="top" /><variable attributes="__instancevar__" line="284" name="net" /><variable attributes="__instancevar__" citdl="self.createMenuBar()" line="285" name="menubar" /><variable attributes="__instancevar__" citdl="dict" line="287" name="consoles" /><variable attributes="__instancevar__" line="298" name="selected" /><variable attributes="__instancevar__" citdl="Graph" line="308" name="graph" /><variable attributes="__instancevar__" citdl="False" line="309" name="graphVisible" /><variable attributes="__instancevar__" citdl="int" line="310" name="updates" /><variable attributes="__instancevar__" citdl="len()" line="311" name="hostCount" /><variable attributes="__instancevar__" citdl="int" line="312" name="bw" /><scope doc="Update our graph." ilk="function" line="316" lineend="326" name="updateGraph" signature="updateGraph(_console, output)"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable ilk="argument" name="_console" /><variable ilk="argument" name="output" /><variable citdl="re.search()" line="318" name="m" /></scope><scope doc="Register fn as output hook [on specific consoles.]" ilk="function" line="328" lineend="333" name="setOutputHook" signature="setOutputHook(fn=None, consoles=None)"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable ilk="argument" name="fn" /><variable ilk="argument" name="consoles" /></scope><scope doc="Create a grid of consoles in a frame." ilk="function" line="335" lineend="350" name="createConsoles" returns="tuple" signature="createConsoles(parent, nodes, width, title)"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable ilk="argument" name="parent" /><variable ilk="argument" name="nodes" /><variable ilk="argument" name="width" /><variable ilk="argument" name="title" /><variable citdl="Frame()" line="337" name="f" /><variable citdl="list" line="339" name="consoles" /><variable citdl="int" line="340" name="index" /><variable citdl="Console" line="342" name="console" /><variable citdl="int" line="344" name="row" /><variable citdl="int" line="345" name="column" /></scope><scope doc="Select a group of consoles to display." ilk="function" line="352" lineend="357" name="select" signature="select(groupName)"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable ilk="argument" name="groupName" /></scope><scope doc="Create and return a menu (really button) bar." ilk="function" line="359" lineend="377" name="createMenuBar" returns="Frame()" signature="createMenuBar()"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable citdl="Frame()" line="361" name="f" /><variable citdl="list" line="362" name="buttons" /><variable citdl="Button()" line="374" name="b" /></scope><scope doc="Clear selection." ilk="function" line="379" lineend="382" name="clear" signature="clear()"><variable citdl="ConsoleApp" ilk="argument" name="self" /></scope><scope doc="Are any of our hosts waiting for output?" ilk="function" line="384" lineend="391" name="waiting" returns="bool" signature="waiting(consoles=None)"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable ilk="argument" name="consoles" /></scope><scope doc="Tell each host to ping the next one." ilk="function" line="393" lineend="403" name="ping" signature="ping()"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable line="395" name="consoles" /><variable citdl="len()" line="398" name="count" /><variable citdl="int" line="399" name="i" /><variable line="402" name="ip" /></scope><scope doc="Tell each host to iperf to the next one." ilk="function" line="405" lineend="418" name="iperf" signature="iperf()"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable line="407" name="consoles" /><variable citdl="len()" line="410" name="count" /><variable citdl="int" line="414" name="i" /><variable line="417" name="ip" /></scope><scope doc="Interrupt all hosts." ilk="function" line="420" lineend="430" name="stop" signature="stop(wait=True)"><variable citdl="ConsoleApp" ilk="argument" name="self" /><variable citdl="True" ilk="argument" name="wait" /><variable line="422" name="consoles" /></scope><scope doc="Stop everything and quit." ilk="function" line="432" lineend="435" name="quit" signature="quit()"><variable citdl="ConsoleApp" ilk="argument" name="self" /></scope></scope><scope doc="Set a bunch of fields in an object." ilk="function" line="440" lineend="442" name="assign" signature="assign(obj, **kwargs)"><variable ilk="argument" name="obj" /><variable attributes="kwargs" ilk="argument" name="kwargs" /></scope><scope classrefs="object" doc="Generic object you can stuff junk into." ilk="class" line="444" lineend="447" name="Object"><scope attributes="__ctor__" ilk="function" line="446" lineend="447" name="__init__" signature="Object(**kwargs)"><variable citdl="Object" ilk="argument" name="self" /><variable attributes="kwargs" ilk="argument" name="kwargs" /></scope></scope><variable citdl="TreeNet()" line="452" name="network" /><variable citdl="ConsoleApp" line="454" name="app" /></scope>