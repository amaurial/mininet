# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is Komodo code.
# 
# The Initial Developer of the Original Code is ActiveState Software Inc.
# Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
# ActiveState Software Inc. All Rights Reserved.
# 
# Contributor(s):
#   ActiveState Software Inc
# 
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK *****

# Used by xbl2js, mxml2js (for Flex/MXML)

state IN_H2CSL_STAG_POST_TAGNAME:
'>' : paint(upto, M_TAGSPACE), paint(include, M_STAGC) => IN_H2CSL_STAG_POST_TAGNAME_IN_WS
# empty tag : nothing to lex inside it.
'/>' : paint(upto, M_TAGSPACE), paint(include, M_EMP_TAGC) => IN_M_DEFAULT
# XXX case-insensitive
# If we find a src attribute, there shouldn't be any script to process,
# so bail back to the regular html state.
/src\b/i : paint(upto, M_TAGSPACE), paint(include, M_ATTRNAME), => IN_M_STAG_POST_ATTRNAME_1
/[$CS]/ : paint(upto, M_TAGSPACE) => IN_H2CSL_STAG_IN_ATTRNAME

state IN_H2CSL_STAG_POST_TAGNAME_IN_WS:
/^/: paint(include, M_DEFAULT), => IN_CSL_DEFAULT
/\S/: paint(upto, M_DEFAULT), redo, => IN_CSL_DEFAULT

state IN_H2CSL_STAG_IN_ATTRNAME
/[^$CS]/ :  paint(upto, M_ATTRNAME), redo, => IN_H2CSL_STAG_POST_ATTRNAME_1
'<'    : paint(upto, M_TAGSPACE), redo => IN_M_DEFAULT

state IN_H2CSL_STAG_POST_ATTRNAME_1
'=' : paint(upto, M_TAGSPACE), paint(include, M_OPERATOR) => IN_H2CSL_STAG_POST_ATTRNAME_2
/[^$WS]/ : paint(upto, M_TAGSPACE), redo => IN_H2CSL_STAG_POST_TAGNAME

state IN_H2CSL_STAG_POST_ATTRNAME_2
'\"' : paint(upto, M_TAGSPACE), => IN_H2CSL_STAG_ATTR_DSTRING
'\'' : paint(upto, M_TAGSPACE), => IN_H2CSL_STAG_ATTR_SSTRING
'>' : paint(upto, M_TAGSPACE), paint(include, M_STAGC), => IN_CSL_DEFAULT
# Bail out
'/>' : paint(upto, M_TAGSPACE), paint(include, M_EMP_TAGC), => IN_M_DEFAULT
'<'    : paint(upto, M_TAGSPACE), redo => IN_M_DEFAULT

state IN_H2CSL_STAG_ATTR_DSTRING:
'"' : paint(include, M_STRING), => IN_H2CSL_STAG_POST_TAGNAME

state IN_H2CSL_STAG_ATTR_SSTRING:
'\'' : paint(include, M_STRING), => IN_H2CSL_STAG_POST_TAGNAME
