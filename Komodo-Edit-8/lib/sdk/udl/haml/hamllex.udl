# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is Komodo code.
# 
# The Initial Developer of the Original Code is ActiveState Software Inc.
# Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
# ActiveState Software Inc. All Rights Reserved.
# 
# Contributor(s):
#   ActiveState Software Inc
# 
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK *****

# haml udl -- no indentation-based processing yet

sublanguage HTML

family markup

pattern CS = '\w\d_\x80-\xff' # Add - when safe
pattern WS = '\s\t\r\n'
pattern LWS = '^[ \t]*'
pattern NMCHAR = '\w'
pattern NMSTART = '[a-zA-Z_]'
pattern NAME = '$NMSTART$NMCHAR*'

initial IN_M_DEFAULT

state IN_M_DEFAULT:
/$LWS(?=[$CS])/ : paint(include, M_DEFAULT) => IN_M_DEFAULT_LINE
/$LWS(?=\/)/ : paint(include, M_DEFAULT) => IN_M_COMMENT_LINE
'%' : paint(upto, M_DEFAULT), paint(include, M_OPERATOR), => IN_M_AFTER_TAG_PERCENT
/[\.#]/ : paint(upto, M_DEFAULT), paint(include, M_OPERATOR), => IN_M_AFTER_TAG_OP
/\\/ : paint(upto, M_DEFAULT), paint(include, M_OPERATOR), => IN_M_DEFAULT_LINE
'/' : paint(upto, M_DEFAULT), paint(include, M_OPERATOR), => IN_M_COMMENT_LINE
'!!!' : paint(upto, M_DEFAULT), paint(include, M_PI), => IN_M_DECLN_1

/[=\~\-]/ : paint(upto, M_TAGSPACE), at_eol(IN_M_DEFAULT) => IN_SSL_DEFAULT
/[$CS]/ : paint(upto, M_DEFAULT), redo => IN_M_DEFAULT_LINE


state IN_M_AFTER_TAG_PERCENT:
/$NAME/ : paint(upto, M_TAGSPACE), paint(include, M_TAGNAME), => IN_M_TAG

state IN_M_AFTER_TAG_OP:
/$NAME/ : paint(upto, M_TAGSPACE), paint(include, M_ATTRNAME), => IN_M_TAG

# Also see haml2ruby
state IN_M_TAG:
/[\.#]/ : paint(upto, M_TAGSPACE), paint(include, M_OPERATOR), => IN_M_AFTER_TAG_OP
'%' : paint(upto, M_DEFAULT), paint(include, M_OPERATOR), => IN_M_AFTER_TAG_PERCENT
/[\{\[]/ : paint(upto, M_TAGSPACE), paint(include, SSL_OPERATOR), \
    spush_check(IN_M_TAG) => IN_SSL_DEFAULT
/[=\~\-]/ : paint(upto, M_TAGSPACE), at_eol(IN_M_DEFAULT) => IN_SSL_DEFAULT
/\/(?=[$WS]*)$/ : paint(upto, M_TAGSPACE), paint(include, M_OPERATOR), => IN_M_DEFAULT
/[$CS]/ : paint(upto, M_TAGSPACE), redo => IN_M_DEFAULT_LINE
/$/ : paint(include, M_TAGSPACE) => IN_M_DEFAULT

state IN_M_DEFAULT_LINE:
/\|$/ : => IN_M_DEFAULT_LINE_GET_NEXT_LINE
/$/ : paint(include, M_DEFAULT) => IN_M_DEFAULT

state IN_M_DEFAULT_LINE_GET_NEXT_LINE:
/\|$/ : #stay
/$/ : paint(include, M_DEFAULT) => IN_M_DEFAULT
/./ : paint(upto, M_DEFAULT), redo => IN_M_DEFAULT_LINE

state IN_M_COMMENT_LINE:
/\|$/ : => IN_M_COMMENT_LINE_GET_NEXT_LINE
/$/ : paint(include, M_COMMENT) => IN_M_DEFAULT

state IN_M_COMMENT_LINE_GET_NEXT_LINE:
/\|$/ : #stay
/$/ : paint(include, M_COMMENT) => IN_M_DEFAULT
/./ : paint(upto, M_COMMENT), redo => IN_M_COMMENT_LINE

state IN_M_DECLN_1:
/$/ : paint(include, M_DEFAULT) => IN_M_DEFAULT
/\S+/ : paint(upto, M_DEFAULT), paint(include, M_PI)
