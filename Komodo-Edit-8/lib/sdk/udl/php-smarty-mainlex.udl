# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is Komodo code.
# 
# The Initial Developer of the Original Code is ActiveState Software Inc.
# Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
# ActiveState Software Inc. All Rights Reserved.
# 
# Contributor(s):
#   ActiveState Software Inc
# 
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK *****

# A typical template description file includes the following
# other detailed descriptions:

# One for each language "family" (markup:html, css, client-side:js,
# server-side: php)

# Transitions out of and back to markup(html) for each of the
# other language types.

# So this four-family template language needs 10 modules: 
# 4 sublanguages, 3 html=>x, and 3 x=>html

# keep in mind that the transition modules need to go before the
# main language modules.  This is because the lexer will attempt
# tests in the order they're given, and we want to attempt
# inter-language tests first.

# Implementation note:
# The inter-family transitions will reference pattern variables
# that are defined in the main module for each family.

include "html2js.udl"

include "html2css.udl"

include "html2php.udl"

include "html2smarty.udl"

include "css2html.udl"

include "js2html.udl"
include "js2php.udl"

include "php2html.udl"

include "smarty2html.udl"

language Smarty

include "html.udl"
include "csslex.udl"
include "jslex.udl"
include "phplex.udl"
include "smartylex.udl"
