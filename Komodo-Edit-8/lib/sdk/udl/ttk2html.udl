# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is Komodo code.
# 
# The Initial Developer of the Original Code is ActiveState Software Inc.
# Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
# ActiveState Software Inc. All Rights Reserved.
# 
# Contributor(s):
#   ActiveState Software Inc
# 
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK *****

# And back

family tpl

state IN_TPL_COMMENTBLOCK:
/-?%\]/ : paint(include, TPL_COMMENT), => IN_M_DEFAULT  # No push happened.

state IN_TPL_DEFAULT:
/-?%\]/ : paint(upto, TPL_DEFAULT), paint(include, TPL_OPERATOR), spop_check, => IN_M_DEFAULT

# This part actually works on Perl code, but put it here

family ssl

state IN_SSL_DEFAULT:
/\[%(?=\s|E)/ : paint(upto, SSL_DEFAULT), paint(include, TPL_OPERATOR), => IN_TPL_PERL_2_DEFAULT_1

state IN_TPL_PERL_2_DEFAULT_1:
/[\s]+/: #stay
# We need to do this a bit at a time, or the udl lexer will end
# up back in SSL for the rest of the expression.
'E' : paint(upto, TPL_DEFAULT) => IN_TPL_PERL_2_DEFAULT_2
/./ : paint(upto, TPL_DEFAULT), redo, => IN_SSL_DEFAULT

state IN_TPL_PERL_2_DEFAULT_2:
'N' : => IN_TPL_PERL_2_DEFAULT_3
/./ : paint(upto, TPL_IDENTIFIER), redo, => IN_SSL_DEFAULT

state IN_TPL_PERL_2_DEFAULT_3:
'D' :  => IN_TPL_PERL_2_DEFAULT_4
/./ : paint(upto, TPL_IDENTIFIER), redo, => IN_SSL_DEFAULT

state IN_TPL_PERL_2_DEFAULT_4
/[\w_\d]/ : paint(upto, TPL_IDENTIFIER), => IN_M_DEFAULT  # Reflect intentions
/./ : paint(upto, TPL_WORD), redo, => IN_TPL_PERL_2_DEFAULT_5

state IN_TPL_PERL_2_DEFAULT_5
/[\s]+/: #stay
/-?%\]/ : paint(upto, TPL_DEFAULT), paint(include, TPL_OPERATOR), => IN_M_DEFAULT
'#' : paint(upto, TPL_DEFAULT),  => IN_TPL_COMMENT
/./ : paint(upto, TPL_DEFAULT), redo, => IN_M_DEFAULT  # Reflect intentions



